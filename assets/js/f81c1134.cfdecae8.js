"use strict";(self.webpackChunktest_site=self.webpackChunktest_site||[]).push([[8130],{7735:n=>{n.exports=JSON.parse('{"archive":{"blogPosts":[{"id":"LeetCode238","metadata":{"permalink":"/blog/LeetCode238","editUrl":"https://github.com/EurekaShadow/EurekaShadow.github.io/tree/master/blog/2025-08-06-LeetCode238.mdx","source":"@site/blog/2025-08-06-LeetCode238.mdx","title":"\u9664\u81ea\u8eab\u4ee5\u5916\u6570\u7ec4\u7684\u4e58\u79ef","description":"\u529b\u6263\u9762\u8bd5\u7ecf\u5178\u2014\u2014238\u9898","date":"2025-08-06T00:00:00.000Z","tags":[{"inline":false,"label":"\u6570\u7ec4","permalink":"/blog/tags/\u6570\u7ec4","description":"\u5173\u4e8e\u6570\u7ec4\u7684\u9898\u76ee"}],"readingTime":2.96,"hasTruncateMarker":true,"authors":[{"name":"Eureka X","title":"Mr.Nobody","url":"https://github.com/EurekaShadow","page":{"permalink":"/blog/authors/all-Eureka-X-articles"},"socials":{"github":"https://github.com/EurekaShadow"},"imageURL":"https://github.com/EurekaShadow.png","key":"eurekaX"}],"frontMatter":{"slug":"LeetCode238","title":"\u9664\u81ea\u8eab\u4ee5\u5916\u6570\u7ec4\u7684\u4e58\u79ef","authors":"eurekaX","tags":["\u6570\u7ec4"]},"unlisted":false,"lastUpdatedAt":1754491423000,"nextItem":{"title":"O(1)\u65f6\u95f4\u63d2\u5165\u3001\u5220\u9664\u548c\u83b7\u53d6\u968f\u673a\u5143\u7d20\uff08\u8865\u5145\u89e3\u91ca\uff09","permalink":"/blog/LeetCode380plus"}},"content":"import { Highlight, Keyword, Light, B1, B2, B3, BH3, B3W, MyColor} from \'@site/src/components/ForMDX\';\\r\\n\\r\\n\\r\\n### <B2>[\u529b\u6263\u9762\u8bd5\u7ecf\u5178\u2014\u2014238\u9898](https://leetcode.cn/problems/product-of-array-except-self/description/?envType=study-plan-v2&envId=top-interview-150 \\"\u529b\u6263\\")</B2>\\r\\n\\r\\n\x3c!-- truncate --\x3e\\r\\n\\r\\n\\r\\n### \ud83d\udca1 \u53c2\u8003\u4ee3\u7801\uff1a\\r\\n\\r\\n```c\\r\\n/**\\r\\n * \u8ba1\u7b97\u6570\u7ec4\u4e2d\u9664\u5f53\u524d\u5143\u7d20\u5916\u5176\u4f59\u5404\u5143\u7d20\u7684\u4e58\u79ef\\r\\n * @param nums       \u8f93\u5165\u7684\u6574\u6570\u6570\u7ec4\\r\\n * @param numsSize   \u8f93\u5165\u6570\u7ec4\u7684\u5927\u5c0f\\r\\n * @param returnSize \u8f93\u51fa\u6570\u7ec4\u7684\u5927\u5c0f\uff0c\u7531\u51fd\u6570\u8bbe\u7f6e\\r\\n * @return           \u8fd4\u56de\u7ed3\u679c\u6570\u7ec4\uff0c\u5176\u4e2d\u6bcf\u4e2a\u5143\u7d20\u662f\u9664\u5bf9\u5e94\u4f4d\u7f6e\u5916\u5176\u4f59\u5143\u7d20\u7684\u4e58\u79ef\\r\\n * Note: The returned array must be malloced, assume caller calls free().\\r\\n */\\r\\nint* productExceptSelf(int* nums, int numsSize, int* returnSize){\\r\\n    // \u5206\u914d\u7ed3\u679c\u6570\u7ec4\u7a7a\u95f4\\r\\n    int* answer = (int*)malloc(numsSize * sizeof(int));\\r\\n    *returnSize = numsSize;\\r\\n    \\r\\n    // \u7b2c\u4e00\u6b21\u904d\u5386\uff1a\u8ba1\u7b97\u6bcf\u4e2a\u5143\u7d20\u5de6\u4fa7\u6240\u6709\u5143\u7d20\u7684\u4e58\u79ef\\r\\n    // answer[i] \u5b58\u50a8 nums[0] \u5230 nums[i-1] \u7684\u4e58\u79ef\\r\\n    answer[0] = 1;\\r\\n    for (int i = 1; i < numsSize; i++) {\\r\\n        answer[i] = answer[i - 1] * nums[i - 1];\\r\\n    }\\r\\n    \\r\\n    // \u7b2c\u4e8c\u6b21\u904d\u5386\uff1a\u4ece\u53f3\u5411\u5de6\u904d\u5386\uff0c\u5c06\u53f3\u4fa7\u5143\u7d20\u4e58\u79ef\u4e0e\u5de6\u4fa7\u4e58\u79ef\u76f8\u4e58\\r\\n    // rightProduct \u8bb0\u5f55\u5f53\u524d\u5143\u7d20\u53f3\u4fa7\u6240\u6709\u5143\u7d20\u7684\u4e58\u79ef\\r\\n    int rightProduct = 1;\\r\\n    for (int i = numsSize - 1; i >= 0; i--) {\\r\\n        answer[i] = answer[i] * rightProduct;\\r\\n        rightProduct *= nums[i];\\r\\n    }\\r\\n    \\r\\n    return answer;\\r\\n}\\r\\n```\\r\\n\\r\\n### \ud83d\udcd6 \u603b\u7ed3\uff1a\\r\\n\\r\\n<details>\\r\\n<summary>\u70b9\u51fb\u5c55\u5f00\u9898\u76ee\u603b\u7ed3</summary>\\r\\n# \ud83e\udd14 \u9664\u81ea\u8eab\u4ee5\u5916\u6570\u7ec4\u7684\u4e58\u79ef\\r\\n\\r\\n---\\r\\n\\r\\n## 1\ufe0f\u20e3 \u9898\u76ee\u6838\u5fc3\u4fe1\u606f\\r\\n\\r\\n\ud83c\udfaf **\u529f\u80fd\u63cf\u8ff0**\uff1a\u8ba1\u7b97\u6570\u7ec4\u4e2d\u9664\u5f53\u524d\u5143\u7d20\u5916\u5176\u4f59\u5404\u5143\u7d20\u7684\u4e58\u79ef\uff0c\u4e0d\u4f7f\u7528\u9664\u6cd5\u5e76\u5728O(n)\u65f6\u95f4\u590d\u6742\u5ea6\u5185\u5b8c\u6210\\r\\n\\r\\n\ud83d\udce5 **\u8f93\u5165\u8f93\u51fa**\uff1a\\r\\n- **\u8f93\u5165**\uff1a`nums`\u6574\u6570\u6570\u7ec4\uff0c`numsSize`\u6570\u7ec4\u957f\u5ea6\\r\\n- **\u8f93\u51fa**\uff1a\u8fd4\u56de\u65b0\u6570\u7ec4\uff0c\u5176\u4e2d\u6bcf\u4e2a\u5143\u7d20\u662f\u9664\u5bf9\u5e94\u4f4d\u7f6e\u5916\u5176\u4f59\u5143\u7d20\u7684\u4e58\u79ef\\r\\n\\r\\n---\\r\\n\\r\\n## 2\ufe0f\u20e3 \u5b9e\u73b0\u539f\u7406\\r\\n\\r\\n\ud83d\udca1 **\u6838\u5fc3\u601d\u8def**\uff1a\u5229\u7528\u524d\u7f00\u4e58\u79ef\u548c\u540e\u7f00\u4e58\u79ef\u7684\u601d\u60f3\uff0c\u5c06\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u7ed3\u679c\u5206\u89e3\u4e3a\u5de6\u4fa7\u5143\u7d20\u4e58\u79ef\u4e0e\u53f3\u4fa7\u5143\u7d20\u4e58\u79ef\u7684\u4e58\u79ef\\r\\n\\r\\n\ud83d\udccb **\u5b9e\u73b0\u6b65\u9aa4**\uff1a\\r\\n1. \u7b2c\u4e00\u6b21\u904d\u5386\u4ece\u5de6\u5230\u53f3\uff0c\u8ba1\u7b97\u6bcf\u4e2a\u4f4d\u7f6e\u5de6\u4fa7\u6240\u6709\u5143\u7d20\u7684\u4e58\u79ef\u5e76\u5b58\u50a8\\r\\n2. \u521d\u59cb\u5316\u53f3\u4fa7\u4e58\u79ef\u53d8\u91cf\u4e3a1\\r\\n3. \u7b2c\u4e8c\u6b21\u904d\u5386\u4ece\u53f3\u5230\u5de6\uff0c\u5c06\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u5de6\u4fa7\u4e58\u79ef\u4e0e\u53f3\u4fa7\u4e58\u79ef\u76f8\u4e58\\r\\n4. \u5728\u904d\u5386\u8fc7\u7a0b\u4e2d\u52a8\u6001\u66f4\u65b0\u53f3\u4fa7\u4e58\u79ef\u503c\\r\\n\\r\\n---\\r\\n\\r\\n## 3\ufe0f\u20e3 \u5173\u952e\u70b9\u89e3\u6790\\r\\n\\r\\n### \ud83c\udfaf \u4ee3\u7801\u6280\u5de7\\r\\n- \u5229\u7528\u8f93\u51fa\u6570\u7ec4\u5b58\u50a8\u5de6\u4fa7\u4e58\u79ef\uff0c\u8282\u7701\u989d\u5916\u7a7a\u95f4\\r\\n- \u4f7f\u7528\u5355\u53d8\u91cf\u8ddf\u8e2a\u53f3\u4fa7\u4e58\u79ef\uff0c\u907f\u514d\u989d\u5916\u6570\u7ec4\u5b58\u50a8\\r\\n- \u4e24\u6b21\u5355\u5c42\u5faa\u73af\u5b9e\u73b0O(n)\u65f6\u95f4\u590d\u6742\u5ea6\\r\\n\\r\\n## 4\ufe0f\u20e3 \u4f7f\u7528\u573a\u666f\\r\\n\\r\\n### \u2705 \u9002\u7528\u60c5\u51b5\uff1a\\r\\n- \u9700\u8981\u8ba1\u7b97\u6570\u7ec4\u5143\u7d20\u95f4\u4e58\u79ef\u5173\u7cfb\u7684\u573a\u666f\\r\\n- \u4e0d\u80fd\u4f7f\u7528\u9664\u6cd5\u8fd0\u7b97\u7684\u60c5\u51b5\\r\\n- \u5bf9\u7a7a\u95f4\u590d\u6742\u5ea6\u6709\u4e25\u683c\u8981\u6c42\u7684\u573a\u666f\\r\\n\\r\\n### \u26a0\ufe0f \u524d\u63d0\u6761\u4ef6\uff1a\\r\\n- \u8f93\u5165\u6570\u7ec4\u81f3\u5c11\u5305\u542b\u4e24\u4e2a\u5143\u7d20\\r\\n- \u6570\u7ec4\u4e2d\u5143\u7d20\u7684\u524d\u7f00\u548c\u540e\u7f00\u4e58\u79ef\u572832\u4f4d\u6574\u6570\u8303\u56f4\u5185\\r\\n\\r\\n## 5\ufe0f\u20e3 \u590d\u6742\u5ea6\u5206\u6790\\r\\n\\r\\n- \u23f1\ufe0f \u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n)\uff0c\u9700\u8981\u904d\u5386\u6570\u7ec4\u4e24\u6b21\\r\\n\\r\\n- \ud83d\udcbe \u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(1)\uff0c\u4e0d\u8003\u8651\u8f93\u51fa\u6570\u7ec4\u7684\u60c5\u51b5\u4e0b\u53ea\u4f7f\u7528\u5e38\u6570\u989d\u5916\u7a7a\u95f4\\r\\n\\r\\n## 6\ufe0f\u20e3 \u6ce8\u610f\u4e8b\u9879\\r\\n\\r\\n### \ud83d\udea9 \u8fb9\u754c\u60c5\u51b5\uff1a\\r\\n- \u6570\u7ec4\u4e2d\u5305\u542b0\u5143\u7d20\u7684\u60c5\u51b5\\r\\n- \u6570\u7ec4\u957f\u5ea6\u4e3a2\u7684\u6700\u5c0f\u60c5\u51b5\\r\\n- \u6b63\u8d1f\u6570\u6df7\u5408\u7684\u60c5\u51b5\\r\\n\\r\\n### \ud83d\udca5 \u6613\u9519\u70b9\uff1a\\r\\n- \u5fd8\u8bb0\u8bbe\u7f6ereturnSize\u53c2\u6570\\r\\n- \u6df7\u6dc6\u5de6\u4fa7\u4e58\u79ef\u548c\u53f3\u4fa7\u4e58\u79ef\u7684\u8ba1\u7b97\u65b9\u5411\\r\\n- \u5185\u5b58\u5206\u914d\u540e\u5fd8\u8bb0\u68c0\u67e5\u662f\u5426\u6210\u529f\\r\\n</details>"},{"id":"LeetCode380plus","metadata":{"permalink":"/blog/LeetCode380plus","editUrl":"https://github.com/EurekaShadow/EurekaShadow.github.io/tree/master/blog/2025-08-06-LeetCode380plus.mdx","source":"@site/blog/2025-08-06-LeetCode380plus.mdx","title":"O(1)\u65f6\u95f4\u63d2\u5165\u3001\u5220\u9664\u548c\u83b7\u53d6\u968f\u673a\u5143\u7d20\uff08\u8865\u5145\u89e3\u91ca\uff09","description":"\u529b\u6263\u9762\u8bd5\u7ecf\u5178\u2014\u2014380\u9898","date":"2025-08-06T00:00:00.000Z","tags":[{"inline":false,"label":"\u6570\u7ec4","permalink":"/blog/tags/\u6570\u7ec4","description":"\u5173\u4e8e\u6570\u7ec4\u7684\u9898\u76ee"}],"readingTime":9.05,"hasTruncateMarker":true,"authors":[{"name":"Eureka X","title":"Mr.Nobody","url":"https://github.com/EurekaShadow","page":{"permalink":"/blog/authors/all-Eureka-X-articles"},"socials":{"github":"https://github.com/EurekaShadow"},"imageURL":"https://github.com/EurekaShadow.png","key":"eurekaX"}],"frontMatter":{"slug":"LeetCode380plus","title":"O(1)\u65f6\u95f4\u63d2\u5165\u3001\u5220\u9664\u548c\u83b7\u53d6\u968f\u673a\u5143\u7d20\uff08\u8865\u5145\u89e3\u91ca\uff09","authors":"eurekaX","tags":["\u6570\u7ec4"]},"unlisted":false,"lastUpdatedAt":1754491423000,"prevItem":{"title":"\u9664\u81ea\u8eab\u4ee5\u5916\u6570\u7ec4\u7684\u4e58\u79ef","permalink":"/blog/LeetCode238"},"nextItem":{"title":"O(1)\u65f6\u95f4\u63d2\u5165\u3001\u5220\u9664\u548c\u83b7\u53d6\u968f\u673a\u5143\u7d20","permalink":"/blog/LeetCode380"}},"content":"import { Highlight, Keyword, Light, B1, B2, B3, BH3, B3W, MyColor} from \'@site/src/components/ForMDX\';\\r\\n\\r\\n\\r\\n### <B2>[\u529b\u6263\u9762\u8bd5\u7ecf\u5178\u2014\u2014380\u9898](https://leetcode.cn/problems/insert-delete-getrandom-o1/?envType=study-plan-v2&envId=top-interview-150 \\"\u529b\u6263\\")</B2>\\r\\n\\r\\n\x3c!-- truncate --\x3e\\r\\n\\r\\n<details>\\r\\n<summary>\ud83d\udcd8 \u5173\u4e8e\u6b64\u9898\u793a\u4f8b\u89e3\u91ca</summary>\\r\\n\\r\\n### \ud83d\udce5 \u8f93\u5165\u683c\u5f0f\u8bf4\u660e\\r\\n\\r\\n\u8f93\u5165\u5206\u4e3a\u4e24\u884c\uff1a\\r\\n\\r\\n- **\u7b2c\u4e00\u884c**\uff1a`[\\"RandomizedSet\\", \\"insert\\", \\"remove\\", \\"insert\\", \\"getRandom\\", \\"remove\\", \\"insert\\", \\"getRandom\\"]`\\r\\n  - \u8fd9\u662f\u8981\u6267\u884c\u7684\u64cd\u4f5c\u5e8f\u5217\\r\\n- **\u7b2c\u4e8c\u884c**\uff1a`[[], [1], [2], [2], [], [1], [2], []]`\\r\\n  - \u8fd9\u662f\u6bcf\u4e2a\u64cd\u4f5c\u5bf9\u5e94\u7684\u53c2\u6570\\r\\n\\r\\n## \ud83d\udd04 \u9010\u6b65\u6267\u884c\u8fc7\u7a0b\\r\\n\\r\\n\u8ba9\u6211\u6309\u7167\u65f6\u95f4\u987a\u5e8f\u6765\u89e3\u91ca\u6bcf\u4e00\u6b65\u53d1\u751f\u4e86\u4ec0\u4e48\uff1a\\r\\n\\r\\n### 1\ufe0f\u20e3 \u521b\u5efa\u5bf9\u8c61\\r\\n- **\u64cd\u4f5c**: `\\"RandomizedSet\\"` \\r\\n- **\u53c2\u6570**: `[]`\\r\\n- \u2728 \u521b\u5efa\u4e00\u4e2a\u65b0\u7684 `RandomizedSet` \u5bf9\u8c61\uff0c\u521d\u59cb\u4e3a\u7a7a\\r\\n- \ud83d\udcbe **\u5185\u5b58\u72b6\u6001**\uff1a\u6570\u7ec4\u4e3a\u7a7a\uff0c\u54c8\u5e0c\u8868\u4e3a\u7a7a\\r\\n\\r\\n### 2\ufe0f\u20e3 \u63d2\u5165\u5143\u7d20 1\\r\\n- **\u64cd\u4f5c**: `\\"insert\\"`\\r\\n- **\u53c2\u6570**: `[1]`\\r\\n- **\u6267\u884c**: `randomizedSet.insert(1)`\\r\\n- \ud83d\udd0d \u68c0\u67e5\u54c8\u5e0c\u8868\uff0c\u53d1\u73b0 1 \u4e0d\u5b58\u5728\\r\\n- \u2795 \u5c06 1 \u6dfb\u52a0\u5230\u6570\u7ec4\u4f4d\u7f6e 0\\r\\n- \ud83d\udcdd \u5728\u54c8\u5e0c\u8868\u4e2d\u8bb0\u5f55\uff1a1 \u2192 \u7d22\u5f15 0\\r\\n- \u2705 \u8fd4\u56de `true`\uff08\u63d2\u5165\u6210\u529f\uff09\\r\\n- \ud83d\udcca **\u5f53\u524d\u72b6\u6001**\uff1a\u6570\u7ec4 `[1]`\uff0c\u54c8\u5e0c\u8868 `{1: 0}`\\r\\n\\r\\n### 3\ufe0f\u20e3 \u5220\u9664\u5143\u7d20 2\\r\\n- **\u64cd\u4f5c**: `\\"remove\\"`\\r\\n- **\u53c2\u6570**: `[2]`\\r\\n- **\u6267\u884c**: `randomizedSet.remove(2)`\\r\\n- \ud83d\udd0d \u68c0\u67e5\u54c8\u5e0c\u8868\uff0c\u53d1\u73b0 2 \u4e0d\u5b58\u5728\\r\\n- \u274c \u65e0\u6cd5\u5220\u9664\u4e0d\u5b58\u5728\u7684\u5143\u7d20\\r\\n- \u274c \u8fd4\u56de `false`\uff08\u5220\u9664\u5931\u8d25\uff09\\r\\n- \ud83d\udd01 **\u72b6\u6001\u4e0d\u53d8**\uff1a\u6570\u7ec4 `[1]`\uff0c\u54c8\u5e0c\u8868 `{1: 0}`\\r\\n\\r\\n### 4\ufe0f\u20e3 \u63d2\u5165\u5143\u7d20 2\\r\\n- **\u64cd\u4f5c**: `\\"insert\\"`\\r\\n- **\u53c2\u6570**: `[2]`\\r\\n- **\u6267\u884c**: `randomizedSet.insert(2)`\\r\\n- \ud83d\udd0d \u68c0\u67e5\u54c8\u5e0c\u8868\uff0c\u53d1\u73b0 2 \u4e0d\u5b58\u5728\\r\\n- \u2795 \u5c06 2 \u6dfb\u52a0\u5230\u6570\u7ec4\u4f4d\u7f6e 1\\r\\n- \ud83d\udcdd \u5728\u54c8\u5e0c\u8868\u4e2d\u8bb0\u5f55\uff1a2 \u2192 \u7d22\u5f15 1\\r\\n- \u2705 \u8fd4\u56de `true`\uff08\u63d2\u5165\u6210\u529f\uff09\\r\\n- \ud83d\udcca **\u5f53\u524d\u72b6\u6001**\uff1a\u6570\u7ec4 `[1, 2]`\uff0c\u54c8\u5e0c\u8868 `{1: 0, 2: 1}`\\r\\n\\r\\n### 5\ufe0f\u20e3 \u968f\u673a\u83b7\u53d6\u5143\u7d20\\r\\n- **\u64cd\u4f5c**: `\\"getRandom\\"`\\r\\n- **\u53c2\u6570**: `[]`\\r\\n- **\u6267\u884c**: `randomizedSet.getRandom()`\\r\\n- \ud83c\udfb2 \u6570\u7ec4\u4e2d\u6709\u4e24\u4e2a\u5143\u7d20 `[1, 2]`\\r\\n- \ud83c\udfaf \u968f\u673a\u8fd4\u56de\u5176\u4e2d\u4e00\u4e2a\u5143\u7d20\uff08\u53ef\u80fd\u662f 1 \u6216 2\uff09\\r\\n- \ud83d\udccb \u793a\u4f8b\u4e2d\u663e\u793a\u8fd4\u56de\u4e86 `2`\\r\\n- \ud83d\udd01 **\u72b6\u6001\u4e0d\u53d8**\uff1a\u6570\u7ec4 `[1, 2]`\uff0c\u54c8\u5e0c\u8868 `{1: 0, 2: 1}`\\r\\n\\r\\n### 6\ufe0f\u20e3 \u5220\u9664\u5143\u7d20 1\\r\\n- **\u64cd\u4f5c**: `\\"remove\\"`\\r\\n- **\u53c2\u6570**: `[1]`\\r\\n- **\u6267\u884c**: `randomizedSet.remove(1)`\\r\\n- \ud83d\udd0d \u68c0\u67e5\u54c8\u5e0c\u8868\uff0c\u53d1\u73b0 1 \u5b58\u5728\uff0c\u7d22\u5f15\u4e3a 0\\r\\n- \ud83d\udd1a \u83b7\u53d6\u6570\u7ec4\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff1a2\\r\\n- \u2194\ufe0f \u5c06\u5143\u7d20 2 \u79fb\u52a8\u5230\u7d22\u5f15 0\uff08\u8986\u76d6\u5143\u7d20 1\uff09\\r\\n- \ud83d\udd04 \u66f4\u65b0\u54c8\u5e0c\u8868\u4e2d 2 \u7684\u7d22\u5f15\u4e3a 0\\r\\n- \ud83d\uddd1\ufe0f \u4ece\u54c8\u5e0c\u8868\u4e2d\u5220\u9664\u5143\u7d20 1 \u7684\u8bb0\u5f55\\r\\n- \u2705 \u8fd4\u56de `true`\uff08\u5220\u9664\u6210\u529f\uff09\\r\\n- \ud83d\udcca **\u5f53\u524d\u72b6\u6001**\uff1a\u6570\u7ec4 `[2]`\uff0c\u54c8\u5e0c\u8868 `{2: 0}`\\r\\n\\r\\n### 7\ufe0f\u20e3 \u63d2\u5165\u5143\u7d20 2\\r\\n- **\u64cd\u4f5c**: `\\"insert\\"`\\r\\n- **\u53c2\u6570**: `[2]`\\r\\n- **\u6267\u884c**: `randomizedSet.insert(2)`\\r\\n- \ud83d\udd0d \u68c0\u67e5\u54c8\u5e0c\u8868\uff0c\u53d1\u73b0 2 \u5df2\u7ecf\u5b58\u5728\\r\\n- \u26d4 \u4e0d\u5141\u8bb8\u91cd\u590d\u63d2\u5165\\r\\n- \u274c \u8fd4\u56de `false`\uff08\u63d2\u5165\u5931\u8d25\uff09\\r\\n- \ud83d\udd01 **\u72b6\u6001\u4e0d\u53d8**\uff1a\u6570\u7ec4 `[2]`\uff0c\u54c8\u5e0c\u8868 `{2: 0}`\\r\\n\\r\\n### 8\ufe0f\u20e3 \u968f\u673a\u83b7\u53d6\u5143\u7d20\\r\\n- **\u64cd\u4f5c**: `\\"getRandom\\"`\\r\\n- **\u53c2\u6570**: `[]`\\r\\n- **\u6267\u884c**: `randomizedSet.getRandom()`\\r\\n- \ud83c\udfaf \u6570\u7ec4\u4e2d\u53ea\u6709\u4e00\u4e2a\u5143\u7d20 `[2]`\\r\\n- \ud83c\udfb2 \u53ea\u80fd\u8fd4\u56de\u5143\u7d20 2\\r\\n- \u2705 \u8fd4\u56de `2`\\r\\n- \ud83d\udd01 **\u72b6\u6001\u4e0d\u53d8**\uff1a\u6570\u7ec4 `[2]`\uff0c\u54c8\u5e0c\u8868 `{2: 0}`\\r\\n\\r\\n## \ud83d\udce4 \u6700\u7ec8\u8f93\u51fa\u7ed3\u679c\\r\\n\\r\\n```c \\r\\n[null, true, false, true, 2, true, false, 2]\\r\\n```\\r\\n\\r\\n\\r\\n**\u5bf9\u5e94\u6bcf\u4e2a\u64cd\u4f5c\u7684\u8fd4\u56de\u503c**\uff1a\\r\\n\\r\\n1. `null` - \u521b\u5efa\u5bf9\u8c61\u4e0d\u8fd4\u56de\u503c\\r\\n2. `true` - \u6210\u529f\u63d2\u5165 1\\r\\n3. `false` - \u5220\u9664\u4e0d\u5b58\u5728\u7684 2 \u5931\u8d25\\r\\n4. `true` - \u6210\u529f\u63d2\u5165 2\\r\\n5. `2` - \u968f\u673a\u8fd4\u56de 2\uff08\u53ef\u80fd\u662f 1 \u6216 2\uff09\\r\\n6. `true` - \u6210\u529f\u5220\u9664 1\\r\\n7. `false` - \u63d2\u5165\u5df2\u5b58\u5728\u7684 2 \u5931\u8d25\\r\\n8. `2` - \u968f\u673a\u8fd4\u56de 2\uff08\u552f\u4e00\u5143\u7d20\uff09\\r\\n\\r\\n## \ud83d\udca1 \u5173\u952e\u7406\u89e3\u70b9\\r\\n\\r\\n- \ud83e\uddee **\u96c6\u5408\u7279\u6027**\uff1a\u4e0d\u5141\u8bb8\u91cd\u590d\u5143\u7d20\\r\\n- \ud83c\udfb2 **\u968f\u673a\u6027**\uff1a`getRandom` \u64cd\u4f5c\u662f\u968f\u673a\u7684\uff0c\u4f46\u5728\u793a\u4f8b\u4e2d\u4e3a\u4e86\u6f14\u793a\u65b9\u4fbf\uff0c\u7ed9\u51fa\u4e86\u5177\u4f53\u7ed3\u679c\\r\\n- \u26a1 **\u9ad8\u6548\u64cd\u4f5c**\uff1a\u6240\u6709\u64cd\u4f5c\u90fd\u662f O(1) \u65f6\u95f4\u590d\u6742\u5ea6\\r\\n- \ud83d\udd27 **\u5185\u90e8\u673a\u5236**\uff1a\u901a\u8fc7\u6570\u7ec4+\u54c8\u5e0c\u8868\u7684\u7ec4\u5408\u5b9e\u73b0\u9ad8\u6548\u64cd\u4f5c\\r\\n\\r\\n## \u26a0\ufe0f \u4ee3\u7801\u8bed\u6cd5\u8bf4\u660e\\r\\n\\r\\n\u8be5\u9898\u76ee\u793a\u4f8b\u89e3\u91ca\u4e2d\u7684\u8fd9\u53e5\u4ee3\u7801\uff1a\\r\\n```c\\r\\nRandomizedSet randomizedSet = new RandomizedSet();\\r\\n```\\r\\n\\r\\n\u8fd9\u5176\u5b9e\u662f\u4e00\u53e5**\u4f2a\u4ee3\u7801**\uff0c\u771f\u6b63\u7684C\u4ee3\u7801\u5e94\u8be5\u662f\uff1a\\r\\n```c \\r\\nRandomizedSet* randomizedSet = randomizedSetCreate();\\r\\n```\\r\\n\u56e0\u4e3a\u5728\u6211\u4eec\u4e4b\u524d\u7684\u4ee3\u7801\u4e2d\uff1a\\r\\n\\r\\n- `randomizedSetCreate()` \u51fd\u6570\u8d1f\u8d23\u5206\u914d\u5185\u5b58\u548c\u521d\u59cb\u5316\u5bf9\u8c61\\r\\n- \u5b83\u8fd4\u56de\u4e00\u4e2a\u6307\u5411 `RandomizedSet` \u7684\u6307\u9488\\r\\n\\r\\n\u8fd9\u53e5\u4e5f\u662f\u4f2a\u4ee3\u7801\uff1a\\r\\n```c \\r\\nrandomizedSet.insert(1);\\r\\n```\\r\\n\u771f\u6b63\u7684C\u4ee3\u7801\u5e94\u8be5\u662f\uff1a\\r\\n```c \\r\\nrandomizedSetInsert(randomizedSet, 1);\\r\\n```\\r\\n</details>\\r\\n\\r\\n<details>\\r\\n<summary>\u54c8\u5e0c\u8868\u4e0eUT_hash_handle</summary>\\r\\n\\r\\n## \ud83e\udd14 \u4e3a\u4ec0\u4e48\u9700\u8981\u54c8\u5e0c\u8868\uff1f\\r\\n\\r\\n\u56e0\u4e3a\u6570\u7ec4\u53ef\u4ee5\u5feb\u901f\u901a\u8fc7\u7d22\u5f15\u8bbf\u95ee\u5143\u7d20\uff0c\u4f46**\u65e0\u6cd5\u5feb\u901f\u67e5\u627e\u67d0\u4e2a\u503c\u662f\u5426\u5b58\u5728\u4e8e\u6570\u7ec4\u4e2d**\u3002\u6bd4\u5982\u6211\u4eec\u8981\u5220\u9664\u503c\u4e3a `5` \u7684\u5143\u7d20\uff0c\u6211\u4eec\u9700\u8981\u5148\u627e\u5230\u5b83\u5728\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e\uff0c\u8fd9\u5c31\u9700\u8981\u904d\u5386\u6574\u4e2a\u6570\u7ec4\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662f O(n)\u3002\\r\\n\\r\\n\u26a1 **\u54c8\u5e0c\u8868\u7684\u4f5c\u7528\u5c31\u662f\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff1a\u5feb\u901f\u67e5\u627e\u5143\u7d20\u5728\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e**\u3002\\r\\n\\r\\n### \ud83d\udd27 \u5173\u4e8e UT_hash_handle\\r\\n\\r\\n\u5f53\u4f60\u5b9a\u4e49\u4e86\u5305\u542b `UT_hash_handle` \u7684\u7ed3\u6784\u4f53\u540e\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e9b\u5b8f\uff1a\\r\\n\\r\\n```c\\r\\n// \ud83d\udd0d \u67e5\u627e\u5143\u7d20\\r\\nHASH_FIND_INT(obj->indices, &val, tmp);\\r\\n\\r\\n// \u2795 \u6dfb\u52a0\u5143\u7d20\\r\\nHASH_ADD_INT(obj->indices, value, tmp);\\r\\n\\r\\n// \ud83d\uddd1\ufe0f \u5220\u9664\u5143\u7d20\\r\\nHASH_DEL(obj->indices, tmp);\\r\\n\\r\\n// \ud83d\udd01 \u904d\u5386\u54c8\u5e0c\u8868\\r\\nHASH_ITER(hh, obj->indices, curr, tmp)\\r\\n```\\r\\n\\r\\n\u8fd9\u4e9b\u5b8f\u5185\u90e8\u4f1a\u901a\u8fc7 `hh` \u5b57\u6bb5\u6765\u64cd\u4f5c\u54c8\u5e0c\u8868\u7684\u5185\u90e8\u7ed3\u6784\u3002\\r\\n\\r\\n### \u2753 \u4e3a\u4ec0\u4e48\u5fc5\u987b\u5305\u542b\u8fd9\u4e2a\u5b57\u6bb5\uff1f\\r\\n```c \\r\\ntypedef struct {\\r\\n    int value;\\r\\n    int index;\\r\\n    UT_hash_handle hh;  // \u26a0\ufe0f \u5fc5\u987b\u5305\u542b\u8fd9\u4e2a\u5b57\u6bb5\\r\\n} HashItem;\\r\\n```\\r\\n\u2705 **uthash \u5b8f\u7684\u8981\u6c42**\uff1a\u6240\u6709\u4f7f\u7528 uthash \u7684\u7ed3\u6784\u4f53\u90fd\u5fc5\u987b\u5305\u542b\u4e00\u4e2a `UT_hash_handle` \u7c7b\u578b\u7684\u5b57\u6bb5\\r\\n\\r\\n\ud83d\udd17 **\u5185\u90e8\u7ba1\u7406\u9700\u8981**\uff1a\u6ca1\u6709\u8fd9\u4e2a\u5b57\u6bb5\uff0cuthash \u5c31\u65e0\u6cd5\u7ef4\u62a4\u54c8\u5e0c\u8868\u7684\u5185\u90e8\u94fe\u63a5\u5173\u7cfb\\r\\n\\r\\n\ud83c\udff7\ufe0f **\u547d\u540d\u53ef\u4ee5\u81ea\u5b9a\u4e49**\uff1a\u5b57\u6bb5\u540d\u4e0d\u4e00\u5b9a\u8981\u662f `hh`\uff0c\u53ef\u4ee5\u662f\u4efb\u4f55\u540d\u5b57\uff0c\u6bd4\u5982 `hash_handle`\\r\\n\\r\\n## \ud83d\udcdd \u603b\u7ed3\\r\\n\\r\\n`UT_hash_handle hh` \u662f\uff1a\\r\\n\\r\\n\ud83d\udd39 \u4e00\u4e2a\u7531 uthash \u5e93\u5b9a\u4e49\u7684\u7ed3\u6784\u4f53\u5b57\u6bb5\\r\\n\\r\\n\ud83d\udd17 \u7528\u4e8e\u7ef4\u62a4\u54c8\u5e0c\u8868\u5185\u90e8\u7684\u94fe\u63a5\u5173\u7cfb\\r\\n\\r\\n\ud83d\udd11 \u662f\u4f7f\u7528 uthash \u5b8f\u64cd\u4f5c\u54c8\u5e0c\u8868\u7684\u5fc5\u8981\u6761\u4ef6\\r\\n\\r\\n\ud83d\udd04 \u7c7b\u4f3c\u4e8e\u94fe\u8868\u8282\u70b9\u4e2d\u7684 `next` \u6307\u9488\uff0c\u4f46\u529f\u80fd\u66f4\u590d\u6742\\r\\n</details>\\r\\n\\r\\n<details>\\r\\n<summary>randomizedSetCreate \u51fd\u6570\u8be6\u89e3</summary>\\r\\n\\r\\n\u8fd9\u4e2a\u51fd\u6570\u662f `RandomizedSet` \u6570\u636e\u7ed3\u6784\u7684**\u6784\u9020\u51fd\u6570**\uff0c\u7528\u4e8e\u521b\u5efa\u548c\u521d\u59cb\u5316\u4e00\u4e2a\u65b0\u7684 `RandomizedSet` \u5bf9\u8c61\u3002\\r\\n\\r\\n## \u51fd\u6570\u9010\u884c\u89e3\u6790randomizedSetCreate\\r\\n```c\\r\\nRandomizedSet* randomizedSetCreate() {\\r\\n    srand(time(NULL)); // \u521d\u59cb\u5316\u968f\u673a\u6570\u79cd\u5b50\\r\\n    RandomizedSet* obj = (RandomizedSet*)malloc(sizeof(RandomizedSet));\\r\\n    obj->nums = (int*)malloc(sizeof(int) * 200000); // \u9884\u5206\u914d\u8db3\u591f\u7a7a\u95f4\\r\\n    obj->numsSize = 0;                              // \u521d\u59cb\u5143\u7d20\u4e2a\u6570\u4e3a0\\r\\n    obj->indices = NULL;                            // \u54c8\u5e0c\u8868\u521d\u59cb\u4e3a\u7a7a\\r\\n    return obj;\\r\\n}\\r\\n```\\r\\n**1. `srand(time(NULL));` - \u521d\u59cb\u5316\u968f\u673a\u6570\u79cd\u5b50**\\r\\n- `srand()` \u662fC\u6807\u51c6\u5e93\u51fd\u6570\uff0c\u7528\u4e8e\u8bbe\u7f6e\u968f\u673a\u6570\u751f\u6210\u5668\u7684\u79cd\u5b50\\r\\n- `time(NULL)` \u8fd4\u56de\u5f53\u524d\u65f6\u95f4\u6233\u4f5c\u4e3a\u79cd\u5b50\\r\\n- \u8fd9\u6837\u53ef\u4ee5\u786e\u4fdd\u6bcf\u6b21\u7a0b\u5e8f\u8fd0\u884c\u65f6\u751f\u6210\u7684\u968f\u673a\u6570\u5e8f\u5217\u90fd\u4e0d\u540c\\r\\n- \u4e3a\u540e\u7eed\u7684 `randomizedSetGetRandom()` \u51fd\u6570\u505a\u51c6\u5907\\r\\n\\r\\n**2. `RandomizedSet* obj = (RandomizedSet*)malloc(sizeof(RandomizedSet));` - \u5206\u914d\u4e3b\u5bf9\u8c61\u5185\u5b58**\\r\\n- `malloc()` \u5206\u914d\u5185\u5b58\\r\\n- `sizeof(RandomizedSet)` \u8ba1\u7b97 `RandomizedSet` \u7ed3\u6784\u4f53\u6240\u9700\u5b57\u8282\u6570\\r\\n- \u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u4e3a `RandomizedSet*` \u6307\u9488\u7c7b\u578b\\r\\n- \u8fd9\u91cc\u521b\u5efa\u4e86\u4e3b\u5bf9\u8c61\uff0c\u4f46\u5176\u4e2d\u7684\u6210\u5458\u8fd8\u672a\u521d\u59cb\u5316\\r\\n\\r\\n**3. `obj->nums = (int*)malloc(sizeof(int) * 200000);` - \u5206\u914d\u6570\u7ec4\u5185\u5b58**\\r\\n- \u4e3a\u5b58\u50a8\u5b9e\u9645\u5143\u7d20\u7684\u6570\u7ec4 `nums` \u5206\u914d\u5185\u5b58\\r\\n- \u9884\u5206\u914d 200000 \u4e2a `int` \u7684\u7a7a\u95f4\uff08\u9898\u76ee\u9650\u5236\u6700\u5927\u8c03\u7528\u6b21\u6570\uff09\\r\\n- \u8fd9\u6837\u907f\u514d\u4e86\u52a8\u6001\u6269\u5bb9\u7684\u5f00\u9500\uff0c\u63d0\u9ad8\u6027\u80fd\\r\\n\\r\\n**4. `obj->numsSize = 0;` - \u521d\u59cb\u5316\u5143\u7d20\u8ba1\u6570**\\r\\n- \u8bbe\u7f6e\u6570\u7ec4\u5f53\u524d\u5143\u7d20\u4e2a\u6570\u4e3a 0\\r\\n- \u8868\u793a\u521a\u5f00\u59cb\u65f6\u96c6\u5408\u4e3a\u7a7a\\r\\n\\r\\n**5. `obj->indices = NULL;` - \u521d\u59cb\u5316\u54c8\u5e0c\u8868**\\r\\n- \u5c06\u54c8\u5e0c\u8868\u6307\u9488\u8bbe\u7f6e\u4e3a NULL\\r\\n- \u5728 uthash \u5e93\u4e2d\uff0cNULL \u8868\u793a\u7a7a\u7684\u54c8\u5e0c\u8868\\r\\n- \u8fd9\u662f uthash \u5e93\u8981\u6c42\u7684\u521d\u59cb\u5316\u65b9\u5f0f\\r\\n\\r\\n**6. `return obj;` - \u8fd4\u56de\u521b\u5efa\u7684\u5bf9\u8c61**\\r\\n- \u8fd4\u56de\u6307\u5411\u65b0\u521b\u5efa\u5bf9\u8c61\u7684\u6307\u9488\\r\\n- \u8c03\u7528\u8005\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a\u6307\u9488\u4f7f\u7528\u5bf9\u8c61\u7684\u5404\u79cd\u65b9\u6cd5\\r\\n\\r\\n## \u5185\u5b58\u5e03\u5c40\u793a\u610f\u56fe\\r\\n\\r\\n\u521b\u5efa\u5b8c\u6210\u540e\uff0c\u5185\u5b58\u7ed3\u6784\u5982\u4e0b\uff1a\\r\\n\\r\\n```\\r\\nRandomizedSet \u5bf9\u8c61:\\r\\n+------------+\\r\\n| nums       | ---\x3e [int \u6570\u7ec4\uff0c\u5927\u5c0f\u4e3a200000\uff0c\u521d\u59cb\u4e3a\u7a7a]\\r\\n+------------+\\r\\n| numsSize   | = 0\\r\\n+------------+\\r\\n| indices    | = NULL (\u7a7a\u54c8\u5e0c\u8868)\\r\\n+------------+\\r\\n```\\r\\n\\r\\n## \u91cd\u8981\u8bbe\u8ba1\u8003\u8651\\r\\n1. **\u9884\u5206\u914d\u6570\u7ec4\u7a7a\u95f4**\uff1a\u907f\u514d\u52a8\u6001\u6269\u5bb9\uff0c\u63d0\u9ad8\u6027\u80fd\\r\\n2. **\u968f\u673a\u6570\u79cd\u5b50\u521d\u59cb\u5316**\uff1a\u786e\u4fdd\u968f\u673a\u6027\\r\\n3. **\u6b63\u786e\u7684\u521d\u59cb\u5316**\uff1a\u6240\u6709\u6210\u5458\u90fd\u88ab\u6b63\u786e\u521d\u59cb\u5316\\r\\n4. **\u5185\u5b58\u7ba1\u7406**\uff1a\u4e3a\u540e\u7eed\u7684\u63d2\u5165\u3001\u5220\u9664\u64cd\u4f5c\u505a\u597d\u51c6\u5907\\r\\n\\r\\n## \u4f7f\u7528\u793a\u4f8b\\r\\n\\r\\n```c\\r\\n// \u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u521b\u5efa\u5bf9\u8c61\\r\\nRandomizedSet* mySet = randomizedSetCreate();\\r\\n\\r\\n// \u73b0\u5728\u53ef\u4ee5\u4f7f\u7528 mySet \u8fdb\u884c\u5404\u79cd\u64cd\u4f5c\\r\\n// randomizedSetInsert(mySet, 1);\\r\\n// randomizedSetRemove(mySet, 1);\\r\\n// randomizedSetGetRandom(mySet);\\r\\n```\\r\\n</details>\\r\\n\\r\\n<details>\\r\\n<summary>randomizedSetInsert \u51fd\u6570\u8be6\u89e3</summary>\\r\\n\\r\\n## \u51fd\u6570\u9010\u6b65\u89e3\u6790 randomizedSetInsert\\r\\n\\r\\n\u8fd9\u4e2a\u51fd\u6570\u7528\u4e8e\u5411 `RandomizedSet` \u96c6\u5408\u4e2d\u63d2\u5165\u4e00\u4e2a\u65b0\u5143\u7d20\uff0c\u786e\u4fdd\u96c6\u5408\u4e2d\u6ca1\u6709\u91cd\u590d\u5143\u7d20\u3002\\r\\n\\r\\n### \u51fd\u6570\u7b7e\u540d\u89e3\u6790\\r\\n\\r\\n```c\\r\\nbool randomizedSetInsert(RandomizedSet* obj, int val)\\r\\n```\\r\\n- **\u8fd4\u56de\u7c7b\u578b**: `bool` - \u63d2\u5165\u6210\u529f\u8fd4\u56de `true`\uff0c\u5931\u8d25\u8fd4\u56de `false`\\r\\n- **\u53c2\u65701**: `RandomizedSet* obj` - \u6307\u5411\u8981\u64cd\u4f5c\u7684 `RandomizedSet` \u5bf9\u8c61\\r\\n- **\u53c2\u65702**: `int val` - \u8981\u63d2\u5165\u7684\u5143\u7d20\u503c\\r\\n\\r\\n\\r\\n```c \\r\\nbool randomizedSetInsert(RandomizedSet* obj, int val) {\\r\\n    HashItem* tmp = NULL;\\r\\n    // \u5728\u54c8\u5e0c\u8868\u4e2d\u67e5\u627e\u5143\u7d20\u662f\u5426\u5df2\u5b58\u5728\\r\\n    HASH_FIND_INT(obj->indices, &val, tmp);\\r\\n    if (tmp != NULL) {\\r\\n        return false; // \u5143\u7d20\u5df2\u5b58\u5728\uff0c\u63d2\u5165\u5931\u8d25\\r\\n    }\\r\\n    \\r\\n    // \u5c06\u65b0\u5143\u7d20\u6dfb\u52a0\u5230\u6570\u7ec4\u672b\u5c3e\\r\\n    obj->nums[obj->numsSize] = val;\\r\\n    \\r\\n    // \u5728\u54c8\u5e0c\u8868\u4e2d\u521b\u5efa\u65b0\u8282\u70b9\uff0c\u8bb0\u5f55\u5143\u7d20\u503c\u548c\u5176\u5728\u6570\u7ec4\u4e2d\u7684\u7d22\u5f15\\r\\n    tmp = (HashItem*)malloc(sizeof(HashItem));\\r\\n    tmp->value = val;\\r\\n    tmp->index = obj->numsSize;\\r\\n    HASH_ADD_INT(obj->indices, value, tmp);\\r\\n    \\r\\n    obj->numsSize++; // \u6570\u7ec4\u5143\u7d20\u4e2a\u6570\u589e\u52a0\\r\\n    return true;\\r\\n}\\r\\n```\\r\\n**\u6b65\u9aa41\uff1a\u68c0\u67e5\u5143\u7d20\u662f\u5426\u5df2\u5b58\u5728**\\r\\n```c\\r\\nHashItem* tmp = NULL;\\r\\n// \u5728\u54c8\u5e0c\u8868\u4e2d\u67e5\u627e\u5143\u7d20\u662f\u5426\u5df2\u5b58\u5728\\r\\nHASH_FIND_INT(obj->indices, &val, tmp);\\r\\nif (tmp != NULL) {\\r\\n    return false; // \u5143\u7d20\u5df2\u5b58\u5728\uff0c\u63d2\u5165\u5931\u8d25\\r\\n}\\r\\n```\\r\\n- \u521d\u59cb\u5316\u4e00\u4e2a\u4e34\u65f6\u6307\u9488 `tmp` \u4e3a `NULL`\\r\\n- \u4f7f\u7528 `HASH_FIND_INT` \u5b8f\u5728\u54c8\u5e0c\u8868\u4e2d\u67e5\u627e\u503c\u4e3a `val` \u7684\u5143\u7d20\\r\\n- \u5982\u679c\u627e\u5230\u4e86\uff08`tmp != NULL`\uff09\uff0c\u8bf4\u660e\u5143\u7d20\u5df2\u5b58\u5728\uff0c\u76f4\u63a5\u8fd4\u56de `false`\\r\\n\\r\\n**\u6b65\u9aa42\uff1a\u63d2\u5165\u65b0\u5143\u7d20\u5230\u6570\u7ec4**\\r\\n```c \\r\\nobj->nums[obj->numsSize] = val;\\r\\n```\\r\\n- \u5c06\u65b0\u5143\u7d20 `val` \u6dfb\u52a0\u5230\u6570\u7ec4 `nums` \u7684\u7d22\u5f15 `numsSize` \u5904\\r\\n\\r\\n**\u6b65\u9aa43\uff1a\u66f4\u65b0\u54c8\u5e0c\u8868\u6620\u5c04\u5173\u7cfb**\\r\\n```c \\r\\ntmp = (HashItem*)malloc(sizeof(HashItem));\\r\\ntmp->value = val;\\r\\ntmp->index = obj->numsSize;\\r\\nHASH_ADD_INT(obj->indices, value, tmp);\\r\\n```\\r\\n- \u4e3a\u65b0\u5143\u7d20\u5206\u914d\u54c8\u5e0c\u8868\u8282\u70b9\u5185\u5b58 `HashItem`\\r\\n- \u8bbe\u7f6e\u8282\u70b9\u7684\u503c `value` \u4e3a\u63d2\u5165\u7684\u5143\u7d20\u503c\\r\\n- \u8bbe\u7f6e\u8282\u70b9\u7684\u7d22\u5f15 `index` \u4e3a\u8be5\u5143\u7d20\u5728\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e\\r\\n- \u4f7f\u7528 `HASH_ADD_INT` \u5b8f\u5c06\u65b0\u8282\u70b9\u6dfb\u52a0\u5230\u54c8\u5e0c\u8868\u4e2d\\r\\n\\r\\n**\u6b65\u9aa44\uff1a\u66f4\u65b0 numsSize \u5927\u5c0f**\\r\\n```c \\r\\nobj->numsSize++;\\r\\nreturn true;\\r\\n```\\r\\n- \u5c06\u6570\u7ec4\u5143\u7d20\u8ba1\u6570\u5668 `numsSize` \u589e\u52a01\\r\\n- \u8fd4\u56de `true` \u8868\u793a\u63d2\u5165\u6210\u529f\\r\\n\\r\\n### \u6570\u636e\u7ed3\u6784\u8bbe\u8ba1\u7279\u70b9\\r\\n\\r\\n1. \u57fa\u4e8eUTHash\u5e93\uff1a\\r\\n- \u4f7f\u7528 `HASH_FIND_INT` \u548c `HASH_ADD_INT` \u5b9e\u73b0\u54c8\u5e0c\u8868\u64cd\u4f5c\\r\\n- \u54c8\u5e0c\u8868\u5b58\u50a8 `HashItem` \u7ed3\u6784\u4f53\uff0c\u7ef4\u62a4\u5143\u7d20\u503c\u5230\u6570\u7ec4\u7d22\u5f15\u7684\u6620\u5c04\\r\\n\\r\\n2. \u6570\u7ec4+\u54c8\u5e0c\u8868\u7ec4\u5408\uff1a\\r\\n- \u6570\u7ec4 `nums` \u5b58\u50a8\u5b9e\u9645\u5143\u7d20\u503c\\r\\n- \u54c8\u5e0c\u8868 `indices` \u7ef4\u62a4\u5143\u7d20\u503c\u5230\u7d22\u5f15\u7684\u6620\u5c04\u5173\u7cfb\\r\\n\\r\\n3. \u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\r\\n- \u63d2\u5165\u64cd\u4f5c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(1)\\r\\n\\r\\n### \u5173\u952e\u6570\u636e\u7ed3\u6784\\r\\n- `HashItem`\uff1a\u5305\u542b `value`\uff08\u5143\u7d20\u503c\uff09\u548c `index`\uff08\u5728\u6570\u7ec4\u4e2d\u7684\u7d22\u5f15\uff09\\r\\n- `nums` \u6570\u7ec4\uff1a\u5b58\u50a8\u6240\u6709\u63d2\u5165\u7684\u5143\u7d20\\r\\n- `numsSize`\uff1a\u8bb0\u5f55\u5f53\u524d\u6570\u7ec4\u4e2d\u5143\u7d20\u7684\u6570\u91cf\\r\\n\\r\\n</details>\\r\\n\\r\\n<details>\\r\\n<summary>\u70b9\u51fb\u5c55\u5f00\u9898\u76ee\u603b\u7ed3</summary>\\r\\n\\r\\n</details>\\r\\n\\r\\n### \ud83d\udca1 \u53c2\u8003\u4ee3\u7801\uff1a\\r\\n\\r\\n```c\\r\\ncode\\r\\n```\\r\\n\\r\\n### \ud83d\udcd6 \u603b\u7ed3\uff1a\\r\\n\\r\\n<details>\\r\\n<summary>\u70b9\u51fb\u5c55\u5f00\u9898\u76ee\u603b\u7ed3</summary>\\r\\n\\r\\n</details>"},{"id":"LeetCode380","metadata":{"permalink":"/blog/LeetCode380","editUrl":"https://github.com/EurekaShadow/EurekaShadow.github.io/tree/master/blog/2025-08-05-LeetCode380.mdx","source":"@site/blog/2025-08-05-LeetCode380.mdx","title":"O(1)\u65f6\u95f4\u63d2\u5165\u3001\u5220\u9664\u548c\u83b7\u53d6\u968f\u673a\u5143\u7d20","description":"\u529b\u6263\u9762\u8bd5\u7ecf\u5178\u2014\u2014380\u9898","date":"2025-08-05T00:00:00.000Z","tags":[{"inline":false,"label":"\u6570\u7ec4","permalink":"/blog/tags/\u6570\u7ec4","description":"\u5173\u4e8e\u6570\u7ec4\u7684\u9898\u76ee"}],"readingTime":16.51,"hasTruncateMarker":true,"authors":[{"name":"Eureka X","title":"Mr.Nobody","url":"https://github.com/EurekaShadow","page":{"permalink":"/blog/authors/all-Eureka-X-articles"},"socials":{"github":"https://github.com/EurekaShadow"},"imageURL":"https://github.com/EurekaShadow.png","key":"eurekaX"}],"frontMatter":{"slug":"LeetCode380","title":"O(1)\u65f6\u95f4\u63d2\u5165\u3001\u5220\u9664\u548c\u83b7\u53d6\u968f\u673a\u5143\u7d20","authors":"eurekaX","tags":["\u6570\u7ec4"]},"unlisted":false,"lastUpdatedAt":1754491423000,"prevItem":{"title":"O(1)\u65f6\u95f4\u63d2\u5165\u3001\u5220\u9664\u548c\u83b7\u53d6\u968f\u673a\u5143\u7d20\uff08\u8865\u5145\u89e3\u91ca\uff09","permalink":"/blog/LeetCode380plus"},"nextItem":{"title":"H \u6307\u6570","permalink":"/blog/LeetCode274"}},"content":"import { Highlight, Keyword, Light, B1, B2, B3, BH3, B3W, MyColor} from \'@site/src/components/ForMDX\';\\r\\n\\r\\n\\r\\n### <B2>[\u529b\u6263\u9762\u8bd5\u7ecf\u5178\u2014\u2014380\u9898](https://leetcode.cn/problems/insert-delete-getrandom-o1/?envType=study-plan-v2&envId=top-interview-150 \\"\u529b\u6263\\")</B2>\\r\\n\\r\\n\x3c!-- truncate --\x3e\\r\\n\\r\\n\\r\\n### \ud83d\udca1 \u53c2\u8003\u4ee3\u7801\uff1a\\r\\n\\r\\n```c\\r\\n/**\\r\\n * \u54c8\u5e0c\u8868\u8282\u70b9\u7ed3\u6784\u4f53\\r\\n * \u7528\u4e8e\u5b58\u50a8\u5143\u7d20\u503c\u548c\u5176\u5728\u6570\u7ec4\u4e2d\u7684\u7d22\u5f15\u4f4d\u7f6e\\r\\n */\\r\\ntypedef struct {\\r\\n    int value;              // \u5143\u7d20\u503c\\r\\n    int index;              // \u8be5\u5143\u7d20\u5728\u6570\u7ec4\u4e2d\u7684\u7d22\u5f15\u4f4d\u7f6e\\r\\n    UT_hash_handle hh;      // uthash\u5e93\u6240\u9700\u7684\u53e5\u67c4\\r\\n} HashItem;\\r\\n\\r\\n/**\\r\\n * RandomizedSet\u7ed3\u6784\u4f53\\r\\n * \u7ec4\u5408\u6570\u7ec4\u548c\u54c8\u5e0c\u8868\u5b9e\u73b0O(1)\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u63d2\u5165\u3001\u5220\u9664\u548c\u968f\u673a\u83b7\u53d6\u64cd\u4f5c\\r\\n */\\r\\ntypedef struct {\\r\\n    int* nums;              // \u5b58\u50a8\u5b9e\u9645\u5143\u7d20\u7684\u6570\u7ec4\\r\\n    int numsSize;           // \u5f53\u524d\u6570\u7ec4\u4e2d\u5143\u7d20\u7684\u4e2a\u6570\\r\\n    HashItem* indices;      // \u54c8\u5e0c\u8868\uff0c\u5b58\u50a8\u5143\u7d20\u503c\u5230\u7d22\u5f15\u7684\u6620\u5c04\\r\\n} RandomizedSet;\\r\\n\\r\\n/**\\r\\n * \u521b\u5efaRandomizedSet\u5bf9\u8c61\\r\\n * @return \u65b0\u521b\u5efa\u7684RandomizedSet\u5bf9\u8c61\u6307\u9488\\r\\n */\\r\\nRandomizedSet* randomizedSetCreate() {\\r\\n    srand(time(NULL)); // \u521d\u59cb\u5316\u968f\u673a\u6570\u79cd\u5b50\\r\\n    RandomizedSet* obj = (RandomizedSet*)malloc(sizeof(RandomizedSet));\\r\\n    obj->nums = (int*)malloc(sizeof(int) * 200000); // \u9884\u5206\u914d\u8db3\u591f\u7a7a\u95f4\\r\\n    obj->numsSize = 0;                              // \u521d\u59cb\u5143\u7d20\u4e2a\u6570\u4e3a0\\r\\n    obj->indices = NULL;                            // \u54c8\u5e0c\u8868\u521d\u59cb\u4e3a\u7a7a\\r\\n    return obj;\\r\\n}\\r\\n\\r\\n/**\\r\\n * \u5411\u96c6\u5408\u4e2d\u63d2\u5165\u5143\u7d20\\r\\n * @param obj RandomizedSet\u5bf9\u8c61\u6307\u9488\\r\\n * @param val \u8981\u63d2\u5165\u7684\u5143\u7d20\u503c\\r\\n * @return \u63d2\u5165\u6210\u529f\u8fd4\u56detrue\uff0c\u5143\u7d20\u5df2\u5b58\u5728\u8fd4\u56defalse\\r\\n */\\r\\nbool randomizedSetInsert(RandomizedSet* obj, int val) {\\r\\n    HashItem* tmp = NULL;\\r\\n    // \u5728\u54c8\u5e0c\u8868\u4e2d\u67e5\u627e\u5143\u7d20\u662f\u5426\u5df2\u5b58\u5728\\r\\n    HASH_FIND_INT(obj->indices, &val, tmp);\\r\\n    if (tmp != NULL) {\\r\\n        return false; // \u5143\u7d20\u5df2\u5b58\u5728\uff0c\u63d2\u5165\u5931\u8d25\\r\\n    }\\r\\n    \\r\\n    // \u5c06\u65b0\u5143\u7d20\u6dfb\u52a0\u5230\u6570\u7ec4\u672b\u5c3e\\r\\n    obj->nums[obj->numsSize] = val;\\r\\n    \\r\\n    // \u5728\u54c8\u5e0c\u8868\u4e2d\u521b\u5efa\u65b0\u8282\u70b9\uff0c\u8bb0\u5f55\u5143\u7d20\u503c\u548c\u5176\u5728\u6570\u7ec4\u4e2d\u7684\u7d22\u5f15\\r\\n    tmp = (HashItem*)malloc(sizeof(HashItem));\\r\\n    tmp->value = val;\\r\\n    tmp->index = obj->numsSize;\\r\\n    HASH_ADD_INT(obj->indices, value, tmp);\\r\\n    \\r\\n    obj->numsSize++; // \u6570\u7ec4\u5143\u7d20\u4e2a\u6570\u589e\u52a0\\r\\n    return true;\\r\\n}\\r\\n\\r\\n/**\\r\\n * \u4ece\u96c6\u5408\u4e2d\u5220\u9664\u5143\u7d20\\r\\n * @param obj RandomizedSet\u5bf9\u8c61\u6307\u9488\\r\\n * @param val \u8981\u5220\u9664\u7684\u5143\u7d20\u503c\\r\\n * @return \u5220\u9664\u6210\u529f\u8fd4\u56detrue\uff0c\u5143\u7d20\u4e0d\u5b58\u5728\u8fd4\u56defalse\\r\\n */\\r\\nbool randomizedSetRemove(RandomizedSet* obj, int val) {\\r\\n    HashItem* tmp = NULL;\\r\\n    // \u5728\u54c8\u5e0c\u8868\u4e2d\u67e5\u627e\u8981\u5220\u9664\u7684\u5143\u7d20\\r\\n    HASH_FIND_INT(obj->indices, &val, tmp);\\r\\n    if (tmp == NULL) {\\r\\n        return false; // \u5143\u7d20\u4e0d\u5b58\u5728\uff0c\u5220\u9664\u5931\u8d25\\r\\n    }\\r\\n    \\r\\n    // \u83b7\u53d6\u8981\u5220\u9664\u5143\u7d20\u5728\u6570\u7ec4\u4e2d\u7684\u7d22\u5f15\u4f4d\u7f6e\\r\\n    int index = tmp->index;\\r\\n    \\r\\n    // \u83b7\u53d6\u6570\u7ec4\u4e2d\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u503c\\r\\n    int lastValue = obj->nums[obj->numsSize - 1];\\r\\n    // \u5c06\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u79fb\u52a8\u5230\u8981\u5220\u9664\u5143\u7d20\u7684\u4f4d\u7f6e\uff08\u8986\u76d6\u8981\u5220\u9664\u7684\u5143\u7d20\uff09\\r\\n    obj->nums[index] = lastValue;\\r\\n    \\r\\n    // \u66f4\u65b0\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u5728\u54c8\u5e0c\u8868\u4e2d\u7684\u7d22\u5f15\u4f4d\u7f6e\\r\\n    HashItem* lastItem = NULL;\\r\\n    HASH_FIND_INT(obj->indices, &lastValue, lastItem);\\r\\n    if (lastItem != NULL) {\\r\\n        lastItem->index = index;\\r\\n    }\\r\\n    \\r\\n    // \u4ece\u54c8\u5e0c\u8868\u4e2d\u5220\u9664\u76ee\u6807\u5143\u7d20\u8282\u70b9\u5e76\u91ca\u653e\u5185\u5b58\\r\\n    HASH_DEL(obj->indices, tmp);\\r\\n    free(tmp);\\r\\n    \\r\\n    obj->numsSize--; // \u6570\u7ec4\u5143\u7d20\u4e2a\u6570\u51cf\u5c11\\r\\n    return true;\\r\\n}\\r\\n\\r\\n/**\\r\\n * \u968f\u673a\u83b7\u53d6\u96c6\u5408\u4e2d\u7684\u4e00\u4e2a\u5143\u7d20\\r\\n * @param obj RandomizedSet\u5bf9\u8c61\u6307\u9488\\r\\n * @return \u968f\u673a\u8fd4\u56de\u7684\u5143\u7d20\u503c\\r\\n */\\r\\nint randomizedSetGetRandom(RandomizedSet* obj) {\\r\\n    // \u4f7f\u7528\u968f\u673a\u6570\u751f\u62100\u5230numsSize-1\u4e4b\u95f4\u7684\u7d22\u5f15\\r\\n    int randomIndex = rand() % obj->numsSize;\\r\\n    return obj->nums[randomIndex]; // \u8fd4\u56de\u6570\u7ec4\u4e2d\u5bf9\u5e94\u4f4d\u7f6e\u7684\u5143\u7d20\\r\\n}\\r\\n\\r\\n/**\\r\\n * \u91ca\u653eRandomizedSet\u5bf9\u8c61\u5360\u7528\u7684\u5185\u5b58\\r\\n * @param obj RandomizedSet\u5bf9\u8c61\u6307\u9488\\r\\n */\\r\\nvoid randomizedSetFree(RandomizedSet* obj) {\\r\\n    // \u904d\u5386\u5e76\u91ca\u653e\u54c8\u5e0c\u8868\u4e2d\u6240\u6709\u7684\u8282\u70b9\u5185\u5b58\\r\\n    HashItem* curr, *tmp;\\r\\n    HASH_ITER(hh, obj->indices, curr, tmp) {\\r\\n        HASH_DEL(obj->indices, curr);\\r\\n        free(curr);\\r\\n    }\\r\\n    \\r\\n    // \u91ca\u653e\u6570\u7ec4\u5185\u5b58\u548c\u5bf9\u8c61\u672c\u8eab\u5185\u5b58\\r\\n    free(obj->nums);\\r\\n    free(obj);\\r\\n}\\r\\n```\\r\\n\\r\\n### \ud83d\udcd6 \u603b\u7ed3\uff1a\\r\\n\\r\\n<details>\\r\\n<summary>\u70b9\u51fb\u5c55\u5f00\u9898\u76ee\u603b\u7ed3</summary>\\r\\n# \ud83e\udd14 O(1)\u65f6\u95f4\u63d2\u5165\u3001\u5220\u9664\u548c\u83b7\u53d6\u968f\u673a\u5143\u7d20\\r\\n\\r\\n---\\r\\n\\r\\n## 1\ufe0f\u20e3 \u9898\u76ee\u6838\u5fc3\u4fe1\u606f\\r\\n\\r\\n\ud83c\udfaf **\u529f\u80fd\u63cf\u8ff0**\uff1a\u8bbe\u8ba1\u4e00\u4e2a\u652f\u6301\u5728\u5e73\u5747O(1)\u65f6\u95f4\u590d\u6742\u5ea6\u4e0b\u8fdb\u884c\u63d2\u5165\u3001\u5220\u9664\u548c\u83b7\u53d6\u968f\u673a\u5143\u7d20\u7684\u6570\u636e\u7ed3\u6784\\r\\n\\r\\n\ud83d\udce5 **\u8f93\u5165\u8f93\u51fa**\uff1a\\r\\n- **\u8f93\u5165**\uff1a\\r\\n  - `val`\uff1a\u8981\u63d2\u5165\u6216\u5220\u9664\u7684\u6574\u6570\u503c\\r\\n  - \u65e0\u53c2\u6570\uff1a\u7528\u4e8e\u83b7\u53d6\u968f\u673a\u5143\u7d20\\r\\n- **\u8f93\u51fa**\uff1a\\r\\n  - `insert`\uff1a\u63d2\u5165\u6210\u529f\u8fd4\u56detrue\uff0c\u5931\u8d25\u8fd4\u56defalse\\r\\n  - `remove`\uff1a\u5220\u9664\u6210\u529f\u8fd4\u56detrue\uff0c\u5931\u8d25\u8fd4\u56defalse\\r\\n  - `getRandom`\uff1a\u8fd4\u56de\u96c6\u5408\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\u5143\u7d20\\r\\n  - `create`\uff1a\u8fd4\u56de\u521d\u59cb\u5316\u7684RandomizedSet\u5bf9\u8c61\\r\\n  - `free`\uff1a\u91ca\u653e\u5bf9\u8c61\u5185\u5b58\uff0c\u65e0\u8fd4\u56de\u503c\\r\\n\\r\\n---\\r\\n\\r\\n## 2\ufe0f\u20e3 \u5b9e\u73b0\u539f\u7406\\r\\n\\r\\n\ud83d\udca1 **\u6838\u5fc3\u601d\u8def**\uff1a\u4f7f\u7528\u6570\u7ec4\u5b58\u50a8\u5143\u7d20\u4ee5\u652f\u6301O(1)\u968f\u673a\u8bbf\u95ee\uff0c\u7ed3\u5408\u54c8\u5e0c\u8868\u8bb0\u5f55\u5143\u7d20\u503c\u5230\u7d22\u5f15\u7684\u6620\u5c04\u4ee5\u652f\u6301O(1)\u67e5\u627e\\r\\n\\r\\n\ud83d\udccb **\u5b9e\u73b0\u6b65\u9aa4**\uff1a\\r\\n1. \u4f7f\u7528\u52a8\u6001\u6570\u7ec4\u5b58\u50a8\u6240\u6709\u5143\u7d20\uff0c\u652f\u6301\u901a\u8fc7\u7d22\u5f15O(1)\u8bbf\u95ee\u4efb\u610f\u5143\u7d20\\r\\n2. \u4f7f\u7528\u54c8\u5e0c\u8868\u7ef4\u62a4\u5143\u7d20\u503c\u5230\u6570\u7ec4\u7d22\u5f15\u7684\u6620\u5c04\u5173\u7cfb\uff0c\u652f\u6301O(1)\u67e5\u627e\u5143\u7d20\\r\\n3. \u63d2\u5165\u65f6\u5c06\u5143\u7d20\u6dfb\u52a0\u5230\u6570\u7ec4\u672b\u5c3e\u5e76\u5728\u54c8\u5e0c\u8868\u4e2d\u8bb0\u5f55\u7d22\u5f15\\r\\n4. \u5220\u9664\u65f6\u5c06\u76ee\u6807\u5143\u7d20\u4e0e\u6570\u7ec4\u672b\u5c3e\u5143\u7d20\u4ea4\u6362\uff0c\u66f4\u65b0\u54c8\u5e0c\u8868\u5e76\u5220\u9664\u76ee\u6807\u5143\u7d20\\r\\n\\r\\n---\\r\\n\\r\\n## 3\ufe0f\u20e3 \u5173\u952e\u70b9\u89e3\u6790\\r\\n\\r\\n### \ud83c\udfaf \u4ee3\u7801\u6280\u5de7\\r\\n- **\u6570\u7ec4+\u54c8\u5e0c\u8868\u7ec4\u5408**\uff1a\u6570\u7ec4\u652f\u6301\u968f\u673a\u8bbf\u95ee\uff0c\u54c8\u5e0c\u8868\u652f\u6301\u5feb\u901f\u67e5\u627e\\r\\n- **\u5220\u9664\u5143\u7d20\u65f6\u7684\u4ea4\u6362\u6280\u5de7**\uff1a\u5c06\u5f85\u5220\u9664\u5143\u7d20\u4e0e\u672b\u5c3e\u5143\u7d20\u4ea4\u6362\uff0c\u907f\u514d\u6570\u7ec4\u5143\u7d20\u79fb\u52a8\\r\\n- **\u53cc\u91cd\u6570\u636e\u7ed3\u6784\u540c\u6b65\u7ef4\u62a4**\uff1a\u540c\u65f6\u7ef4\u62a4\u6570\u7ec4\u548c\u54c8\u5e0c\u8868\u4e2d\u5143\u7d20\u4fe1\u606f\u7684\u4e00\u81f4\u6027\\r\\n\\r\\n## 4\ufe0f\u20e3 \u4f7f\u7528\u573a\u666f\\r\\n\\r\\n### \u2705 \u9002\u7528\u60c5\u51b5\uff1a\\r\\n- \u9700\u8981\u9891\u7e41\u8fdb\u884c\u63d2\u5165\u3001\u5220\u9664\u548c\u968f\u673a\u8bbf\u95ee\u64cd\u4f5c\u7684\u573a\u666f\\r\\n- \u5bf9\u65f6\u95f4\u590d\u6742\u5ea6\u8981\u6c42\u4e25\u683c\u7684\u968f\u673a\u96c6\u5408\u5e94\u7528\\r\\n- \u5b9e\u73b0\u968f\u673a\u62bd\u6837\u6216\u968f\u673a\u5316\u7b97\u6cd5\u7684\u6570\u636e\u7ed3\u6784\\r\\n\\r\\n### \u26a0\ufe0f \u524d\u63d0\u6761\u4ef6\uff1a\\r\\n- \u5143\u7d20\u503c\u552f\u4e00\uff0c\u4e0d\u652f\u6301\u91cd\u590d\u5143\u7d20\\r\\n- \u9700\u8981\u8db3\u591f\u7684\u5185\u5b58\u7a7a\u95f4\u7ef4\u62a4\u6570\u7ec4\u548c\u54c8\u5e0c\u8868\\r\\n- getRandom\u8c03\u7528\u65f6\u96c6\u5408\u5fc5\u987b\u975e\u7a7a\\r\\n\\r\\n## 5\ufe0f\u20e3 \u590d\u6742\u5ea6\u5206\u6790\\r\\n\\r\\n- \u23f1\ufe0f \u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\r\\n  - insert: O(1) \u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6\\r\\n  - remove: O(1) \u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6\\r\\n  - getRandom: O(1) \u65f6\u95f4\u590d\u6742\u5ea6\\r\\n  - create: O(1) \u65f6\u95f4\u590d\u6742\u5ea6\\r\\n  - free: O(n) \u65f6\u95f4\u590d\u6742\u5ea6\uff0cn\u4e3a\u5143\u7d20\u4e2a\u6570\\r\\n\\r\\n- \ud83d\udcbe \u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(n)\uff0cn\u4e3a\u5b58\u50a8\u7684\u5143\u7d20\u4e2a\u6570\uff0c\u9700\u8981\u6570\u7ec4\u548c\u54c8\u5e0c\u8868\u5b58\u50a8\\r\\n\\r\\n## 6\ufe0f\u20e3 \u6ce8\u610f\u4e8b\u9879\\r\\n\\r\\n### \ud83d\udea9 \u8fb9\u754c\u60c5\u51b5\uff1a\\r\\n- \u63d2\u5165\u5df2\u5b58\u5728\u7684\u5143\u7d20\\r\\n- \u5220\u9664\u4e0d\u5b58\u5728\u7684\u5143\u7d20\\r\\n- \u96c6\u5408\u4e3a\u7a7a\u65f6\u8c03\u7528getRandom\uff08\u9898\u76ee\u4fdd\u8bc1\u4e0d\u4f1a\u51fa\u73b0\uff09\\r\\n- \u96c6\u5408\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\u65f6\u7684\u5220\u9664\u64cd\u4f5c\\r\\n\\r\\n### \ud83d\udca5 \u6613\u9519\u70b9\uff1a\\r\\n- \u5220\u9664\u5143\u7d20\u540e\u5fd8\u8bb0\u66f4\u65b0\u4ea4\u6362\u5143\u7d20\u5728\u54c8\u5e0c\u8868\u4e2d\u7684\u7d22\u5f15\\r\\n- \u5185\u5b58\u91ca\u653e\u4e0d\u5b8c\u6574\uff0c\u5fd8\u8bb0\u91ca\u653e\u54c8\u5e0c\u8868\u8282\u70b9\\r\\n- getRandom\u5b9e\u73b0\u4e2d\u968f\u673a\u6570\u8303\u56f4\u9519\u8bef\uff0c\u5e94\u4e3a[0, numsSize)\\r\\n\\r\\n## 7\ufe0f\u20e3 \u60d1\u4e4b\u672a\u89e3\\r\\n\\r\\n\u8fd9\u662f\u529b\u6263\u91cc\u9762\u7684\u6700\u4f18\u89e3\uff1f\u4f46\u662f\u6211\u770b\u4e0d\u61c2~\ud83d\ude02\\r\\n\\r\\n\u6211\u73b0\u5728\u6253\u7b97\u5148\u7406\u89e3\u7075\u7801\u7ed9\u51fa\u7684\u4ee3\u7801\u5427\uff0c\u4e4b\u540e\u518d\u6765\u63a2\u7d22\u4e0b\u9762\u7684\u5185\u5bb9\uff01\ud83e\uddd0\\r\\n```c \\r\\n/**\\r\\n * FNV\u54c8\u5e0c\u7b97\u6cd5\u5e38\u91cf\u5b9a\u4e49\\r\\n * FNV32_BASE: FNV-1\u54c8\u5e0c\u7b97\u6cd5\u7684\u57fa\u7840\u503c\\r\\n * FNV32_PRIME: FNV-1\u54c8\u5e0c\u7b97\u6cd5\u7684\u7d20\u6570\\r\\n */\\r\\n#define FNV32_BASE ((unsigned int) 0x811c9dc5)\\r\\n#define FNV32_PRIME ((unsigned int) 0x01000193)\\r\\n\\r\\n/**\\r\\n * FNV-1\u54c8\u5e0c\u7b97\u6cd5\u5b9e\u73b0\\r\\n * @param buf \u8981\u54c8\u5e0c\u7684\u6570\u636e\u7f13\u51b2\u533a\\r\\n * @param len \u6570\u636e\u957f\u5ea6\\r\\n * @return \u8ba1\u7b97\u5f97\u5230\u7684\u54c8\u5e0c\u503c\\r\\n */\\r\\nstatic unsigned int memhash(const void *buf, size_t len)\\r\\n{\\r\\n\\tunsigned int hash = FNV32_BASE;\\r\\n\\tunsigned char *ucbuf = (unsigned char *) buf;\\r\\n\\twhile (len--) {\\r\\n\\t\\tunsigned int c = *ucbuf++;\\r\\n\\t\\thash = (hash * FNV32_PRIME) ^ c;\\r\\n\\t}\\r\\n\\treturn hash;\\r\\n}\\r\\n\\r\\n/**\\r\\n * \u54c8\u5e0c\u8868\u9879\u7ed3\u6784\u4f53\\r\\n * \u7528\u4e8e\u94fe\u5f0f\u89e3\u51b3\u54c8\u5e0c\u51b2\u7a81\\r\\n */\\r\\nstruct hashmap_entry {\\r\\n    unsigned int hash;                  // \u5b58\u50a8\u9884\u8ba1\u7b97\u7684\u54c8\u5e0c\u503c\\r\\n    struct hashmap_entry *next;         // \u6307\u5411\u4e0b\u4e00\u4e2a\u51b2\u7a81\u9879\u7684\u6307\u9488\\r\\n};\\r\\n\\r\\n/**\\r\\n * \u521d\u59cb\u5316\u54c8\u5e0c\u8868\u9879\\r\\n * @param entry \u8981\u521d\u59cb\u5316\u7684\u54c8\u5e0c\u8868\u9879\\r\\n * @param hash  \u9884\u8ba1\u7b97\u7684\u54c8\u5e0c\u503c\\r\\n */\\r\\nstatic inline void hashmap_entry_init(struct hashmap_entry *entry, unsigned int hash) {\\r\\n    entry->hash = hash;\\r\\n    entry->next = NULL;\\r\\n}\\r\\n\\r\\n/**\\r\\n * \u6839\u636e\u952e\u503c\u8ba1\u7b97\u54c8\u5e0c\u503c\u5e76\u521d\u59cb\u5316\u54c8\u5e0c\u8868\u9879\\r\\n */\\r\\n#define __hashmap_entry_init(entry, key, len) hashmap_entry_init(entry, memhash(key, len))\\r\\n\\r\\n/**\\r\\n * \u54c8\u5e0c\u8868\u9879\u6bd4\u8f83\u56de\u8c03\u51fd\u6570\u7c7b\u578b\u5b9a\u4e49\\r\\n * @param entry     \u54c8\u5e0c\u8868\u4e2d\u7684\u9879\\r\\n * @param key       \u8981\u6bd4\u8f83\u7684\u952e\\r\\n * @param key_data  \u952e\u6570\u636e\\r\\n * @return \u76f8\u7b49\u8fd4\u56de0\uff0c\u4e0d\u76f8\u7b49\u8fd4\u56de\u975e0\u503c\\r\\n */\\r\\ntypedef int (*hashmap_entry_cmp_callback)(struct hashmap_entry *entry, struct hashmap_entry *key, void *key_data);\\r\\n\\r\\n/**\\r\\n * \u54c8\u5e0c\u8868\u7ed3\u6784\u4f53\\r\\n */\\r\\nstruct hashmap {\\r\\n    struct hashmap_entry **table;       // \u54c8\u5e0c\u6876\u6570\u7ec4\\r\\n    unsigned int table_size;            // \u54c8\u5e0c\u6876\u6570\u7ec4\u5927\u5c0f\\r\\n    unsigned int private_size;          // \u5f53\u524d\u5b58\u50a8\u7684\u5143\u7d20\u6570\u91cf\\r\\n    hashmap_entry_cmp_callback cmp;     // \u5143\u7d20\u6bd4\u8f83\u56de\u8c03\u51fd\u6570\\r\\n    unsigned int grow_at;               // \u89e6\u53d1\u6269\u5bb9\u7684\u9608\u503c\\r\\n    unsigned int shrink_at;             // \u89e6\u53d1\u6536\u7f29\u7684\u9608\u503c\\r\\n};\\r\\n\\r\\n/**\\r\\n * \u54c8\u5e0c\u8868\u914d\u7f6e\u5e38\u91cf\\r\\n * hashmap_init_size: \u521d\u59cb\u54c8\u5e0c\u8868\u5927\u5c0f\\r\\n * hashmap_factor: \u8d1f\u8f7d\u56e0\u5b50(\u767e\u5206\u6bd4)\\r\\n * hashmap_resize_bit: \u6269\u5bb9/\u6536\u7f29\u65f6\u7684\u4f4d\u79fb\u91cf\\r\\n */\\r\\n#define hashmap_init_size 64\\r\\n#define hashmap_factor 80\\r\\n#define hashmap_resize_bit 2\\r\\n\\r\\n/**\\r\\n * \u5206\u914d\u54c8\u5e0c\u8868\u6876\u6570\u7ec4\\r\\n * @param map  \u54c8\u5e0c\u8868\u7ed3\u6784\u4f53\u6307\u9488\\r\\n * @param size \u6876\u6570\u7ec4\u5927\u5c0f\\r\\n */\\r\\nstatic void alloc_table(struct hashmap *map, unsigned int size) \\r\\n{\\r\\n        map->table_size = size;\\r\\n        map->table = calloc(size, sizeof(void *));  // \u521d\u59cb\u5316\u4e3aNULL\\r\\n\\r\\n        // \u8ba1\u7b97\u6269\u5bb9\u548c\u6536\u7f29\u9608\u503c\\r\\n        map->grow_at = size * hashmap_factor / 100;\\r\\n        if (size <= hashmap_init_size) \\r\\n            map->shrink_at = 0;\\r\\n        else \\r\\n            map->shrink_at = map->grow_at / ((1 << hashmap_resize_bit) + 1); \\r\\n}\\r\\n\\r\\n/**\\r\\n * \u6bd4\u8f83\u4e24\u4e2a\u54c8\u5e0c\u8868\u9879\u662f\u5426\u76f8\u7b49\\r\\n * @param map       \u54c8\u5e0c\u8868\u7ed3\u6784\u4f53\u6307\u9488\\r\\n * @param entry     \u54c8\u5e0c\u8868\u4e2d\u7684\u9879\\r\\n * @param key       \u8981\u6bd4\u8f83\u7684\u952e\\r\\n * @param key_data  \u952e\u6570\u636e\\r\\n * @return \u76f8\u7b49\u8fd4\u56detrue\uff0c\u5426\u5219\u8fd4\u56defalse\\r\\n */\\r\\nstatic inline int entry_equals(struct hashmap *map, struct hashmap_entry *entry, struct hashmap_entry *key, void *key_data) \\r\\n{\\r\\n    return ((entry->hash == key->hash) && (entry == key || !map->cmp(entry, key, key_data))); \\r\\n}\\r\\n\\r\\n/**\\r\\n * \u521d\u59cb\u5316\u54c8\u5e0c\u8868\\r\\n * @param map        \u54c8\u5e0c\u8868\u7ed3\u6784\u4f53\u6307\u9488\\r\\n * @param init_size  \u521d\u59cb\u5927\u5c0f\\r\\n * @param cmp        \u6bd4\u8f83\u56de\u8c03\u51fd\u6570\\r\\n */\\r\\nstatic void hashmap_init(struct hashmap *map, unsigned int init_size, hashmap_entry_cmp_callback cmp) \\r\\n{\\r\\n    \\r\\n    unsigned int size = hashmap_init_size;\\r\\n\\r\\n    map->cmp = cmp;\\r\\n\\r\\n    // \u6839\u636e\u521d\u59cb\u5927\u5c0f\u8ba1\u7b97\u5408\u9002\u7684\u54c8\u5e0c\u8868\u5927\u5c0f\\r\\n    init_size = init_size * 100 / hashmap_factor;\\r\\n    while (init_size > size) {\\r\\n        size <<= hashmap_resize_bit;\\r\\n    }\\r\\n\\r\\n    alloc_table(map, size);\\r\\n    map->private_size = 0;\\r\\n}\\r\\n\\r\\n/**\\r\\n * \u8ba1\u7b97\u54c8\u5e0c\u6876\u7d22\u5f15\\r\\n * @param map \u54c8\u5e0c\u8868\u7ed3\u6784\u4f53\u6307\u9488\\r\\n * @param key \u952e\u9879\\r\\n * @return \u6876\u7d22\u5f15\\r\\n */\\r\\nstatic inline unsigned int bucket(struct hashmap *map, struct hashmap_entry *key) \\r\\n{\\r\\n    return key->hash & (map->table_size - 1);\\r\\n}\\r\\n\\r\\n/**\\r\\n * \u67e5\u627e\u952e\u9879\u5728\u54c8\u5e0c\u8868\u4e2d\u7684\u4f4d\u7f6e\u6307\u9488\\r\\n * @param map       \u54c8\u5e0c\u8868\u7ed3\u6784\u4f53\u6307\u9488\\r\\n * @param key       \u8981\u67e5\u627e\u7684\u952e\\r\\n * @param key_data  \u952e\u6570\u636e\\r\\n * @return \u6307\u5411\u8be5\u9879\u6307\u9488\u7684\u6307\u9488\\r\\n */\\r\\nstatic struct hashmap_entry **find_entry_ptr(struct hashmap *map, struct hashmap_entry *key, void *key_data) \\r\\n{\\r\\n    unsigned int b = bucket(map, key);\\r\\n\\r\\n    struct hashmap_entry **entry = &map->table[b];\\r\\n    while (*entry && !entry_equals(map, *entry, key, key_data)) {\\r\\n        entry = &(*entry)->next;\\r\\n    }\\r\\n\\r\\n    return entry;\\r\\n}\\r\\n\\r\\n/**\\r\\n * \u91cd\u65b0\u54c8\u5e0c\uff08\u6269\u5bb9\u6216\u6536\u7f29\uff09\\r\\n * @param map      \u54c8\u5e0c\u8868\u7ed3\u6784\u4f53\u6307\u9488\\r\\n * @param new_size \u65b0\u7684\u54c8\u5e0c\u8868\u5927\u5c0f\\r\\n */\\r\\nstatic void rehash(struct hashmap *map, unsigned int new_size)\\r\\n{\\r\\n    int i, old_size = map->table_size;\\r\\n    struct hashmap_entry **old_table = map->table;\\r\\n\\r\\n    alloc_table(map, new_size);\\r\\n\\r\\n    // \u5c06\u65e7\u8868\u4e2d\u7684\u6240\u6709\u9879\u91cd\u65b0\u63d2\u5165\u65b0\u8868\\r\\n    for (i = 0; i < old_size; i++) {\\r\\n        struct hashmap_entry *e = old_table[i];\\r\\n\\r\\n        while (e) {\\r\\n            struct hashmap_entry *next = e->next;\\r\\n            unsigned int b = bucket(map, e);\\r\\n            e->next = map->table[b];\\r\\n            map->table[b] = e;\\r\\n            e = next;\\r\\n        }\\r\\n    }\\r\\n    free(old_table);\\r\\n}\\r\\n\\r\\n/**\\r\\n * \u4ece\u54c8\u5e0c\u8868\u4e2d\u79fb\u9664\u9879\\r\\n * @param map       \u54c8\u5e0c\u8868\u7ed3\u6784\u4f53\u6307\u9488\\r\\n * @param key       \u8981\u79fb\u9664\u7684\u952e\\r\\n * @param key_data  \u952e\u6570\u636e\\r\\n * @return \u88ab\u79fb\u9664\u7684\u9879\uff0c\u4e0d\u5b58\u5728\u5219\u8fd4\u56deNULL\\r\\n */\\r\\nstatic struct hashmap_entry *hashmap_remove(struct hashmap *map, struct hashmap_entry *key, void *key_data) \\r\\n{\\r\\n    struct hashmap_entry **e;\\r\\n    struct hashmap_entry *old;\\r\\n\\r\\n    e = find_entry_ptr(map, key, key_data);\\r\\n    if (!*e) return NULL;\\r\\n\\r\\n    old = *e;\\r\\n    *e = old->next;\\r\\n    old->next = NULL;\\r\\n\\r\\n    // \u5982\u679c\u5143\u7d20\u6570\u91cf\u4f4e\u4e8e\u6536\u7f29\u9608\u503c\uff0c\u5219\u8fdb\u884c\u6536\u7f29\\r\\n    if (--map->private_size < map->shrink_at)\\r\\n        rehash(map, map->table_size >> hashmap_resize_bit);\\r\\n    \\r\\n    return old;\\r\\n}\\r\\n\\r\\n/**\\r\\n * \u68c0\u67e5\u952e\u662f\u5426\u5b58\u5728\u4e8e\u54c8\u5e0c\u8868\u4e2d\\r\\n * @param map       \u54c8\u5e0c\u8868\u7ed3\u6784\u4f53\u6307\u9488\\r\\n * @param key       \u8981\u68c0\u67e5\u7684\u952e\\r\\n * @param key_data  \u952e\u6570\u636e\\r\\n * @return \u5b58\u5728\u8fd4\u56detrue\uff0c\u5426\u5219\u8fd4\u56defalse\\r\\n */\\r\\nstatic bool hashmap_exists(struct hashmap *map, struct hashmap_entry *key, void *key_data) {\\r\\n    struct hashmap_entry **e = find_entry_ptr(map, key, key_data);\\r\\n    if (!*e) return false;\\r\\n    \\r\\n    return true;\\r\\n}\\r\\n\\r\\n/**\\r\\n * \u5411\u54c8\u5e0c\u8868\u4e2d\u6dfb\u52a0\u9879\\r\\n * @param map    \u54c8\u5e0c\u8868\u7ed3\u6784\u4f53\u6307\u9488\\r\\n * @param entry  \u8981\u6dfb\u52a0\u7684\u9879\\r\\n */\\r\\nstatic void hashmap_add(struct hashmap *map, struct hashmap_entry *entry) \\r\\n{\\r\\n    unsigned int b = bucket(map, entry);\\r\\n\\r\\n    entry->next = map->table[b];\\r\\n    map->table[b] = entry;\\r\\n    \\r\\n    // \u5982\u679c\u5143\u7d20\u6570\u91cf\u8d85\u8fc7\u6269\u5bb9\u9608\u503c\uff0c\u5219\u8fdb\u884c\u6269\u5bb9\\r\\n    if (++map->private_size > map->grow_at)\\r\\n        rehash(map, map->table_size << hashmap_resize_bit);\\r\\n}\\r\\n\\r\\n/**\\r\\n * \u5411\u54c8\u5e0c\u8868\u4e2d\u653e\u7f6e\u9879\uff08\u5982\u679c\u5df2\u5b58\u5728\u5219\u66ff\u6362\uff09\\r\\n * @param map    \u54c8\u5e0c\u8868\u7ed3\u6784\u4f53\u6307\u9488\\r\\n * @param entry  \u8981\u653e\u7f6e\u7684\u9879\\r\\n * @return \u88ab\u66ff\u6362\u7684\u65e7\u9879\uff0c\u6ca1\u6709\u5219\u8fd4\u56deNULL\\r\\n */\\r\\nstatic struct hashmap_entry *hashmap_put(struct hashmap *map, struct hashmap_entry *entry) {\\r\\n    struct hashmap_entry *old = hashmap_remove(map, entry, NULL);\\r\\n    hashmap_add(map, entry);\\r\\n    return old;\\r\\n}\\r\\n\\r\\n/**\\r\\n * \u54c8\u5e0c\u8868\u8fed\u4ee3\u5668\u7ed3\u6784\u4f53\\r\\n */\\r\\nstruct hashmap_iter {\\r\\n    struct hashmap *map;        // \u5173\u8054\u7684\u54c8\u5e0c\u8868\\r\\n    struct hashmap_entry *next; // \u4e0b\u4e00\u4e2a\u8981\u8bbf\u95ee\u7684\u9879\\r\\n    int table_pos;              // \u5f53\u524d\u6876\u7d22\u5f15\\r\\n};\\r\\n\\r\\n/**\\r\\n * \u521d\u59cb\u5316\u54c8\u5e0c\u8868\u8fed\u4ee3\u5668\\r\\n * @param iter \u8fed\u4ee3\u5668\u7ed3\u6784\u4f53\u6307\u9488\\r\\n * @param map  \u8981\u8fed\u4ee3\u7684\u54c8\u5e0c\u8868\\r\\n */\\r\\nstatic void hashmap_iter_init(struct hashmap_iter *iter, struct hashmap *map)\\r\\n{\\r\\n    iter->map = map;\\r\\n    iter->next = NULL;\\r\\n    iter->table_pos = 0;\\r\\n}\\r\\n\\r\\n/**\\r\\n * \u83b7\u53d6\u8fed\u4ee3\u5668\u7684\u4e0b\u4e00\u4e2a\u9879\\r\\n * @param iter \u8fed\u4ee3\u5668\u7ed3\u6784\u4f53\u6307\u9488\\r\\n * @return \u4e0b\u4e00\u4e2a\u54c8\u5e0c\u8868\u9879\uff0c\u6ca1\u6709\u5219\u8fd4\u56deNULL\\r\\n */\\r\\nstatic struct hashmap_entry *hashmap_iter_next(struct hashmap_iter *iter) {\\r\\n    struct hashmap_entry *curr = iter->next;\\r\\n\\r\\n    for ( ; ; ) {\\r\\n        if (curr) {\\r\\n            iter->next = curr->next;\\r\\n            return curr;\\r\\n        }\\r\\n\\r\\n        if (iter->table_pos >= iter->map->table_size)\\r\\n            return NULL;\\r\\n        \\r\\n        curr = iter->map->table[iter->table_pos++];\\r\\n    }\\r\\n} \\r\\n\\r\\n/**\\r\\n * \u6e05\u7a7a\u54c8\u5e0c\u8868\u5e76\u91ca\u653e\u6240\u6709\u5185\u5b58\\r\\n * @param map    \u54c8\u5e0c\u8868\u7ed3\u6784\u4f53\u6307\u9488\\r\\n * @param offset \u9879\u7ed3\u6784\u4f53\u4e2dhashmap_entry\u6210\u5458\u7684\u504f\u79fb\u91cf\\r\\n */\\r\\nstatic void hashmap_clear(struct hashmap *map, unsigned int offset) {\\r\\n    \\r\\n    struct hashmap_iter iter;\\r\\n    struct hashmap_entry *e;\\r\\n\\r\\n    hashmap_iter_init(&iter, map);\\r\\n\\r\\n    // \u9010\u4e2a\u91ca\u653e\u6240\u6709\u9879\u7684\u5185\u5b58\\r\\n    while ((e = hashmap_iter_next(&iter)))\\r\\n        free((char *)e - offset);\\r\\n\\r\\n    free(map->table);\\r\\n    memset(map, 0, sizeof(struct hashmap));\\r\\n}   \\r\\n\\r\\n/**\\r\\n * \u6574\u578b\u952e\u503c\u7684\u54c8\u5e0c\u8868\u9879\u7ed3\u6784\u4f53\\r\\n */\\r\\nstruct int_hashmap_entry {\\r\\n    int key;                    // \u952e\\r\\n    int value;                  // \u503c\\r\\n    struct hashmap_entry entry; // \u57fa\u7840\u54c8\u5e0c\u8868\u9879\\r\\n};\\r\\n\\r\\n/**\\r\\n * \u8ba1\u7b97int_hashmap_entry\u4e2dentry\u6210\u5458\u7684\u504f\u79fb\u91cf\\r\\n */\\r\\n#define INT_HASHMAP_OFFSET offsetof(struct int_hashmap_entry, entry) \\r\\n\\r\\n/**\\r\\n * \u901a\u8fc7\u54c8\u5e0c\u8868\u9879\u6307\u9488\u83b7\u53d6\u5305\u542b\u5b83\u7684int_hashmap_entry\u6307\u9488\\r\\n */\\r\\n#define get_int_hashmap_entry_data(entry, type, member) \\\\\\r\\n    ((type *) ((u_char *)(entry) - offsetof(type, member)))\\r\\n\\r\\n/**\\r\\n * \u521b\u5efa\u6574\u578b\u54c8\u5e0c\u8868\u9879\\r\\n * @param key   \u952e\\r\\n * @param value \u503c\\r\\n * @return \u65b0\u521b\u5efa\u7684\u9879\uff0c\u5931\u8d25\u8fd4\u56deNULL\\r\\n */\\r\\nstatic inline struct int_hashmap_entry *int_hashmap_entry_create(int key, int value) {\\r\\n    struct int_hashmap_entry *int_entry;\\r\\n\\r\\n    int_entry = malloc(sizeof(struct int_hashmap_entry));\\r\\n    if (!int_entry) return NULL;\\r\\n\\r\\n    int_entry->key = key;\\r\\n    int_entry->value = value;\\r\\n    __hashmap_entry_init(&int_entry->entry, &key, sizeof(int));\\r\\n    return int_entry;\\r\\n}\\r\\n\\r\\n/**\\r\\n * \u6574\u578b\u54c8\u5e0c\u8868\u7ed3\u6784\u4f53\\r\\n */\\r\\nstruct int_hashmap {\\r\\n    struct hashmap map;  // \u57fa\u7840\u54c8\u5e0c\u8868\\r\\n};\\r\\n\\r\\n/**\\r\\n * \u6574\u578b\u54c8\u5e0c\u8868\u9879\u6bd4\u8f83\u51fd\u6570\\r\\n * @param entry     \u54c8\u5e0c\u8868\u4e2d\u7684\u9879\\r\\n * @param key       \u8981\u6bd4\u8f83\u7684\u952e\\r\\n * @param key_data  \u952e\u6570\u636e\\r\\n * @return \u76f8\u7b49\u8fd4\u56de0\uff0c\u4e0d\u76f8\u7b49\u8fd4\u56de\u975e0\u503c\\r\\n */\\r\\nstatic int int_hashmap_entry_cmp(struct hashmap_entry *entry, struct hashmap_entry *key, void *key_data) {\\r\\n    struct int_hashmap_entry *int_entry = get_int_hashmap_entry_data(entry, struct int_hashmap_entry, entry);\\r\\n\\r\\n    if (key_data) {\\r\\n        if (int_entry->key == (*(int *) key_data)) return 0;\\r\\n        else return 1;\\r\\n    } else {\\r\\n        struct int_hashmap_entry *key_entry = get_int_hashmap_entry_data(key, struct int_hashmap_entry, entry);\\r\\n        if (int_entry->key == key_entry->key) return 0;\\r\\n        return 1;\\r\\n    }\\r\\n}\\r\\n\\r\\n/**\\r\\n * \u521d\u59cb\u5316\u6574\u578b\u54c8\u5e0c\u8868\\r\\n * @param int_map   \u6574\u578b\u54c8\u5e0c\u8868\u7ed3\u6784\u4f53\u6307\u9488\\r\\n * @param init_size \u521d\u59cb\u5927\u5c0f\\r\\n */\\r\\nstatic inline void int_hashmap_init(struct int_hashmap *int_map, unsigned int init_size)\\r\\n{\\r\\n    hashmap_init(&int_map->map, init_size, int_hashmap_entry_cmp);\\r\\n}\\r\\n\\r\\n/**\\r\\n * \u4ece\u6574\u578b\u54c8\u5e0c\u8868\u4e2d\u79fb\u9664\u9879\\r\\n * @param int_map \u6574\u578b\u54c8\u5e0c\u8868\u7ed3\u6784\u4f53\u6307\u9488\\r\\n * @param key     \u8981\u79fb\u9664\u7684\u952e\\r\\n * @return \u88ab\u79fb\u9664\u7684\u9879\uff0c\u4e0d\u5b58\u5728\u5219\u8fd4\u56deNULL\\r\\n */\\r\\nstatic inline struct int_hashmap_entry *int_hashmap_remove(struct int_hashmap *int_map, int key) {\\r\\n    struct hashmap_entry key_entry;\\r\\n    __hashmap_entry_init(&key_entry, &key, sizeof(int));\\r\\n\\r\\n    struct hashmap_entry *e = hashmap_remove(&int_map->map, &key_entry, &key);\\r\\n    if (!e) return NULL;\\r\\n\\r\\n    struct int_hashmap_entry *data = get_int_hashmap_entry_data(e, struct int_hashmap_entry, entry);\\r\\n\\r\\n    return data;\\r\\n}\\r\\n\\r\\n/**\\r\\n * \u5411\u6574\u578b\u54c8\u5e0c\u8868\u4e2d\u653e\u7f6e\u9879\\r\\n * @param int_map \u6574\u578b\u54c8\u5e0c\u8868\u7ed3\u6784\u4f53\u6307\u9488\\r\\n * @param key     \u952e\\r\\n * @param value   \u503c\\r\\n * @return \u88ab\u66ff\u6362\u7684\u65e7\u9879\uff0c\u6ca1\u6709\u5219\u8fd4\u56deNULL\\r\\n */\\r\\nstatic inline struct int_hashmap_entry *int_hashmap_put(struct int_hashmap *int_map, int key, int value) {\\r\\n    struct hashmap_entry *e = hashmap_put(&int_map->map, &int_hashmap_entry_create(key, value)->entry);\\r\\n    if (!e) return NULL;\\r\\n\\r\\n    struct int_hashmap_entry *data = get_int_hashmap_entry_data(e, struct int_hashmap_entry, entry);\\r\\n    return data;\\r\\n}\\r\\n\\r\\n/**\\r\\n * \u68c0\u67e5\u952e\u662f\u5426\u5b58\u5728\u4e8e\u6574\u578b\u54c8\u5e0c\u8868\u4e2d\\r\\n * @param int_map \u6574\u578b\u54c8\u5e0c\u8868\u7ed3\u6784\u4f53\u6307\u9488\\r\\n * @param key     \u8981\u68c0\u67e5\u7684\u952e\\r\\n * @return \u5b58\u5728\u8fd4\u56detrue\uff0c\u5426\u5219\u8fd4\u56defalse\\r\\n */\\r\\nstatic inline bool int_hashmap_exists(struct int_hashmap *int_map, int key) {\\r\\n    struct hashmap_entry key_entry;\\r\\n    __hashmap_entry_init(&key_entry, &key, sizeof(int));\\r\\n\\r\\n    return hashmap_exists(&int_map->map, &key_entry, &key);\\r\\n}\\r\\n\\r\\n/**\\r\\n * \u5411\u6574\u578b\u54c8\u5e0c\u8868\u4e2d\u6dfb\u52a0\u9879\\r\\n * @param int_map \u6574\u578b\u54c8\u5e0c\u8868\u7ed3\u6784\u4f53\u6307\u9488\\r\\n * @param key     \u952e\\r\\n * @param value   \u503c\\r\\n */\\r\\nstatic inline void int_hashmap_add(struct int_hashmap *int_map, int key, int value) {\\r\\n    hashmap_add(&int_map->map, &int_hashmap_entry_create(key, value)->entry);\\r\\n}\\r\\n\\r\\n/**\\r\\n * \u6e05\u7a7a\u6574\u578b\u54c8\u5e0c\u8868\u5e76\u91ca\u653e\u6240\u6709\u5185\u5b58\\r\\n * @param int_map \u6574\u578b\u54c8\u5e0c\u8868\u7ed3\u6784\u4f53\u6307\u9488\\r\\n */\\r\\nstatic inline void int_hashmap_clear(struct int_hashmap *int_map) {\\r\\n    hashmap_clear(&int_map->map, INT_HASHMAP_OFFSET);\\r\\n}\\r\\n\\r\\n/**\\r\\n * RandomizedSet\u7ed3\u6784\u4f53\\r\\n * \u7ed3\u5408\u6570\u7ec4\u548c\u54c8\u5e0c\u8868\u5b9e\u73b0O(1)\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u63d2\u5165\u3001\u5220\u9664\u548c\u968f\u673a\u83b7\u53d6\\r\\n */\\r\\ntypedef struct {\\r\\n    int *nums;                  // \u5b58\u50a8\u5b9e\u9645\u5143\u7d20\u7684\u6570\u7ec4\\r\\n    int alloc;                  // \u6570\u7ec4\u5df2\u5206\u914d\u7684\u7a7a\u95f4\u5927\u5c0f\\r\\n    int nr;                     // \u6570\u7ec4\u4e2d\u5f53\u524d\u5143\u7d20\u7684\u6570\u91cf\\r\\n    struct int_hashmap map;     // \u6574\u578b\u54c8\u5e0c\u8868\uff0c\u5b58\u50a8\u5143\u7d20\u503c\u5230\u6570\u7ec4\u7d22\u5f15\u7684\u6620\u5c04\\r\\n} RandomizedSet;\\r\\n\\r\\n/**\\r\\n * \u9ed8\u8ba4\u6570\u7ec4\u5206\u914d\u5927\u5c0f\\r\\n */\\r\\n#define DEFAULT_ALLOC 1024\\r\\n\\r\\n/**\\r\\n * \u521b\u5efaRandomizedSet\u5bf9\u8c61\\r\\n * @return \u65b0\u521b\u5efa\u7684RandomizedSet\u5bf9\u8c61\u6307\u9488\uff0c\u5931\u8d25\u8fd4\u56deNULL\\r\\n */\\r\\nRandomizedSet *randomizedSetCreate() {\\r\\n    RandomizedSet *rand_set;\\r\\n\\r\\n    rand_set = malloc(sizeof(RandomizedSet));\\r\\n    if (!rand_set) return NULL;\\r\\n\\r\\n    rand_set->nums = calloc(DEFAULT_ALLOC, sizeof(int));\\r\\n    if (!rand_set->nums) {\\r\\n        free(rand_set);\\r\\n        return NULL;\\r\\n    }\\r\\n\\r\\n    rand_set->alloc = DEFAULT_ALLOC;\\r\\n    rand_set->nr = 0;\\r\\n    int_hashmap_init(&rand_set->map, 1024);\\r\\n    return rand_set;\\r\\n}\\r\\n\\r\\n/**\\r\\n * \u5411\u96c6\u5408\u4e2d\u63d2\u5165\u5143\u7d20\\r\\n * @param rand_set RandomizedSet\u5bf9\u8c61\u6307\u9488\\r\\n * @param val      \u8981\u63d2\u5165\u7684\u5143\u7d20\u503c\\r\\n * @return \u63d2\u5165\u6210\u529f\u8fd4\u56detrue\uff0c\u5143\u7d20\u5df2\u5b58\u5728\u8fd4\u56defalse\\r\\n */\\r\\nbool randomizedSetInsert(RandomizedSet *rand_set, int val) {\\r\\n    // \u68c0\u67e5\u5143\u7d20\u662f\u5426\u5df2\u5b58\u5728\\r\\n    if (int_hashmap_exists(&rand_set->map, val)) return false;\\r\\n\\r\\n    // \u5982\u679c\u6570\u7ec4\u7a7a\u95f4\u4e0d\u8db3\uff0c\u5219\u6269\u5bb9\\r\\n    if (rand_set->nr >= rand_set->alloc) {\\r\\n        int new_alloc = rand_set->alloc * 2;\\r\\n        rand_set->nums = realloc(rand_set->nums, new_alloc * sizeof(int));\\r\\n        if (!rand_set->nums) return false;\\r\\n        rand_set->alloc = new_alloc;\\r\\n    }\\r\\n\\r\\n\\t// \u628a\u65b0\u5143\u7d20\u653e\u5728\u6570\u7ec4\u5f53\u524d\u5143\u7d20\u4e2a\u6570\u5bf9\u5e94\u7684\u7d22\u5f15\u4f4d\u7f6e\\r\\n\\tobj->nums[obj->numsSize] = val;\\r\\n    // \u5728\u54c8\u5e0c\u8868\u4e2d\u8bb0\u5f55\u5143\u7d20\u503c\u548c\u5176\u5728\u6570\u7ec4\u4e2d\u7684\u7d22\u5f15\\r\\n    int_hashmap_add(&rand_set->map, val, rand_set->nr);\\r\\n    //\u6570\u7ec4\u4e2d\u5f53\u524d\u5143\u7d20\u6570\u91cf+1\\r\\n\\trand_set->nr++;\\r\\n    return true;\\r\\n}\\r\\n\\r\\n/**\\r\\n * \u4ece\u96c6\u5408\u4e2d\u5220\u9664\u5143\u7d20\\r\\n * @param rand_set RandomizedSet\u5bf9\u8c61\u6307\u9488\\r\\n * @param val      \u8981\u5220\u9664\u7684\u5143\u7d20\u503c\\r\\n * @return \u5220\u9664\u6210\u529f\u8fd4\u56detrue\uff0c\u5143\u7d20\u4e0d\u5b58\u5728\u8fd4\u56defalse\\r\\n */\\r\\nbool randomizedSetRemove(RandomizedSet *rand_set, int val) {\\r\\n    // \u4ece\u54c8\u5e0c\u8868\u4e2d\u79fb\u9664\u5143\u7d20\u5e76\u83b7\u53d6\u5176\u4fe1\u606f\\r\\n    struct int_hashmap_entry *entry = int_hashmap_remove(&rand_set->map, val);\\r\\n    if (!entry) return false;\\r\\n\\r\\n    // \u83b7\u53d6\u8981\u5220\u9664\u5143\u7d20\u5728\u6570\u7ec4\u4e2d\u7684\u7d22\u5f15\\r\\n    int index = entry->value;\\r\\n    // \u83b7\u53d6\u6570\u7ec4\u4e2d\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u503c\\r\\n    int last_val = rand_set->nums[--rand_set->nr];\\r\\n    // \u5c06\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u79fb\u52a8\u5230\u8981\u5220\u9664\u5143\u7d20\u7684\u4f4d\u7f6e\\r\\n    rand_set->nums[index] = last_val;\\r\\n\\r\\n    // \u5982\u679c\u5220\u9664\u7684\u4e0d\u662f\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u9700\u8981\u66f4\u65b0\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u5728\u54c8\u5e0c\u8868\u4e2d\u7684\u7d22\u5f15\\r\\n    if (index != rand_set->nr) {\\r\\n        struct int_hashmap_entry *last_entry = int_hashmap_remove(&rand_set->map, last_val);\\r\\n        last_entry->value = index;\\r\\n        hashmap_add(&rand_set->map.map, &last_entry->entry);\\r\\n    }\\r\\n\\r\\n    free(entry);  // \u91ca\u653e\u88ab\u5220\u9664\u9879\u7684\u5185\u5b58\\r\\n    return true;\\r\\n}\\r\\n\\r\\n/**\\r\\n * \u968f\u673a\u83b7\u53d6\u96c6\u5408\u4e2d\u7684\u4e00\u4e2a\u5143\u7d20\\r\\n * @param rand_set RandomizedSet\u5bf9\u8c61\u6307\u9488\\r\\n * @return \u968f\u673a\u8fd4\u56de\u7684\u5143\u7d20\u503c\\r\\n */\\r\\nint randomizedSetGetRandom(RandomizedSet *rand_set) {\\r\\n    // \u4f7f\u7528\u968f\u673a\u6570\u751f\u62100\u5230nr-1\u4e4b\u95f4\u7684\u7d22\u5f15\\r\\n    return rand_set->nums[rand() % rand_set->nr];\\r\\n}\\r\\n\\r\\n/**\\r\\n * \u91ca\u653eRandomizedSet\u5bf9\u8c61\u5360\u7528\u7684\u5185\u5b58\\r\\n * @param rand_set RandomizedSet\u5bf9\u8c61\u6307\u9488\\r\\n */\\r\\nvoid randomizedSetFree(RandomizedSet *rand_set) {\\r\\n    if (rand_set->nums)\\r\\n        free(rand_set->nums);\\r\\n    int_hashmap_clear(&rand_set->map);\\r\\n\\r\\n    free(rand_set);\\r\\n}\\r\\n\\r\\n/**\\r\\n * Your RandomizedSet struct will be instantiated and called as such:\\r\\n * RandomizedSet* obj = randomizedSetCreate();\\r\\n * bool param_1 = randomizedSetInsert(obj, val);\\r\\n \\r\\n * bool param_2 = randomizedSetRemove(obj, val);\\r\\n \\r\\n * int param_3 = randomizedSetGetRandom(obj);\\r\\n \\r\\n * randomizedSetFree(obj);\\r\\n*/\\r\\n```\\r\\n</details>\\r\\n\\r\\n## <B2>[\u8865\u5145\u89e3\u91ca](/blog/LeetCode380plus)</B2>"},{"id":"LeetCode274","metadata":{"permalink":"/blog/LeetCode274","editUrl":"https://github.com/EurekaShadow/EurekaShadow.github.io/tree/master/blog/2025-08-04-LeetCode274.mdx","source":"@site/blog/2025-08-04-LeetCode274.mdx","title":"H \u6307\u6570","description":"\u529b\u6263\u9762\u8bd5\u7ecf\u5178\u2014\u2014274\u9898","date":"2025-08-04T00:00:00.000Z","tags":[{"inline":false,"label":"\u6570\u7ec4","permalink":"/blog/tags/\u6570\u7ec4","description":"\u5173\u4e8e\u6570\u7ec4\u7684\u9898\u76ee"}],"readingTime":7.46,"hasTruncateMarker":true,"authors":[{"name":"Eureka X","title":"Mr.Nobody","url":"https://github.com/EurekaShadow","page":{"permalink":"/blog/authors/all-Eureka-X-articles"},"socials":{"github":"https://github.com/EurekaShadow"},"imageURL":"https://github.com/EurekaShadow.png","key":"eurekaX"}],"frontMatter":{"slug":"LeetCode274","title":"H \u6307\u6570","authors":"eurekaX","tags":["\u6570\u7ec4"]},"unlisted":false,"lastUpdatedAt":1754399904000,"prevItem":{"title":"O(1)\u65f6\u95f4\u63d2\u5165\u3001\u5220\u9664\u548c\u83b7\u53d6\u968f\u673a\u5143\u7d20","permalink":"/blog/LeetCode380"},"nextItem":{"title":"\u7b97\u6cd5\u603b\u7ed3","permalink":"/blog/Algorithm"}},"content":"import { Highlight, Keyword, Light, B1, B2, B3, BH3, B3W, MyColor} from \'@site/src/components/ForMDX\';\\r\\n\\r\\n\\r\\n### <B2>[\u529b\u6263\u9762\u8bd5\u7ecf\u5178\u2014\u2014274\u9898](https://leetcode.cn/problems/h-index/description/?envType=study-plan-v2&envId=top-interview-150 \\"\u529b\u6263\\")</B2>\\r\\n\\r\\n\x3c!-- truncate --\x3e\\r\\n\\r\\n\\r\\n### \ud83d\udca1 \u53c2\u8003\u4ee3\u7801\uff1a\\r\\n\\r\\n```c\\r\\n/**\\r\\n * \u8ba1\u7b97\u7814\u7a76\u8005\u7684h\u6307\u6570\\r\\n * \\r\\n * h\u6307\u6570\u7684\u5b9a\u4e49\uff1a\u7814\u7a76\u8005\u81f3\u5c11\u53d1\u8868\u4e86h\u7bc7\u8bba\u6587\uff0c\u5e76\u4e14\u81f3\u5c11\u6709h\u7bc7\u8bba\u6587\u88ab\u5f15\u7528\u6b21\u6570\u5927\u4e8e\u7b49\u4e8eh\\r\\n * \\r\\n * @param citations \u6574\u6570\u6570\u7ec4\uff0ccitations[i]\u8868\u793a\u7b2ci\u7bc7\u8bba\u6587\u7684\u5f15\u7528\u6b21\u6570\\r\\n * @param citationsSize \u6570\u7ec4citations\u7684\u957f\u5ea6\uff0c\u5373\u8bba\u6587\u603b\u6570\\r\\n * @return \u8fd4\u56de\u8be5\u7814\u7a76\u8005\u7684h\u6307\u6570\\r\\n * \\r\\n * \u7b97\u6cd5\u601d\u8def\uff1a\\r\\n * 1. \u4f7f\u7528\u8ba1\u6570\u6392\u5e8f\u7684\u601d\u60f3\uff0c\u7edf\u8ba1\u6bcf\u4e2a\u5f15\u7528\u6b21\u6570\u7684\u8bba\u6587\u6570\u91cf\\r\\n * 2. \u4ece\u9ad8\u5230\u4f4e\u904d\u5386\u53ef\u80fd\u7684h\u503c\uff0c\u627e\u5230\u6ee1\u8db3\u6761\u4ef6\u7684\u6700\u5927h\u503c\\r\\n * \\r\\n * \u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n)\\r\\n * \u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(n)\\r\\n */\\r\\nint hIndex(int* citations, int citationsSize) {\\r\\n    // \u521b\u5efa\u8ba1\u6570\u6570\u7ec4\uff0c\u5927\u5c0f\u4e3a citationsSize + 1\\r\\n    // count[i] \u8868\u793a\u5f15\u7528\u6b21\u6570\u4e3ai\u7684\u8bba\u6587\u6570\u91cf\\r\\n    int* count = (int*)calloc(citationsSize + 1, sizeof(int));\\r\\n    \\r\\n    // \u7edf\u8ba1\u6bcf\u4e2a\u5f15\u7528\u6b21\u6570\u7684\u8bba\u6587\u6570\u91cf\\r\\n    // \u5982\u679c\u5f15\u7528\u6b21\u6570\u8d85\u8fc7\u8bba\u6587\u603b\u6570\uff0c\u5219\u7edf\u4e00\u8ba1\u5165count[citationsSize]\\r\\n    for (int i = 0; i < citationsSize; i++) {\\r\\n        if (citations[i] >= citationsSize) {\\r\\n            count[citationsSize]++;  // \u5f15\u7528\u6b21\u6570\u2265n\u7684\u8bba\u6587\u90fd\u8ba1\u5165\u6700\u9ad8\u8ba1\u6570\u4f4d\\r\\n        } else {\\r\\n            count[citations[i]]++;   // \u6b63\u5e38\u8ba1\u6570\\r\\n        }\\r\\n    }\\r\\n    \\r\\n    // \u4ece\u540e\u5f80\u524d\u7d2f\u52a0\uff0c\u8ba1\u7b97\u5f15\u7528\u6b21\u6570\u5927\u4e8e\u7b49\u4e8ei\u7684\u8bba\u6587\u6570\u91cf\\r\\n    // sum\u8868\u793a\u5f15\u7528\u6b21\u6570\u2265i\u7684\u8bba\u6587\u603b\u6570\\r\\n    int sum = 0;\\r\\n    for (int i = citationsSize; i >= 0; i--) {\\r\\n        sum += count[i];  // \u7d2f\u52a0\u5f15\u7528\u6b21\u6570\u2265i\u7684\u8bba\u6587\u6570\u91cf\\r\\n        if (sum >= i) {   // \u5982\u679c\u5f15\u7528\u6b21\u6570\u2265i\u7684\u8bba\u6587\u6570\u91cf\u2265i\uff0c\u5219h\u6307\u6570\u4e3ai\\r\\n            free(count);\\r\\n            return i;\\r\\n        }\\r\\n    }\\r\\n    \\r\\n    free(count);\\r\\n    return 0;  // \u5982\u679c\u6ca1\u6709\u627e\u5230\u6709\u6548\u7684h\u6307\u6570\uff0c\u8fd4\u56de0\\r\\n}\\r\\n```\\r\\n\\r\\n### \ud83d\udcd6 \u603b\u7ed3\uff1a\\r\\n\\r\\n<details>\\r\\n<summary>\u70b9\u51fb\u5c55\u5f00\u9898\u76ee\u603b\u7ed3</summary>\\r\\n# \ud83e\udd14 H \u6307\u6570\\r\\n\\r\\n---\\r\\n\\r\\n## 1\ufe0f\u20e3 \u9898\u76ee\u6838\u5fc3\u4fe1\u606f\\r\\n\\r\\n\ud83c\udfaf **\u529f\u80fd\u63cf\u8ff0**\uff1a\u6839\u636e\u7ed9\u5b9a\u7684\u8bba\u6587\u5f15\u7528\u6b21\u6570\u6570\u7ec4\uff0c\u8ba1\u7b97\u7814\u7a76\u8005\u7684h\u6307\u6570\u3002h\u6307\u6570\u662f\u6307\u7814\u7a76\u8005\u81f3\u5c11\u53d1\u8868\u4e86h\u7bc7\u8bba\u6587\uff0c\u4e14\u8fd9h\u7bc7\u8bba\u6587\u6bcf\u7bc7\u90fd\u88ab\u5f15\u7528\u81f3\u5c11h\u6b21\u3002\\r\\n\\r\\n\ud83d\udce5 **\u8f93\u5165\u8f93\u51fa**\uff1a\\r\\n- **\u8f93\u5165**\uff1a`int* citations`\uff08\u8bba\u6587\u5f15\u7528\u6b21\u6570\u6570\u7ec4\uff09\uff0c`int citationsSize`\uff08\u8bba\u6587\u603b\u6570\uff09\\r\\n- **\u8f93\u51fa**\uff1a\u8fd4\u56deh\u6307\u6570\u503c\\r\\n\\r\\n---\\r\\n\\r\\n## 2\ufe0f\u20e3 \u5b9e\u73b0\u539f\u7406\\r\\n\\r\\n\ud83d\udca1 **\u6838\u5fc3\u601d\u8def**\uff1a\u4f7f\u7528\u8ba1\u6570\u6392\u5e8f\u7684\u601d\u60f3\uff0c\u7edf\u8ba1\u6bcf\u4e2a\u5f15\u7528\u6b21\u6570\u7684\u8bba\u6587\u6570\u91cf\uff0c\u7136\u540e\u4ece\u9ad8\u5230\u4f4e\u67e5\u627e\u6ee1\u8db3\u6761\u4ef6\u7684\u6700\u5927h\u503c\u3002\\r\\n\\r\\n\ud83d\udccb **\u5b9e\u73b0\u6b65\u9aa4**\uff1a\\r\\n1. \u521b\u5efa\u5927\u5c0f\u4e3a`citationsSize + 1`\u7684\u8ba1\u6570\u6570\u7ec4\uff0c\u7528\u4e8e\u7edf\u8ba1\u6bcf\u4e2a\u5f15\u7528\u6b21\u6570\u7684\u8bba\u6587\u6570\u91cf\\r\\n2. \u904d\u5386\u5f15\u7528\u6570\u7ec4\uff0c\u5c06\u5f15\u7528\u6b21\u6570\u8d85\u8fc7`citationsSize`\u7684\u8bba\u6587\u7edf\u4e00\u8ba1\u5165\u6700\u9ad8\u8ba1\u6570\u4f4d\\r\\n3. \u4ece\u540e\u5f80\u524d\u904d\u5386\u8ba1\u6570\u6570\u7ec4\uff0c\u7d2f\u52a0\u5f15\u7528\u6b21\u6570\u5927\u4e8e\u7b49\u4e8e\u5f53\u524d\u7d22\u5f15\u7684\u8bba\u6587\u603b\u6570\\r\\n4. \u5f53\u7d2f\u52a0\u548c\u5927\u4e8e\u7b49\u4e8e\u5f53\u524d\u7d22\u5f15\u65f6\uff0c\u8be5\u7d22\u5f15\u5373\u4e3a\u6700\u5927\u7684h\u6307\u6570\\r\\n\\r\\n---\\r\\n\\r\\n## 3\ufe0f\u20e3 \u5173\u952e\u70b9\u89e3\u6790\\r\\n\\r\\n\u539f\u59cb\u601d\u8def\u662f\u904d\u5386\u6bcf\u4e2a\u53ef\u80fd\u7684h\u503c\u5e76\u7edf\u8ba1\u6ee1\u8db3\u6761\u4ef6\u7684\u8bba\u6587\u6570\u91cf\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n\xb2)\u3002\u6700\u4f18\u89e3\u4f7f\u7528\u8ba1\u6570\u6392\u5e8f\u601d\u60f3\uff0c\u5c06\u65f6\u95f4\u590d\u6742\u5ea6\u4f18\u5316\u5230O(n)\u3002\\r\\n\\r\\n### \ud83c\udfaf \u4ee3\u7801\u6280\u5de7\\r\\n- \u8ba1\u6570\u6392\u5e8f\u4f18\u5316\uff1a\u5229\u7528\u5f15\u7528\u6b21\u6570\u7684\u6709\u9650\u8303\u56f4\u7279\u6027\\r\\n- \u8fb9\u754c\u5904\u7406\uff1a\u5c06\u5f15\u7528\u6b21\u6570\u8d85\u8fc7n\u7684\u8bba\u6587\u7edf\u4e00\u5904\u7406\\r\\n- \u9006\u5e8f\u7d2f\u52a0\uff1a\u4ece\u6700\u5927\u53ef\u80fd\u7684h\u503c\u5f00\u59cb\u67e5\u627e\uff0c\u786e\u4fdd\u627e\u5230\u6700\u5927\u503c\\r\\n\\r\\n## 4\ufe0f\u20e3 \u4f7f\u7528\u573a\u666f\\r\\n\\r\\n### \u2705 \u9002\u7528\u60c5\u51b5\uff1a\\r\\n- \u8ba1\u7b97\u5b66\u672f\u8bc4\u4ef7\u6307\u6807\\r\\n- \u7edf\u8ba1\u5206\u6790\u573a\u666f\\r\\n- \u9700\u8981\u8bc4\u4f30\\"\u6570\u91cf\u4e0e\u8d28\u91cf\\"\u7efc\u5408\u6307\u6807\u7684\u573a\u666f\\r\\n\\r\\n### \u26a0\ufe0f \u524d\u63d0\u6761\u4ef6\uff1a\\r\\n- \u8f93\u5165\u6570\u7ec4\u4e0d\u4e3a\u7a7a\\r\\n- \u5f15\u7528\u6b21\u6570\u4e3a\u975e\u8d1f\u6574\u6570\\r\\n\\r\\n## 5\ufe0f\u20e3 \u590d\u6742\u5ea6\u5206\u6790\\r\\n\\r\\n- \u23f1\ufe0f \u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n)\uff0c\u9700\u8981\u904d\u5386\u6570\u7ec4\u4e24\u6b21\\r\\n\\r\\n- \ud83d\udcbe \u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(n)\uff0c\u9700\u8981\u989d\u5916\u7684\u8ba1\u6570\u6570\u7ec4\\r\\n\\r\\n## 6\ufe0f\u20e3 \u6ce8\u610f\u4e8b\u9879\\r\\n\\r\\n### \ud83d\udea9 \u8fb9\u754c\u60c5\u51b5\uff1a\\r\\n- \u7a7a\u6570\u7ec4\u6216\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\\r\\n- \u6240\u6709\u8bba\u6587\u5f15\u7528\u6b21\u6570\u90fd\u4e3a0\\r\\n- \u6240\u6709\u8bba\u6587\u5f15\u7528\u6b21\u6570\u90fd\u5f88\u5927\\r\\n\\r\\n### \ud83d\udca5 \u6613\u9519\u70b9\uff1a\\r\\n- \u6df7\u6dc6h\u6307\u6570\u7684\u5b9a\u4e49\uff0c\u8bef\u4ee5\u4e3a\u9700\u8981\u6070\u597dh\u7bc7\u8bba\u6587\u5f15\u7528h\u6b21\\r\\n- \u5fd8\u8bb0\u91ca\u653e\u52a8\u6001\u5206\u914d\u7684\u5185\u5b58\\r\\n- \u8fb9\u754c\u6761\u4ef6\u5904\u7406\u4e0d\u5f53\uff0c\u5982h\u503c\u53ef\u80fd\u4e3a0\u7684\u60c5\u51b5\\r\\n\\r\\n## 7\u20e3 \u8865\u5145\u8bf4\u660e\\r\\n\\r\\n### H \u6307\u6570\u89e3\u91ca\\r\\n\\r\\n\u5047\u8bbe\u67d0\u7814\u7a76\u8005\u53d1\u8868\u4e86 5 \u7bc7\u8bba\u6587\uff0c\u5f15\u7528\u6b21\u6570\u5206\u522b\u4e3a\uff1a`[3, 0, 6, 1, 5]`\\r\\n\\r\\n\u6211\u4eec\u8981\u627e\u6700\u5927\u7684 `h`\uff0c\u4f7f\u5f97\u81f3\u5c11\u6709 h \u7bc7\u8bba\u6587\u88ab\u5f15\u7528\u4e86\u81f3\u5c11 `h` \u6b21\u3002\\r\\n\\r\\n\u5c1d\u8bd5\u51e0\u4e2a `h` \u503c\uff1a\\r\\n\\r\\n- h = 0\uff1a0 \u7bc7\u8bba\u6587\u5f15\u7528 \u2265 0 \u2192 \u6210\u7acb\uff08\u4f46\u6211\u4eec\u8981\u627e\u6700\u5927\u7684 h\uff09\\r\\n- h = 1\uff1a\u81f3\u5c11 1 \u7bc7\u8bba\u6587\u5f15\u7528 \u2265 1 \u2192 \u6210\u7acb\uff08\u6709 4 \u7bc7\uff09\\r\\n- h = 2\uff1a\u81f3\u5c11 2 \u7bc7\u8bba\u6587\u5f15\u7528 \u2265 2 \u2192 \u6210\u7acb\uff08\u6709 3 \u7bc7\uff09\\r\\n- h = 3\uff1a\u81f3\u5c11 3 \u7bc7\u8bba\u6587\u5f15\u7528 \u2265 3 \u2192 \u6210\u7acb\uff08\u6709 3 \u7bc7\uff09\\r\\n- h = 4\uff1a\u81f3\u5c11 4 \u7bc7\u8bba\u6587\u5f15\u7528 \u2265 4 \u2192 \u4e0d\u6210\u7acb\uff08\u53ea\u6709 2 \u7bc7\uff09\\r\\n- h = 5\uff1a\u81f3\u5c11 5 \u7bc7\u8bba\u6587\u5f15\u7528 \u2265 5 \u2192 \u4e0d\u6210\u7acb\uff08\u53ea\u6709 2 \u7bc7\uff09\\r\\n\\r\\n\u6240\u4ee5 h \u6307\u6570\u662f 3\u3002\\r\\n\\r\\n### h\u6307\u6570\u8ba1\u7b97\u793a\u4f8b\u8be6\u89e3\\r\\n\\r\\n\u4f8b\u5b50\uff1a`citations = [3, 0, 6, 1, 5]`\\r\\n\\r\\n\u8bba\u6587\u5f15\u7528\u6b21\u6570\u6570\u7ec4\u4e3a `[3, 0, 6, 1, 5]`\uff0c\u51715\u7bc7\u8bba\u6587\u3002\\r\\n\\r\\n### \u7b2c\u4e00\u6b65\uff1a\u521d\u59cb\u5316\u8ba1\u6570\u6570\u7ec4\\r\\n\\r\\n```c\\r\\nint* count = (int*)calloc(citationsSize + 1, sizeof(int));\\r\\n```\\r\\n\u521b\u5efa\u4e00\u4e2a\u957f\u5ea6\u4e3a 5 + 1 = 6 \u7684\u6570\u7ec4 count\uff0c\u6240\u6709\u5143\u7d20\u521d\u59cb\u4e3a 0\uff1a\\r\\n```c\\r\\ncount = [0, 0, 0, 0, 0, 0]\\r\\n\u7d22\u5f15:    0  1  2  3  4  5\\r\\n```\\r\\n\\r\\n**calloc\u4e0emalloc\u7684\u533a\u522b**\\r\\n- `malloc`: \u53ea\u5206\u914d\u5185\u5b58\uff0c\u4e0d\u521d\u59cb\u5316\u5185\u5bb9\uff08\u5185\u5b58\u4e2d\u53ef\u80fd\u5305\u542b\u968f\u673a\u6570\u636e\uff09\\r\\n- `calloc`: \u5206\u914d\u5185\u5b58\u540e\u4f1a\u5c06\u6240\u6709\u5b57\u8282\u521d\u59cb\u5316\u4e3a0\\r\\n\\r\\n**calloc\u51fd\u6570\u539f\u578b\uff1a**\\r\\n```c\\r\\nvoid* calloc(size_t num, size_t size);\\r\\n```\\r\\n\\r\\n### \u7b2c\u4e8c\u6b65\uff1a\u7edf\u8ba1\u6bcf\u4e2a\u5f15\u7528\u6b21\u6570\u7684\u8bba\u6587\u6570\u91cf\\r\\n```c\\r\\nfor (int i = 0; i < citationsSize; i++) {\\r\\n    if (citations[i] >= citationsSize) {\\r\\n        count[citationsSize]++;\\r\\n    } else {\\r\\n        count[citations[i]]++;\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n\u9010\u4e2a\u5904\u7406\u6bcf\u7bc7\u8bba\u6587\u7684\u5f15\u7528\u6b21\u6570\uff1a\\r\\n\\r\\n- `citations[0]` = `3` \u2192 `count[3]++` \u2192 `count` = `[0, 0, 0, 1, 0, 0]`\\r\\n- `citations[1]` = `0` \u2192 `count[0]++` \u2192 `count` = `[1, 0, 0, 1, 0, 0]`\\r\\n- `citations[2]` = `6` \u2192 `6` >= `5` \u2192 `count[5]++` \u2192 `count` = `[1, 0, 0, 1, 0, 1]`\\r\\n- `citations[3]` = `1` \u2192 `count[1]++` \u2192 `count` = `[1, 1, 0, 1, 0, 1]`\\r\\n- `citations[4]` = `5` \u2192 `count[5]++` \u2192 `count` = `[1, 1, 0, 1, 0, 2]`\\r\\n\u6700\u7ec8 count \u6570\u7ec4\u4e3a\uff1a\\r\\n\\r\\n```c\\r\\ncount = [1, 1, 0, 1, 0, 2]\\r\\n\u7d22\u5f15:    0  1  2  3  4  5\\r\\n```\\r\\n\\r\\n\u8fd9\u8868\u793a\uff1a\\r\\n\\r\\n- \u5f15\u7528\u6b21\u6570\u4e3a 0 \u7684\u8bba\u6587\u6709 1 \u7bc7\\r\\n- \u5f15\u7528\u6b21\u6570\u4e3a 1 \u7684\u8bba\u6587\u6709 1 \u7bc7\\r\\n- \u5f15\u7528\u6b21\u6570\u4e3a 2 \u7684\u8bba\u6587\u6709 0 \u7bc7\\r\\n- \u5f15\u7528\u6b21\u6570\u4e3a 3 \u7684\u8bba\u6587\u6709 1 \u7bc7\\r\\n- \u5f15\u7528\u6b21\u6570\u4e3a 4 \u7684\u8bba\u6587\u6709 0 \u7bc7\\r\\n- \u5f15\u7528\u6b21\u6570 \u2265 5 \u7684\u8bba\u6587\u6709 2 \u7bc7\\r\\n\\r\\n### \u7b2c\u4e09\u6b65\uff1a\u4ece\u540e\u5f80\u524d\u7d2f\u52a0\uff0c\u627e\u6700\u5927\u7684 h\\r\\n```c\\r\\nint sum = 0;\\r\\nfor (int i = citationsSize; i >= 0; i--) {\\r\\n    sum += count[i];\\r\\n    if (sum >= i) {\\r\\n        free(count);\\r\\n        return i;\\r\\n    }\\r\\n}\\r\\n```\\r\\n\u4ece `i = 5` \u5f00\u59cb\u5f80\u4e0b\u68c0\u67e5\uff1a\\r\\n\\r\\n- i = 5:\\r\\n\\r\\n`sum += count[5]` \u2192 `sum = 0 + 2 = 2`\\r\\n- \u5224\u65ad `sum >= i` \u2192 `2 >= 5`\uff1f \u274c \u4e0d\u6210\u7acb\\r\\n- i = 4:\\r\\n\\r\\n- `sum += count[4]` \u2192 `sum = 2 + 0 = 2`\\r\\n- \u5224\u65ad `sum >= i` \u2192 `2 >= 4`\uff1f \u274c \u4e0d\u6210\u7acb\\r\\n- i = 3:\\r\\n\\r\\n- `sum += count[3]` \u2192 `sum = 2 + 1 = 3`\\r\\n- \u5224\u65ad `sum >= i` \u2192 `3 >= 3`\uff1f \u2705 \u6210\u7acb\uff01\u8fd4\u56de 3\\r\\n\u7ed3\u679c\\r\\n\u51fd\u6570\u8fd4\u56de `3`\uff0c\u8fd9\u5c31\u662f\u8be5\u7814\u7a76\u8005\u7684 `h` \u6307\u6570\u3002\\r\\n\\r\\n\u9a8c\u8bc1\u4e00\u4e0b\\r\\n\u5f15\u7528\u6b21\u6570\u6570\u7ec4\uff1a[3, 0, 6, 1, 5]\\r\\n\\r\\n\u6211\u4eec\u68c0\u67e5\u662f\u5426\u6709\u81f3\u5c11 3 \u7bc7\u8bba\u6587\u5f15\u7528\u6b21\u6570 \u2265 3\uff1a\\r\\n\\r\\n- \u8bba\u65871: 3 \u2265 3 \u2705\\r\\n- \u8bba\u65872: 0 \u2265 3 \u274c\\r\\n- \u8bba\u65873: 6 \u2265 3 \u2705\\r\\n- \u8bba\u65874: 1 \u2265 3 \u274c\\r\\n- \u8bba\u65875: 5 \u2265 3 \u2705\\r\\n\\r\\n\u6709 3 \u7bc7\u8bba\u6587\u6ee1\u8db3\u6761\u4ef6\uff0c\u6240\u4ee5 h \u6307\u6570\u786e\u5b9e\u662f 3\u3002\\r\\n\\r\\n### \u6700\u521d\u601d\u8def\\r\\n\u60ed\u6127\uff0c\u8fd9\u9898\u6211\u6700\u521d\u6ca1\u505a\u51fa\u6765\uff0c\u9898\u76ee\u7406\u89e3\u90fd\u662f\u9519\u7684\uff0c\u4e0a\u9762\u7684\u6700\u4f18\u89e3\u81ea\u7136\u662fAI\u7ed9\uff0c\u4e0b\u9762\u8fd9\u4e2a\u6211\u6700\u521d\u7684\u601d\u8def\uff0c\u7ecf\u8fc7AI\u5b8c\u5584\u903b\u8f91\u540e\u7684\u4ee3\u7801\uff1a\\r\\n```c\\r\\nint hIndex(int* citations, int citationsSize) {\\r\\n    int maxH = 0;\\r\\n    \\r\\n    // \u5c1d\u8bd5\u6bcf\u4e2a\u53ef\u80fd\u7684h\u503c\uff08\u4ece0\u5230citationsSize\uff09\\r\\n    for (int h = 0; h <= citationsSize; h++) {\\r\\n        int count = 0;\\r\\n        \\r\\n        // \u8ba1\u7b97\u5f15\u7528\u6b21\u6570>=h\u7684\u8bba\u6587\u6570\u91cf\\r\\n        for (int i = 0; i < citationsSize; i++) {\\r\\n            if (citations[i] >= h) {\\r\\n                count++;\\r\\n            }\\r\\n        }\\r\\n        \\r\\n        // \u5982\u679c\u5f15\u7528\u6b21\u6570>=h\u7684\u8bba\u6587\u6570\u91cf>=h\uff0c\u5219h\u662f\u4e00\u4e2a\u6709\u6548\u503c\\r\\n        if (count >= h) {\\r\\n            if (h > maxH) {\\r\\n                maxH = h;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n    \\r\\n    return maxH;\\r\\n}\\r\\n```\\r\\n### \u5bf9H\u6307\u6570\u8ba1\u7b97\u7b97\u6cd5\u7684\u7406\u89e3\\r\\n\\r\\n**\u7b97\u6cd5\u6838\u5fc3\u601d\u8def**\\r\\n\\r\\n- **H\u6307\u6570\u5b9a\u4e49**\uff1a\u6709h\u7bc7\u8bba\u6587\u81f3\u5c11\u88ab\u5f15\u7528h\u6b21\uff0c\u5176\u4f59\u8bba\u6587\u5f15\u7528\u6b21\u6570\u4e0d\u8d85\u8fc7h\u6b21\\r\\n\\r\\n- **\u5173\u952e\u89c2\u5bdf**\uff1aH\u6307\u6570\u7684\u53d6\u503c\u8303\u56f4\u662f[0, n]\uff0c\u5176\u4e2dn\u662f\u8bba\u6587\u603b\u6570\\r\\n\\r\\n**\u7b97\u6cd5\u6b65\u9aa4\u89e3\u6790**\\r\\n\\r\\n**1.\u6784\u5efa\u8ba1\u6570\u6570\u7ec4**\\r\\n\\r\\n- \u521b\u5efa\u957f\u5ea6\u4e3a n+1 \u7684\u6570\u7ec4 count\\r\\n\\r\\n- count[i] \u8868\u793a\u5f15\u7528\u6b21\u6570\u6070\u597d\u4e3a i \u7684\u8bba\u6587\u6570\u91cf\\r\\n\\r\\n- \u5bf9\u4e8e\u5f15\u7528\u6b21\u6570\u8d85\u8fc7 n \u7684\u8bba\u6587\uff0c\u7edf\u4e00\u8ba1\u5165 count[n]\\r\\n\\r\\n**2.\u7edf\u8ba1\u5f15\u7528\u6b21\u6570\u5206\u5e03**\\r\\n\\r\\n- \u904d\u5386 citations \u6570\u7ec4\\r\\n\\r\\n- \u5bf9\u6bcf\u4e2a\u5f15\u7528\u6b21\u6570\u8fdb\u884c\u8ba1\u6570\u7edf\u8ba1\\r\\n\\r\\n**3.\u8ba1\u7b97H\u6307\u6570**\\r\\n\\r\\n- \u4ece\u540e\u5411\u524d\u904d\u5386 count \u6570\u7ec4\\r\\n\\r\\n- \u7d2f\u8ba1\u5f15\u7528\u6b21\u6570\u2265\u5f53\u524d\u4e0b\u6807\u7684\u6587\u7ae0\u6570\u91cf\\r\\n\\r\\n- \u5f53\u7d2f\u8ba1\u6570\u91cf\u2265\u5f53\u524d\u4e0b\u6807\u65f6\uff0c\u8be5\u4e0b\u6807\u5373\u4e3aH\u6307\u6570\\r\\n\\r\\n</details>"},{"id":"Algorithm","metadata":{"permalink":"/blog/Algorithm","editUrl":"https://github.com/EurekaShadow/EurekaShadow.github.io/tree/master/blog/2025-08-03-Algorithm.mdx","source":"@site/blog/2025-08-03-Algorithm.mdx","title":"\u7b97\u6cd5\u603b\u7ed3","description":"\u8bb0\u5f55\u505a\u529b\u6263\u9762\u8bd5\u7ecf\u5178150\u8fc7\u7a0b\u4e2d\u9047\u5230\u7684\u7b97\u6cd5\ud83e\udd14","date":"2025-08-03T00:00:00.000Z","tags":[{"inline":false,"label":"\u7b97\u6cd5","permalink":"/blog/tags/\u7b97\u6cd5","description":"\u7b97\u6cd5\u603b\u7ed3"}],"readingTime":3.1,"hasTruncateMarker":true,"authors":[{"name":"Eureka X","title":"Mr.Nobody","url":"https://github.com/EurekaShadow","page":{"permalink":"/blog/authors/all-Eureka-X-articles"},"socials":{"github":"https://github.com/EurekaShadow"},"imageURL":"https://github.com/EurekaShadow.png","key":"eurekaX"}],"frontMatter":{"slug":"Algorithm","title":"\u7b97\u6cd5\u603b\u7ed3","authors":"eurekaX","tags":["\u7b97\u6cd5"]},"unlisted":false,"lastUpdatedAt":1754217943000,"prevItem":{"title":"H \u6307\u6570","permalink":"/blog/LeetCode274"},"nextItem":{"title":"\u82f1\u8bed\u5c0f\u7ed3","permalink":"/blog/LearnEng"}},"content":"import { Highlight, Keyword, Light, B1, B2, B3, BH3, B3W, MyColor} from \'@site/src/components/ForMDX\';\\r\\n\\r\\n### <B2>\u8bb0\u5f55\u505a\u529b\u6263\u9762\u8bd5\u7ecf\u5178150\u8fc7\u7a0b\u4e2d\u9047\u5230\u7684\u7b97\u6cd5\ud83e\udd14</B2>\\r\\n\\r\\n\x3c!-- truncate --\x3e\\r\\n\\r\\n\\r\\n## \u8d2a\u5fc3\u7b97\u6cd5\\r\\n\\r\\n### \ud83c\udfaf \u8bc6\u522b\u8d2a\u5fc3\u7b97\u6cd5\u9002\u7528\u573a\u666f\u7684\u6280\u5de7\\r\\n\\r\\n#### 1. \u95ee\u9898\u7279\u5f81\u8bc6\u522b\\r\\n\u4ee5\u4e0b\u7279\u5f81\u901a\u5e38\u8868\u660e\u53ef\u4ee5\u4f7f\u7528\u8d2a\u5fc3\u7b97\u6cd5\uff1a\\r\\n\\r\\n\u2705 **\u6700\u4f18\u5b50\u7ed3\u6784**\uff1a\u95ee\u9898\u7684\u6700\u4f18\u89e3\u5305\u542b\u5b50\u95ee\u9898\u7684\u6700\u4f18\u89e3\\r\\n\u2705 **\u8d2a\u5fc3\u9009\u62e9\u6027\u8d28**\uff1a\u5c40\u90e8\u6700\u4f18\u9009\u62e9\u80fd\u5bfc\u81f4\u5168\u5c40\u6700\u4f18\\r\\n\u2705 **\u65e0\u540e\u6548\u6027**\uff1a\u5f53\u524d\u9009\u62e9\u4e0d\u4f1a\u5f71\u54cd\u4e4b\u524d\u7684\u72b6\u6001\\r\\n\u2705 **\u6c42\u6781\u503c\u95ee\u9898**\uff1a\u6700\u5927\u503c\u3001\u6700\u5c0f\u503c\u3001\u6700\u4f18\u89e3\u7b49\\r\\n\\r\\n#### 2. \u5e38\u89c1\u95ee\u9898\u7c7b\u578b\\r\\n\u4ee5\u4e0b\u7c7b\u578b\u95ee\u9898\u7ecf\u5e38\u4f7f\u7528\u8d2a\u5fc3\u7b56\u7565\uff1a\\r\\n\\r\\n\ud83d\udd22 **\u9009\u62e9\u95ee\u9898**\uff1a\u6d3b\u52a8\u9009\u62e9\u3001\u533a\u95f4\u8c03\u5ea6\\r\\n\ud83d\udcb0 **\u4f18\u5316\u95ee\u9898**\uff1a\u80cc\u5305\u95ee\u9898\u53d8\u79cd\u3001\u80a1\u7968\u4e70\u5356\\r\\n\ud83d\uddfa\ufe0f **\u56fe\u8bba\u95ee\u9898**\uff1a\u6700\u5c0f\u751f\u6210\u6811\u3001\u6700\u77ed\u8def\u5f84\\r\\n\ud83d\udcca **\u6570\u636e\u5904\u7406**\uff1a\u54c8\u592b\u66fc\u7f16\u7801\u3001\u4efb\u52a1\u8c03\u5ea6\\r\\n\ud83c\udfaf **\u6e38\u620f\u7b56\u7565**\uff1a\u8df3\u8dc3\u6e38\u620f\u3001\u5206\u914d\u95ee\u9898\\r\\n\\r\\n### \ud83c\udfaf \u5982\u4f55\u5feb\u901f\u5224\u65ad\u7684\u6280\u5de7\\r\\n\\r\\n#### \u6280\u5de71\uff1a\u95ee\u81ea\u5df1\u51e0\u4e2a\u5173\u952e\u95ee\u9898\\r\\n1. \u662f\u5426\u53ef\u4ee5\u901a\u8fc7\u4e00\u7cfb\u5217\u5c40\u90e8\u9009\u62e9\u5f97\u5230\u5168\u5c40\u6700\u4f18\u89e3\uff1f\\r\\n2. \u5f53\u524d\u7684\u6700\u4f18\u9009\u62e9\u662f\u5426\u4f1a\u5f71\u54cd\u540e\u7eed\u7684\u51b3\u7b56\u7a7a\u95f4\uff1f\\r\\n3. \u5982\u679c\u6bcf\u6b65\u90fd\u9009\u5f53\u524d\u6700\u597d\u7684\uff0c\u6700\u7ec8\u7ed3\u679c\u662f\u5426\u6700\u4f18\uff1f\\r\\n4. \u662f\u5426\u5b58\u5728\u53cd\u4f8b\u80fd\u8bc1\u660e\u8d2a\u5fc3\u4e0d\u6210\u7acb\uff1f\\r\\n\\r\\n#### \u6280\u5de72\uff1a\u770b\u95ee\u9898\u7684\u5173\u952e\u8bcd\\r\\n\u51fa\u73b0\u8fd9\u4e9b\u5173\u952e\u8bcd\u65f6\u8003\u8651\u8d2a\u5fc3\uff1a\\r\\n- \\"\u6700\u5927\\"\u3001\\"\u6700\u5c0f\\"\u3001\\"\u6700\u4f18\\"\\r\\n- \\"\u5c3d\u53ef\u80fd\\"\u3001\\"\u6700\u591a\\"\u3001\\"\u6700\u5c11\\"  \\r\\n- \\"\u5b89\u6392\\"\u3001\\"\u8c03\u5ea6\\"\u3001\\"\u5206\u914d\\"\\r\\n- \\"\u4f7f\u5f97\u603b...\u6700\u5927/\u6700\u5c0f\\"\\r\\n\\r\\n### \ud83c\udfaf \u5982\u4f55\u8bbe\u8ba1\u8d2a\u5fc3\u7b56\u7565\\r\\n\\r\\n#### 1. \u786e\u5b9a\u8d2a\u5fc3\u9009\u62e9\u6807\u51c6\\r\\n\u5173\u952e\u6b65\u9aa4\uff1a\\r\\n1. \u660e\u786e\u6bcf\u4e00\u6b65\u8981\u505a\u51fa\u4ec0\u4e48\u9009\u62e9\\r\\n2. \u786e\u5b9a\u8861\u91cf\\"\u597d\\"\u9009\u62e9\u7684\u6807\u51c6\\r\\n3. \u8bc1\u660e\u8fd9\u4e2a\u9009\u62e9\u6807\u51c6\u7684\u6b63\u786e\u6027\\r\\n\\r\\n#### 2. \u4e3e\u4f8b\u5206\u6790\\r\\n**\u80a1\u7968\u4e70\u5356\u95ee\u9898\u5206\u6790\uff1a**\\r\\n- \u95ee\u9898\uff1a\u5982\u4f55\u83b7\u5f97\u6700\u5927\u5229\u6da6\uff1f\\r\\n- \u8d2a\u5fc3\u9009\u62e9\uff1a\u53ea\u8981\u660e\u5929\u6bd4\u4eca\u5929\u8d35\uff0c\u4eca\u5929\u5c31\u4e70\u5165\u660e\u5929\u5356\u51fa\\r\\n- \u9009\u62e9\u6807\u51c6\uff1a\u4ef7\u683c\u6b63\u589e\u957f\u5c31\u4ea4\u6613\\r\\n- \u6b63\u786e\u6027\uff1a\u6240\u6709\u6b63\u6536\u76ca\u90fd captured\uff0c\u8d1f\u6536\u76ca\u90fd\u907f\u514d\\r\\n\\r\\n**\u8df3\u8dc3\u6e38\u620f\u95ee\u9898\u5206\u6790\uff1a**\\r\\n- \u95ee\u9898\uff1a\u80fd\u5426\u5230\u8fbe\u7ec8\u70b9\uff1f\\r\\n- \u8d2a\u5fc3\u9009\u62e9\uff1a\u6bcf\u5230\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u5c3d\u53ef\u80fd\u6269\u5c55\u53ef\u8fbe\u8303\u56f4\\r\\n- \u9009\u62e9\u6807\u51c6\uff1a\u9009\u62e9\u80fd\u8ba9maxReach\u6700\u5927\u7684\u7b56\u7565\\r\\n- \u6b63\u786e\u6027\uff1a\u6700\u5927\u53ef\u8fbe\u8303\u56f4\u51b3\u5b9a\u4e86\u80fd\u5426\u5230\u8fbe\u7ec8\u70b9\\r\\n\\r\\n### \ud83c\udfaf \u5b9e\u6218\u5224\u65ad\u6d41\u7a0b\\r\\n\\r\\n#### \u4e09\u6b65\u5224\u65ad\u6cd5\uff1a\\r\\nStep 1: \u95ee\u9898\u5206\u6790\\r\\n- \u8fd9\u662f\u4e00\u4e2a\u4f18\u5316\u95ee\u9898\u5417\uff1f(\u6c42\u6700\u5927/\u6700\u5c0f\u503c)\\r\\n- \u662f\u5426\u53ef\u4ee5\u5206\u89e3\u4e3a\u4e00\u7cfb\u5217\u9009\u62e9\uff1f\\r\\n\\r\\nStep 2: \u8d2a\u5fc3\u5047\u8bbe  \\r\\n- \u80fd\u5426\u901a\u8fc7\u5c40\u90e8\u6700\u4f18\u9009\u62e9\u5f97\u5230\u5168\u5c40\u6700\u4f18\uff1f\\r\\n- \u5047\u8bbe\u8d2a\u5fc3\u7b56\u7565\uff0c\u80fd\u5426\u6784\u9020\u53cd\u4f8b\uff1f\\r\\n\\r\\nStep 3: \u7b56\u7565\u8bbe\u8ba1\\r\\n- \u660e\u786e\u6bcf\u6b65\u7684\u8d2a\u5fc3\u9009\u62e9\u662f\u4ec0\u4e48\\r\\n- \u786e\u5b9a\u5982\u4f55\u8861\u91cf\u9009\u62e9\u7684\u597d\u574f\\r\\n- \u9a8c\u8bc1\u7b97\u6cd5\u6b63\u786e\u6027\\r\\n\\r\\n### \ud83c\udfaf \u5e38\u89c1\u8d2a\u5fc3\u7b56\u7565\u6a21\u677f\\r\\n\\r\\n#### 1. \u9009\u62e9\u7c7b\u95ee\u9898\\r\\n```c\\r\\n// \u6a21\u677f\uff1a\u6309\u67d0\u79cd\u6807\u51c6\u6392\u5e8f\u540e\u8d2a\u5fc3\u9009\u62e9\\r\\nsort(elements, compare_function);  // \u9996\u5148\u6309\u67d0\u79cd\u6807\u51c6\u6392\u5e8f\\r\\nfor (each element) {               // \u904d\u5386\u6bcf\u4e2a\u5143\u7d20\\r\\n    if (can_select(element)) {     // \u5982\u679c\u53ef\u4ee5\u9009\u62e9\u5f53\u524d\u5143\u7d20\\r\\n        select(element);           // \u5c31\u9009\u62e9\u5b83\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n#### 2. \u6269\u5c55\u7c7b\u95ee\u9898\\r\\n```c\\r\\n// \u6a21\u677f\uff1a\u9010\u6b65\u6269\u5c55\u6700\u4f18\u89e3\\r\\nfor (each step) {                           // \u904d\u5386\u6bcf\u4e2a\u51b3\u7b56\u6b65\u9aa4\\r\\n    best_choice = find_best_local_choice(); // \u5728\u5f53\u524d\u6b65\u9aa4\u4e2d\u627e\u5230\u5c40\u90e8\u6700\u4f18\u9009\u62e9\\r\\n    if (is_better(best_choice)) {           // \u5982\u679c\u8fd9\u4e2a\u9009\u62e9\u6bd4\u5f53\u524d\u89e3\u66f4\u597d\\r\\n        update_solution(best_choice);       // \u5c31\u7528\u8fd9\u4e2a\u9009\u62e9\u66f4\u65b0\u5f53\u524d\u6700\u4f18\u89e3\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n#### 3. \u7d2f\u79ef\u7c7b\u95ee\u9898\\r\\n```c\\r\\n// \u6a21\u677f\uff1a\u7d2f\u79ef\u5c40\u90e8\u6700\u4f18\u89e3\\r\\ntotal_result = 0;                    // \u521d\u59cb\u5316\u603b\u7ed3\u679c\u4e3a0\\r\\nfor (each sub_problem) {             // \u904d\u5386\u6bcf\u4e2a\u5b50\u95ee\u9898\\r\\n    local_optimal = solve_locally(); // \u6c42\u89e3\u5f53\u524d\u5b50\u95ee\u9898\u7684\u5c40\u90e8\u6700\u4f18\u89e3\\r\\n    total_result += local_optimal;   // \u5c06\u5c40\u90e8\u6700\u4f18\u89e3\u7d2f\u52a0\u5230\u603b\u7ed3\u679c\u4e2d\\r\\n}\\r\\n```\\r\\n\\r\\n### \ud83d\udca1 \u5b9e\u7528\u5efa\u8bae\\r\\n- \u591a\u7ec3\u4e60\u7ecf\u5178\u8d2a\u5fc3\u95ee\u9898\uff1a\u6d3b\u52a8\u9009\u62e9\u3001\u80cc\u5305\u95ee\u9898\u3001\u970d\u592b\u66fc\u7f16\u7801\u7b49\\r\\n- \u5b66\u4f1a\u6784\u9020\u53cd\u4f8b\uff1a\u5982\u679c\u60f3\u4e0d\u51fa\u53cd\u4f8b\u8bc1\u660e\u8d2a\u5fc3\u6210\u7acb\\r\\n- \u5173\u6ce8\u8fb9\u754c\u6761\u4ef6\uff1a\u8d2a\u5fc3\u7b97\u6cd5\u5e38\u5728\u8fb9\u754c\u5904\u51fa\u9519\\r\\n- \u8bc1\u660e\u8d2a\u5fc3\u9009\u62e9\u6027\u8d28\uff1a\u867d\u7136\u9762\u8bd5\u4e0d\u8981\u6c42\u4e25\u683c\u8bc1\u660e\uff0c\u4f46\u601d\u8def\u8981\u6e05\u6670\\r\\n\\r\\n\u8bb0\u4f4f\uff1a\u8d2a\u5fc3\u7b97\u6cd5\u7684\u5173\u952e\u5728\u4e8e\u8bc6\u522b\u95ee\u9898\u7684\u8d2a\u5fc3\u6027\u8d28\u548c\u8bbe\u8ba1\u6b63\u786e\u7684\u8d2a\u5fc3\u7b56\u7565\uff0c\u8fd9\u9700\u8981\u5927\u91cf\u7684\u7ec3\u4e60\u548c\u7ecf\u9a8c\u79ef\u7d2f\u3002\\r\\n\\r\\n---"},{"id":"LearnEng","metadata":{"permalink":"/blog/LearnEng","editUrl":"https://github.com/EurekaShadow/EurekaShadow.github.io/tree/master/blog/2025-08-03-LearnEng.mdx","source":"@site/blog/2025-08-03-LearnEng.mdx","title":"\u82f1\u8bed\u5c0f\u7ed3","description":"\u8bb0\u5f55\u5b66\u4e60\u82f1\u8bed\u4e2d\u9047\u5230\u7684\u4ee4\u4eba\u611f\u5230\u7591\u60d1\u7684\u8868\u8fbe\u65b9\u6cd5\ud83e\udd14","date":"2025-08-03T00:00:00.000Z","tags":[{"inline":false,"label":"English","permalink":"/blog/tags/English","description":"\u8bb0\u5f55\u5b66\u4e60English\u7684\u8fc7\u7a0b\u4e2d\u9047\u5230\u7684\u8ba9\u4eba\u8ff7\u60d1\u7684\u8868\u8fbe\u65b9\u5f0f"}],"readingTime":5.26,"hasTruncateMarker":true,"authors":[{"name":"Eureka X","title":"Mr.Nobody","url":"https://github.com/EurekaShadow","page":{"permalink":"/blog/authors/all-Eureka-X-articles"},"socials":{"github":"https://github.com/EurekaShadow"},"imageURL":"https://github.com/EurekaShadow.png","key":"eurekaX"}],"frontMatter":{"slug":"LearnEng","title":"\u82f1\u8bed\u5c0f\u7ed3","authors":"eurekaX","tags":["English"]},"unlisted":false,"lastUpdatedAt":1754197684000,"prevItem":{"title":"\u7b97\u6cd5\u603b\u7ed3","permalink":"/blog/Algorithm"},"nextItem":{"title":"\u529b\u6263\u505a\u9898\u603b\u7ed3\u6a21\u677f","permalink":"/blog/LeetCodeExample"}},"content":"import { Highlight, Keyword, Light, B1, B2, B3, BH3, B3W, MyColor} from \'@site/src/components/ForMDX\';\\r\\n\\r\\n### <B2>\u8bb0\u5f55\u5b66\u4e60\u82f1\u8bed\u4e2d\u9047\u5230\u7684\u4ee4\u4eba\u611f\u5230\u7591\u60d1\u7684\u8868\u8fbe\u65b9\u6cd5\ud83e\udd14</B2>\\r\\n\\r\\n\x3c!-- truncate --\x3e\\r\\n\\r\\n\\r\\n\\r\\n## **\\"Put one\'s foot down\\"**\\r\\n### **\u542b\u4e49**\\r\\n- **\u6838\u5fc3\u610f\u4e49**\uff1a\u575a\u51b3\u53cd\u5bf9\u67d0\u4e8b\u6216\u5236\u6b62\u67d0\u79cd\u884c\u4e3a\uff0c\u6001\u5ea6\u5f3a\u786c\u4e0d\u5bb9\u59a5\u534f\u3002  \\r\\n- **\u9690\u542b\u6743\u5a01**\uff1a\u901a\u5e38\u7531\u5bb6\u957f\u3001\u4e0a\u53f8\u3001\u8d1f\u8d23\u4eba\u7b49\u5177\u6709\u51b3\u7b56\u6743\u7684\u4eba\u4f7f\u7528\u3002  \\r\\n- **\u60c5\u611f\u8272\u5f69**\uff1a\u53ef\u80fd\u5e26\u6709\u201c\u540e\u6094\u672a\u65e9\u5236\u6b62\u201d\uff08\u8fc7\u53bb\u65f6\uff09\u6216\u201c\u73b0\u5728\u5fc5\u987b\u963b\u6b62\u201d\uff08\u73b0\u5728\u65f6\uff09\u7684\u610f\u5473\u3002  \\r\\n\\r\\n### **\u4f7f\u7528\u5b9e\u4f8b**\\r\\n### 1. **\u5236\u6b62\u4e0d\u5f53\u884c\u4e3a**  \\r\\n- *The teacher **put her foot down** when students tried to cheat on the exam.*  \\r\\n  \uff08\u5b66\u751f\u8bd5\u56fe\u4f5c\u5f0a\u65f6\uff0c\u8001\u5e08\u575a\u51b3\u5236\u6b62\u3002\uff09  \\r\\n- *I had to **put my foot down** when my roommate kept borrowing my clothes without asking.*  \\r\\n  \uff08\u5ba4\u53cb\u672a\u7ecf\u5141\u8bb8\u4e00\u76f4\u501f\u6211\u8863\u670d\uff0c\u6211\u4e0d\u5f97\u4e0d\u660e\u786e\u62d2\u7edd\u3002\uff09  \\r\\n\\r\\n### 2. **\u7ef4\u62a4\u89c4\u5219\u6216\u5e95\u7ebf**  \\r\\n- *The CEO **put his foot down** and banned all overtime work.*  \\r\\n  \uff08CEO \u5f3a\u786c\u7981\u6b62\u6240\u6709\u52a0\u73ed\u3002\uff09  \\r\\n- *Mom **put her foot down**: no video games until homework is done.*  \\r\\n  \uff08\u5988\u5988\u7acb\u4e0b\u89c4\u77e9\uff1a\u4f5c\u4e1a\u505a\u5b8c\u524d\u4e0d\u51c6\u6253\u6e38\u620f\u3002\uff09  \\r\\n\\r\\n### 3. **\u8868\u8fbe\u540e\u6094**  \\r\\n- *I **should have put my foot down** when they suggested cutting corners.*  \\r\\n  \uff08\u4ed6\u4eec\u63d0\u8bae\u5077\u5de5\u51cf\u6599\u65f6\uff0c\u6211\u672c\u8be5\u575a\u51b3\u53cd\u5bf9\u7684\u3002\uff09  \\r\\n\\r\\n### **\u5e38\u89c1\u573a\u666f**\\r\\n- **\u5bb6\u5ead\u573a\u666f**\uff1a\u7236\u6bcd\u7ba1\u6559\u5b69\u5b50\u3002  \\r\\n- **\u804c\u573a\u573a\u666f**\uff1a\u4e0a\u53f8\u5236\u6b62\u8fdd\u89c4\u884c\u4e3a\u3002  \\r\\n- **\u4eba\u9645\u5173\u7cfb**\uff1a\u62d2\u7edd\u4ed6\u4eba\u8d8a\u754c\u8bf7\u6c42\u3002  \\r\\n\\r\\n### **\u52a9\u8bb0\u6280\u5de7**\\r\\n1. **\u52a8\u4f5c\u8054\u60f3**\uff1a\u60f3\u8c61\u7528\u529b\u8e29\u4e0b\u5239\u8f66\uff08\\"put foot down\\"\uff09\u2192 **\u5f3a\u884c\u505c\u6b62**\u67d0\u4e8b\u3002  \\r\\n2. **\u5bf9\u6bd4\u4e60\u8bed**\uff1a  \\r\\n   - \u2705 **\\"Put one\'s foot down\\"** = \u5236\u6b62\uff08\u53cd\u5bf9\uff09\u3002  \\r\\n   - \u274c **\\"Stand one\'s ground\\"** = \u575a\u6301\u7acb\u573a\uff08\u4e0d\u4e00\u5b9a\u662f\u5236\u6b62\uff09\u3002  \\r\\n3. **\u4e2d\u6587\u5bf9\u5e94**\uff1a\u7c7b\u4f3c\u201c\u62cd\u677f\u53eb\u505c\u201d\u6216\u201c\u4eae\u660e\u5e95\u7ebf\u201d\u3002  \\r\\n\\r\\n### **\u26a0\ufe0f \u6ce8\u610f\u4e8b\u9879**\\r\\n- **\u4e0d\u7528\u4e8e\u652f\u6301**\uff1a\u4ec5\u8868\u793a\u201c\u53cd\u5bf9/\u5236\u6b62\u201d\uff0c\u4e0d\u53ef\u66ff\u6362\u4e3a\u652f\u6301\u6027\u8bed\u5883\u3002  \\r\\n- **\u8bed\u6c14\u5f3a\u786c**\uff1a\u9700\u6839\u636e\u5173\u7cfb\u8c28\u614e\u4f7f\u7528\uff0c\u907f\u514d\u663e\u5f97\u4e13\u6a2a\u3002\\r\\n\\r\\n---\\r\\n## **\\"Throw someone under the bus\\"**\\r\\n\\r\\n### **\u542b\u4e49**\\r\\n- **\u6838\u5fc3\u610f\u4e49**\uff1a\u4e3a\u4e86\u81ea\u8eab\u5229\u76ca\u727a\u7272\u6216\u80cc\u53db\u4ed6\u4eba\uff0c\u901a\u5e38\u662f\u5728\u5173\u952e\u65f6\u523b\u63a8\u5378\u8d23\u4efb\u6216\u51fa\u5356\u540c\u4f34\\r\\n- **\u9690\u542b\u610f\u5473**\uff1a\u5e26\u6709\u80cc\u53db\u3001\u4e0d\u5fe0\u8bda\u3001\u81ea\u79c1\u81ea\u5229\u7684\u8d1f\u9762\u542b\u4e49\\r\\n- **\u4f7f\u7528\u573a\u666f**\uff1a\u591a\u7528\u4e8e\u653f\u6cbb\u3001\u804c\u573a\u6216\u56e2\u961f\u5408\u4f5c\u4e2d\u63cf\u8ff0\u80cc\u53db\u884c\u4e3a\\r\\n\\r\\n### **\u4f7f\u7528\u5b9e\u4f8b**\\r\\n### 1. **\u804c\u573a\u80cc\u53db**\\r\\n- *The manager threw his assistant under the bus when the project failed.*\\r\\n  \uff08\u9879\u76ee\u5931\u8d25\u65f6\uff0c\u7ecf\u7406\u628a\u8d23\u4efb\u90fd\u63a8\u7ed9\u4e86\u52a9\u7406\uff09\\r\\n- *Don\'t trust him - he\'ll throw you under the bus to save his own job.*\\r\\n  \uff08\u522b\u76f8\u4fe1\u4ed6\uff0c\u4ed6\u4f1a\u4e3a\u4e86\u4fdd\u4f4f\u81ea\u5df1\u7684\u5de5\u4f5c\u800c\u51fa\u5356\u4f60\uff09\\r\\n\\r\\n### 2. **\u653f\u6cbb\u573a\u5408**\\r\\n- *The senator threw his colleague under the bus to distance himself from the scandal.*\\r\\n  \uff08\u53c2\u8bae\u5458\u4e3a\u4e86\u4e0e\u4e11\u95fb\u6487\u6e05\u5173\u7cfb\u800c\u51fa\u5356\u4e86\u4ed6\u7684\u540c\u4e8b\uff09\\r\\n- *In the debate, the candidate kept trying to throw her opponent under the bus.*\\r\\n  \uff08\u8fa9\u8bba\u4e2d\uff0c\u5019\u9009\u4eba\u4e0d\u65ad\u8bd5\u56fe\u628a\u8d23\u4efb\u63a8\u7ed9\u5bf9\u624b\uff09\\r\\n\\r\\n### 3. **\u65e5\u5e38\u4eba\u9645\u5173\u7cfb**\\r\\n- *I thought we were friends, but she threw me under the bus when the teacher asked who broke the window.*\\r\\n  \uff08\u6211\u4ee5\u4e3a\u6211\u4eec\u662f\u670b\u53cb\uff0c\u4f46\u8001\u5e08\u95ee\u8c01\u6253\u7834\u7a97\u6237\u65f6\u5979\u51fa\u5356\u4e86\u6211\uff09\\r\\n- *Real friends don\'t throw each other under the bus when things go wrong.*\\r\\n  \uff08\u771f\u6b63\u7684\u670b\u53cb\u4e0d\u4f1a\u5728\u51fa\u95ee\u9898\u65f6\u4e92\u76f8\u51fa\u5356\uff09\\r\\n\\r\\n### **\u5e38\u89c1\u573a\u666f**\\r\\n- **\u804c\u573a\u7ade\u4e89**\uff1a\u63a8\u5378\u8d23\u4efb\uff0c\u5ac1\u7978\u540c\u4e8b\\r\\n- **\u653f\u6cbb\u6597\u4e89**\uff1a\u727a\u7272\u76df\u53cb\u4fdd\u5168\u81ea\u5df1\\r\\n- **\u56e2\u961f\u5408\u4f5c**\uff1a\u5173\u952e\u65f6\u523b\u80cc\u53db\u961f\u53cb\\r\\n- **\u670b\u53cb\u5173\u7cfb**\uff1a\u4e3a\u81ea\u4fdd\u800c\u51fa\u5356\u670b\u53cb\\r\\n\\r\\n### **\u52a9\u8bb0\u6280\u5de7**\\r\\n1. **\u5f62\u8c61\u8054\u60f3**\uff1a\u60f3\u8c61\u628a\u522b\u4eba\u63a8\u5230\u884c\u9a76\u7684\u516c\u4ea4\u8f66\u4e0b\u2192\u6781\u7aef\u81ea\u79c1\u7684\u80cc\u53db\u884c\u4e3a\\r\\n2. **\u5bf9\u6bd4\u4e60\u8bed**\uff1a\\r\\n   - \u2705 \\"Throw someone under the bus\\" = \u4e3a\u81ea\u4fdd\u800c\u80cc\u53db\\r\\n   - \u274c \\"Pass the buck\\" = \u63a8\u5378\u8d23\u4efb\uff08\u4e0d\u4e00\u5b9a\u6d89\u53ca\u80cc\u53db\uff09\\r\\n3. **\u4e2d\u6587\u5bf9\u5e94**\uff1a\u7c7b\u4f3c\\"\u8fc7\u6cb3\u62c6\u6865\\"\u3001\\"\u51fa\u5356\\"\u3001\\"\u7529\u9505\\"\\r\\n\\r\\n### **\u26a0\ufe0f \u6ce8\u610f\u4e8b\u9879**\\r\\n- **\u5f3a\u70c8\u8d2c\u4e49**\uff1a\u4f7f\u7528\u65f6\u901a\u5e38\u5e26\u6709\u5f3a\u70c8\u8c34\u8d23\u610f\u5473\\r\\n- **\u7a0b\u5ea6\u4e25\u91cd**\uff1a\u6bd4\u4e00\u822c\u7684\u63a8\u5378\u8d23\u4efb\u66f4\u6076\u52a3\uff0c\u6d89\u53ca\u4e3b\u52a8\u80cc\u53db\\r\\n- **\u5e38\u89c1\u53d8\u4f53**\uff1a\\r\\n  - \\"Throw [\u67d0\u4eba] under the bus\\"\uff08\u5177\u4f53\u5bf9\u8c61\uff09\\r\\n  - \\"Get thrown under the bus\\"\uff08\u88ab\u80cc\u53db\u7684\u88ab\u52a8\u5f62\u5f0f\uff09\\r\\n\\r\\n### **\u5ef6\u4f38\u5b66\u4e60**\\r\\n- **\u540c\u4e49\u8868\u8fbe**\uff1a\\r\\n  - \\"Stab someone in the back\\"\uff08\u80cc\u540e\u6345\u5200\uff09\\r\\n  - \\"Sell someone out\\"\uff08\u51fa\u5356\uff09\\r\\n- **\u53cd\u4e49\u8868\u8fbe**\uff1a\\r\\n  - \\"Have someone\'s back\\"\uff08\u652f\u6301\u67d0\u4eba\uff09\\r\\n  - \\"Stand by someone\\"\uff08\u529b\u633a\u67d0\u4eba\uff09\\r\\n\\r\\n---\\r\\n## **\\"Gaslight someone\\"**\\r\\n\\r\\n### **\u542b\u4e49**\\r\\n- **\u6838\u5fc3\u610f\u4e49**\uff1a\u901a\u8fc7\u5fc3\u7406\u64cd\u7eb5\u4f7f\u67d0\u4eba\u8d28\u7591\u81ea\u5df1\u7684\u8bb0\u5fc6\u3001\u611f\u77e5\u6216\u7406\u667a\\r\\n- **\u8bcd\u6e90\u80cc\u666f**\uff1a\u6e90\u81ea1944\u5e74\u7535\u5f71\u300a\u7164\u6c14\u706f\u4e0b\u300b(Gaslight)\uff0c\u7247\u4e2d\u4e08\u592b\u901a\u8fc7\u64cd\u7eb5\u7164\u6c14\u706f\u5149\u4f7f\u59bb\u5b50\u6000\u7591\u81ea\u5df1\\r\\n- **\u5fc3\u7406\u5f71\u54cd**\uff1a\u5c5e\u4e8e\u60c5\u611f\u8650\u5f85\u7684\u4e00\u79cd\u5f62\u5f0f\uff0c\u4f1a\u5bfc\u81f4\u53d7\u5bb3\u8005\u4ea7\u751f\u81ea\u6211\u6000\u7591\\r\\n\\r\\n### **\u4f7f\u7528\u5b9e\u4f8b**\\r\\n### 1. **\u60c5\u611f\u64cd\u63a7**\\r\\n- *He kept gaslighting me by denying things he had clearly said before.*\\r\\n  \uff08\u4ed6\u901a\u8fc7\u5426\u8ba4\u81ea\u5df1\u8bf4\u8fc7\u7684\u8bdd\u6765\u64cd\u63a7\u6211\uff09\\r\\n- *Don\'t let him gaslight you into thinking you\'re overreacting.*\\r\\n  \uff08\u522b\u8ba9\u4ed6\u64cd\u63a7\u4f60\u89c9\u5f97\u662f\u4f60\u53cd\u5e94\u8fc7\u5ea6\uff09\\r\\n\\r\\n### 2. **\u804c\u573aPUA**\\r\\n- *My boss gaslights the team by constantly changing deadlines and then claiming we misunderstood.*\\r\\n  \uff08\u8001\u677f\u901a\u8fc7\u4e0d\u65ad\u6539\u53d8\u622a\u6b62\u65e5\u671f\u7136\u540e\u8bf4\u662f\u6211\u4eec\u7406\u89e3\u9519\u8bef\u6765\u64cd\u63a7\u56e2\u961f\uff09\\r\\n- *That\'s classic gaslighting - first she gives unclear instructions, then blames us for not following them.*\\r\\n  \uff08\u5178\u578b\u7684\u5fc3\u7406\u64cd\u63a7 - \u5979\u5148\u7ed9\u51fa\u6a21\u7cca\u6307\u793a\uff0c\u7136\u540e\u8d23\u602a\u6211\u4eec\u6ca1\u6709\u9075\u5b88\uff09\\r\\n\\r\\n### 3. **\u5bb6\u5ead\u5173\u7cfb**\\r\\n- *Growing up with a gaslighting parent made me doubt my own judgment.*\\r\\n  \uff08\u5728\u6709\u64cd\u63a7\u6b32\u7684\u7236\u6bcd\u8eab\u8fb9\u957f\u5927\u8ba9\u6211\u6000\u7591\u81ea\u5df1\u7684\u5224\u65ad\u529b\uff09\\r\\n- *She realized her partner had been gaslighting her when she started keeping records of their conversations.*\\r\\n  \uff08\u5f53\u5979\u5f00\u59cb\u8bb0\u5f55\u4ed6\u4eec\u7684\u5bf9\u8bdd\u65f6\uff0c\u624d\u610f\u8bc6\u5230\u4f34\u4fa3\u4e00\u76f4\u5728\u64cd\u63a7\u5979\uff09\\r\\n\\r\\n### **\u5e38\u89c1\u573a\u666f**\\r\\n- **\u4eb2\u5bc6\u5173\u7cfb**\uff1a\u4f34\u4fa3\u95f4\u7684\u5fc3\u7406\u64cd\u63a7\\r\\n- **\u804c\u573a\u73af\u5883**\uff1a\u4e0a\u53f8\u5bf9\u4e0b\u5c5e\u7684\u7cbe\u795e\u63a7\u5236\\r\\n- **\u5bb6\u5ead\u5173\u7cfb**\uff1a\u7236\u6bcd\u5bf9\u5b50\u5973\u7684\u60c5\u611f\u8650\u5f85\\r\\n- **\u653f\u6cbb\u5ba3\u4f20**\uff1a\u901a\u8fc7\u865a\u5047\u4fe1\u606f\u64cd\u63a7\u516c\u4f17\u8ba4\u77e5\\r\\n\\r\\n### **\u52a9\u8bb0\u6280\u5de7**\\r\\n1. **\u7535\u5f71\u8054\u60f3**\uff1a\u8bb0\u4f4f\u6e90\u81ea\u300a\u7164\u6c14\u706f\u4e0b\u300b\u7535\u5f71\u60c5\u8282\\r\\n2. **\u884c\u4e3a\u7279\u5f81**\uff1a\\r\\n   - \u5426\u8ba4\u4e8b\u5b9e\\r\\n   - \u626d\u66f2\u73b0\u5b9e\\r\\n   - \u5236\u9020\u56f0\u60d1\\r\\n3. **\u4e2d\u6587\u5bf9\u5e94**\uff1a\u7c7b\u4f3c\\"\u5fc3\u7406\u64cd\u63a7\\"\u3001\\"\u7cbe\u795e\u63a7\u5236\\"\u3001\\"\u6d17\u8111\\"\\r\\n\\r\\n### **\u26a0\ufe0f \u6ce8\u610f\u4e8b\u9879**\\r\\n- **\u4e25\u91cd\u6027**\uff1a\u5c5e\u4e8e\u5fc3\u7406\u8650\u5f85\uff0c\u6bd4\u7b80\u5355\u7684\u8bf4\u8c0e\u66f4\u6076\u52a3\\r\\n- **\u6e10\u8fdb\u8fc7\u7a0b**\uff1a\u901a\u5e38\u662f\u957f\u671f\u3001\u6e10\u8fdb\u7684\u884c\u4e3a\u6a21\u5f0f\\r\\n- **\u53d7\u5bb3\u8005\u8868\u73b0**\uff1a\\r\\n  - \u7ecf\u5e38\u9053\u6b49\\r\\n  - \u8fc7\u5ea6\u81ea\u6211\u6000\u7591\\r\\n  - \u9700\u8981\u53cd\u590d\u786e\u8ba4\u81ea\u5df1\u7684\u8bb0\u5fc6\\r\\n\\r\\n### **\u5ef6\u4f38\u5b66\u4e60**\\r\\n- **\u76f8\u5173\u6982\u5ff5**\uff1a\\r\\n  - \\"Emotional abuse\\"\uff08\u60c5\u611f\u8650\u5f85\uff09\\r\\n  - \\"Psychological manipulation\\"\uff08\u5fc3\u7406\u64cd\u7eb5\uff09\\r\\n- **\u5e94\u5bf9\u65b9\u5f0f**\uff1a\\r\\n  - \\"Keep a paper trail\\"\uff08\u4fdd\u7559\u4e66\u9762\u8bb0\u5f55\uff09\\r\\n  - \\"Trust your gut\\"\uff08\u76f8\u4fe1\u81ea\u5df1\u7684\u76f4\u89c9\uff09\\r\\n  - \\"Seek external validation\\"\uff08\u5bfb\u6c42\u5916\u90e8\u786e\u8ba4\uff09\\r\\n\\r\\n### **\u8fa8\u522b\u7279\u5f81**\\r\\n1. \u5426\u8ba4\u660e\u660e\u53d1\u751f\u8fc7\u7684\u4e8b\u60c5\\r\\n2. \u5c06\u95ee\u9898\u5f52\u548e\u4e8e\u4f60\u7684\\"\u9519\u8bef\u8bb0\u5fc6\\"\\r\\n3. \u8ba9\u4f60\u89c9\u5f97\u81ea\u5df1\u603b\u662f\u53cd\u5e94\u8fc7\u5ea6\\r\\n4. \u901a\u8fc7\u5c0f\u4e8b\u9010\u6e10\u74e6\u89e3\u4f60\u7684\u81ea\u4fe1\\r\\n\\r\\n---"},{"id":"LeetCodeExample","metadata":{"permalink":"/blog/LeetCodeExample","editUrl":"https://github.com/EurekaShadow/EurekaShadow.github.io/tree/master/blog/2025-08-03-LeetCode.mdx","source":"@site/blog/2025-08-03-LeetCode.mdx","title":"\u529b\u6263\u505a\u9898\u603b\u7ed3\u6a21\u677f","description":"\u529b\u6263\u9762\u8bd5\u7ecf\u5178\u2014\u2014X\u9898","date":"2025-08-03T00:00:00.000Z","tags":[{"inline":false,"label":"\u6570\u7ec4","permalink":"/blog/tags/\u6570\u7ec4","description":"\u5173\u4e8e\u6570\u7ec4\u7684\u9898\u76ee"}],"readingTime":0.98,"hasTruncateMarker":true,"authors":[{"name":"Eureka X","title":"Mr.Nobody","url":"https://github.com/EurekaShadow","page":{"permalink":"/blog/authors/all-Eureka-X-articles"},"socials":{"github":"https://github.com/EurekaShadow"},"imageURL":"https://github.com/EurekaShadow.png","key":"eurekaX"}],"frontMatter":{"slug":"LeetCodeExample","title":"\u529b\u6263\u505a\u9898\u603b\u7ed3\u6a21\u677f","authors":"eurekaX","tags":["\u6570\u7ec4"]},"unlisted":false,"lastUpdatedAt":1754197684000,"prevItem":{"title":"\u82f1\u8bed\u5c0f\u7ed3","permalink":"/blog/LearnEng"},"nextItem":{"title":"\u8df3\u8dc3\u6e38\u620fII","permalink":"/blog/LeetCode45"}},"content":"import { Highlight, Keyword, Light, B1, B2, B3, BH3, B3W, MyColor} from \'@site/src/components/ForMDX\';\\r\\n\\r\\n\\r\\n### <B2>[\u529b\u6263\u9762\u8bd5\u7ecf\u5178\u2014\u2014X\u9898](https://leetcode.cn/studyplan/top-interview-150/ \\"\u529b\u6263\\")</B2>\\r\\n\\r\\n\x3c!-- truncate --\x3e\\r\\n\\r\\n\\r\\n### \ud83d\udca1 \u53c2\u8003\u4ee3\u7801\uff1a\\r\\n\\r\\n```c\\r\\ncode\\r\\n```\\r\\n\\r\\n### \ud83d\udcd6 \u603b\u7ed3\uff1a\\r\\n\\r\\n<details>\\r\\n<summary>\u70b9\u51fb\u5c55\u5f00\u9898\u76ee\u603b\u7ed3</summary>\\r\\n# \ud83e\udd14 [\u9898\u76ee\u540d\u79f0]\\r\\n\\r\\n---\\r\\n\\r\\n## 1\ufe0f\u20e3 \u9898\u76ee\u6838\u5fc3\u4fe1\u606f\\r\\n\\r\\n\ud83c\udfaf **\u529f\u80fd\u63cf\u8ff0**\uff1a[\u7b80\u8981\u63cf\u8ff0\u9898\u76ee\u8981\u89e3\u51b3\u7684\u6838\u5fc3\u95ee\u9898]\\r\\n\\r\\n\ud83d\udce5 **\u8f93\u5165\u8f93\u51fa**\uff1a\\r\\n- **\u8f93\u5165**\uff1a[\u5217\u51fa\u4e3b\u8981\u8f93\u5165\u53c2\u6570\u53ca\u5176\u542b\u4e49]\\r\\n- **\u8f93\u51fa**\uff1a[\u63cf\u8ff0\u51fd\u6570\u8fd4\u56de\u503c\u53ca\u526f\u4f5c\u7528]\\r\\n\\r\\n---\\r\\n\\r\\n## 2\ufe0f\u20e3 \u5b9e\u73b0\u539f\u7406\\r\\n\\r\\n\ud83d\udca1 **\u6838\u5fc3\u601d\u8def**\uff1a[\u6982\u62ec\u89e3\u51b3\u8be5\u95ee\u9898\u7684\u4e3b\u8981\u7b97\u6cd5\u601d\u60f3]\\r\\n\\r\\n\ud83d\udccb **\u5b9e\u73b0\u6b65\u9aa4**\uff1a\\r\\n1. [\u6b65\u9aa41]\\r\\n2. [\u6b65\u9aa42]\\r\\n3. [\u6b65\u9aa43]\\r\\n4. [\u6b65\u9aa44]\\r\\n\\r\\n---\\r\\n\\r\\n## 3\ufe0f\u20e3 \u5173\u952e\u70b9\u89e3\u6790\\r\\n\\r\\n\u7ed9\u51fa\u539f\u59cb\u505a\u9898\u601d\u8def\u5e76\u6bd4\u8f83\u4e0e\u6700\u4f18\u89e3\u533a\u522b\uff08\u53ef\u9009\uff09\\r\\n\\r\\n### \ud83c\udfaf \u4ee3\u7801\u6280\u5de7\\r\\n- [\u6280\u5de71]\\r\\n- [\u6280\u5de72]\\r\\n- [\u6280\u5de73]\\r\\n\\r\\n## 4\ufe0f\u20e3 \u4f7f\u7528\u573a\u666f\\r\\n\\r\\n### \u2705 \u9002\u7528\u60c5\u51b5\uff1a\\r\\n- [\u573a\u666f1]\\r\\n- [\u573a\u666f2]\\r\\n- [\u573a\u666f3]\\r\\n\\r\\n### \u26a0\ufe0f \u524d\u63d0\u6761\u4ef6\uff1a\\r\\n- [\u6761\u4ef61]\\r\\n- [\u6761\u4ef62]\\r\\n\\r\\n## 5\ufe0f\u20e3 \u590d\u6742\u5ea6\u5206\u6790\\r\\n\\r\\n- \u23f1\ufe0f \u65f6\u95f4\u590d\u6742\u5ea6\uff1a[\u65f6\u95f4\u590d\u6742\u5ea6\u5206\u6790]\\r\\n\\r\\n- \ud83d\udcbe \u7a7a\u95f4\u590d\u6742\u5ea6\uff1a[\u7a7a\u95f4\u590d\u6742\u5ea6\u5206\u6790]\\r\\n\\r\\n## 6\ufe0f\u20e3 \u6ce8\u610f\u4e8b\u9879\\r\\n\\r\\n### \ud83d\udea9 \u8fb9\u754c\u60c5\u51b5\uff1a\\r\\n- [\u8fb9\u754c\u60c5\u51b51]\\r\\n- [\u8fb9\u754c\u60c5\u51b52]\\r\\n- [\u8fb9\u754c\u60c5\u51b53]\\r\\n\\r\\n### \ud83d\udca5 \u6613\u9519\u70b9\uff1a\\r\\n- [\u6613\u9519\u70b91]\\r\\n- [\u6613\u9519\u70b92]\\r\\n- [\u6613\u9519\u70b93]\\r\\n</details>"},{"id":"LeetCode45","metadata":{"permalink":"/blog/LeetCode45","editUrl":"https://github.com/EurekaShadow/EurekaShadow.github.io/tree/master/blog/2025-08-03-LeetCode45.mdx","source":"@site/blog/2025-08-03-LeetCode45.mdx","title":"\u8df3\u8dc3\u6e38\u620fII","description":"\u529b\u6263\u9762\u8bd5\u7ecf\u5178\u2014\u201445\u9898","date":"2025-08-03T00:00:00.000Z","tags":[{"inline":false,"label":"\u6570\u7ec4","permalink":"/blog/tags/\u6570\u7ec4","description":"\u5173\u4e8e\u6570\u7ec4\u7684\u9898\u76ee"}],"readingTime":5.76,"hasTruncateMarker":true,"authors":[{"name":"Eureka X","title":"Mr.Nobody","url":"https://github.com/EurekaShadow","page":{"permalink":"/blog/authors/all-Eureka-X-articles"},"socials":{"github":"https://github.com/EurekaShadow"},"imageURL":"https://github.com/EurekaShadow.png","key":"eurekaX"}],"frontMatter":{"slug":"LeetCode45","title":"\u8df3\u8dc3\u6e38\u620fII","authors":"eurekaX","tags":["\u6570\u7ec4"]},"unlisted":false,"lastUpdatedAt":1754217943000,"prevItem":{"title":"\u529b\u6263\u505a\u9898\u603b\u7ed3\u6a21\u677f","permalink":"/blog/LeetCodeExample"},"nextItem":{"title":"\u8df3\u8dc3\u6e38\u620f","permalink":"/blog/LeetCode55"}},"content":"import { Highlight, Keyword, Light, B1, B2, B3, BH3, B3W, MyColor} from \'@site/src/components/ForMDX\';\\r\\n\\r\\n\\r\\n### <B2>[\u529b\u6263\u9762\u8bd5\u7ecf\u5178\u2014\u201445\u9898](https://leetcode.cn/problems/jump-game-ii/description/?envType=study-plan-v2&envId=top-interview-150 \\"\u529b\u6263\\")</B2>\\r\\n\\r\\n\x3c!-- truncate --\x3e\\r\\n\\r\\n\\r\\n### \ud83d\udca1 \u53c2\u8003\u4ee3\u7801\uff1a\\r\\n\\r\\n```c\\r\\n/**\\r\\n * \u8ba1\u7b97\u8df3\u8dc3\u6e38\u620f\u7684\u6700\u5c0f\u8df3\u8dc3\u6b21\u6570\\r\\n * \u6b64\u51fd\u6570\u53ea\u5173\u5fc3\u6700\u5c0f\u8df3\u8dc3\u6b21\u6570\uff0c\u800c\u4e0d\u5173\u5fc3\u771f\u5b9e\u7684\u8df3\u8dc3\u8def\u5f84\\r\\n * @param nums \u975e\u8d1f\u6574\u6570\u6570\u7ec4\uff0c\u6bcf\u4e2a\u5143\u7d20\u4ee3\u8868\u5728\u8be5\u4f4d\u7f6e\u53ef\u4ee5\u8df3\u8dc3\u7684\u6700\u5927\u957f\u5ea6\\r\\n * @param numsSize \u6570\u7ec4\u957f\u5ea6\\r\\n * @return \u5230\u8fbe\u6700\u540e\u4e00\u4e2a\u4e0b\u6807\u7684\u6700\u5c0f\u8df3\u8dc3\u6b21\u6570\\r\\n */\\r\\nint jump(int* nums, int numsSize) {\\r\\n    // \u8fb9\u754c\u60c5\u51b5\uff1a\u6570\u7ec4\u957f\u5ea6\u5c0f\u4e8e\u7b49\u4e8e1\uff0c\u4e0d\u9700\u8981\u8df3\u8dc3\\r\\n    if (numsSize <= 1) return 0;\\r\\n    \\r\\n    int jumps = 0;          // \u8bb0\u5f55\u8df3\u8dc3\u6b21\u6570\\r\\n    int currentEnd = 0;     // \u5f53\u524d\u8fd9\u6b21\u8df3\u8dc3\u80fd\u5230\u8fbe\u7684\u6700\u8fdc\u8fb9\u754c\uff0c\u4f46\u5e76\u975e\u771f\u8981\u8df3\u5230\u6b64\u8fb9\u754c\\r\\n    int farthest = 0;       // \u76ee\u524d\u4e3a\u6b62\u80fd\u5230\u8fbe\u7684\u6700\u8fdc\u4f4d\u7f6e\\r\\n    \\r\\n    // \u53ea\u9700\u8981\u904d\u5386\u5230 numsSize-2\uff0c\u56e0\u4e3a\u9898\u76ee\u4fdd\u8bc1\u80fd\u5230\u8fbe\u6700\u540e\u4f4d\u7f6e\\r\\n    for (int i = 0; i < numsSize - 1; i++) {\\r\\n        // \u8ba1\u7b97\u4ece\u4f4d\u7f6ei\u80fd\u8df3\u5230\u7684\u6700\u8fdc\u4f4d\u7f6e\uff0c\u5e76\u66f4\u65b0\u5168\u5c40\u6700\u8fdc\u4f4d\u7f6e\\r\\n        int currentFarthest = i + nums[i];\\r\\n        farthest = (farthest > currentFarthest) ? farthest : currentFarthest;\\r\\n        \\r\\n        // \u5982\u679c\u5230\u8fbe\u5f53\u524d\u8df3\u8dc3\u7684\u8fb9\u754c\uff0c\u5fc5\u987b\u8fdb\u884c\u4e0b\u4e00\u6b21\u8df3\u8dc3\\r\\n        if (i == currentEnd) {\\r\\n            jumps++;                // \u589e\u52a0\u8df3\u8dc3\u6b21\u6570\\r\\n            currentEnd = farthest;  // \u66f4\u65b0\u4e0b\u4e00\u6b21\u8df3\u8dc3\u7684\u8fb9\u754c\\r\\n        }\\r\\n    }\\r\\n    \\r\\n    return jumps;  // \u8fd4\u56de\u6700\u5c0f\u8df3\u8dc3\u6b21\u6570\\r\\n}\\r\\n```\\r\\n\\r\\n### \ud83d\udcd6 \u603b\u7ed3\uff1a\\r\\n\\r\\n<details>\\r\\n<summary>\u70b9\u51fb\u5c55\u5f00\u9898\u76ee\u603b\u7ed3</summary>\\r\\n# \ud83e\udd14 \u8df3\u8dc3\u6e38\u620f II\\r\\n\\r\\n---\\r\\n\\r\\n## 1\ufe0f\u20e3 \u9898\u76ee\u6838\u5fc3\u4fe1\u606f\\r\\n\\r\\n\ud83c\udfaf **\u529f\u80fd\u63cf\u8ff0**\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4\uff0c\u6570\u7ec4\u4e2d\u6bcf\u4e2a\u5143\u7d20\u8868\u793a\u5728\u8be5\u4f4d\u7f6e\u53ef\u4ee5\u8df3\u8dc3\u7684\u6700\u5927\u957f\u5ea6\uff0c\u6c42\u5230\u8fbe\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\u7684\u6700\u5c0f\u8df3\u8dc3\u6b21\u6570\u3002\\r\\n\\r\\n\ud83d\udce5 **\u8f93\u5165\u8f93\u51fa**\uff1a\\r\\n- **\u8f93\u5165**\uff1aint* nums\uff08\u975e\u8d1f\u6574\u6570\u6570\u7ec4\uff09\uff0cint numsSize\uff08\u6570\u7ec4\u957f\u5ea6\uff09\\r\\n- **\u8f93\u51fa**\uff1a\u5230\u8fbe\u6700\u540e\u4e00\u4e2a\u4e0b\u6807\u7684\u6700\u5c0f\u8df3\u8dc3\u6b21\u6570\\r\\n\\r\\n---\\r\\n\\r\\n## 2\ufe0f\u20e3 \u5b9e\u73b0\u539f\u7406\\r\\n\\r\\n\ud83d\udca1 **\u6838\u5fc3\u601d\u8def**\uff1a\u4f7f\u7528\u8d2a\u5fc3\u7b97\u6cd5\uff0c\u5728\u6bcf\u6b21\u5fc5\u987b\u8df3\u8dc3\u65f6\u9009\u62e9\u80fd\u8df3\u5f97\u6700\u8fdc\u7684\u4f4d\u7f6e\uff0c\u4ece\u800c\u6700\u5c0f\u5316\u8df3\u8dc3\u6b21\u6570\u3002\\r\\n\\r\\n\ud83d\udccb **\u5b9e\u73b0\u6b65\u9aa4**\uff1a\\r\\n1. \u7ef4\u62a4\u4e09\u4e2a\u53d8\u91cf\uff1a\u8df3\u8dc3\u6b21\u6570\u3001\u5f53\u524d\u8df3\u8dc3\u8fb9\u754c\u3001\u5168\u5c40\u6700\u8fdc\u4f4d\u7f6e\\r\\n2. \u904d\u5386\u6570\u7ec4\uff08\u9664\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff09\uff0c\u4e0d\u65ad\u66f4\u65b0\u80fd\u5230\u8fbe\u7684\u6700\u8fdc\u4f4d\u7f6e\\r\\n3. \u5f53\u5230\u8fbe\u5f53\u524d\u8df3\u8dc3\u8fb9\u754c\u65f6\uff0c\u5fc5\u987b\u8fdb\u884c\u4e0b\u4e00\u6b21\u8df3\u8dc3\\r\\n4. \u66f4\u65b0\u8df3\u8dc3\u6b21\u6570\u548c\u4e0b\u4e00\u6b21\u8df3\u8dc3\u7684\u8fb9\u754c\\r\\n\\r\\n---\\r\\n\\r\\n## 3\ufe0f\u20e3 \u5173\u952e\u70b9\u89e3\u6790\\r\\n\\r\\n### \ud83c\udfaf \u4ee3\u7801\u6280\u5de7\\r\\n- \u4f7f\u7528\u8d2a\u5fc3\u7b56\u7565\uff1a\u5728\u5fc5\u987b\u8df3\u8dc3\u65f6\u9009\u62e9\u6700\u4f18\u65b9\u6848\\r\\n- \u53cc\u6307\u9488\u601d\u60f3\uff1acurrentEnd\u6807\u8bb0\u5f53\u524d\u8df3\u8dc3\u8fb9\u754c\uff0cfarthest\u8bb0\u5f55\u6700\u8fdc\u53ef\u8fbe\u4f4d\u7f6e\\r\\n- \u63d0\u524d\u7ec8\u6b62\uff1a\u53ea\u9700\u904d\u5386\u5230\u5012\u6570\u7b2c\u4e8c\u4e2a\u5143\u7d20\\r\\n\\r\\n## 4\ufe0f\u20e3 \u4f7f\u7528\u573a\u666f\\r\\n\\r\\n### \u2705 \u9002\u7528\u60c5\u51b5\uff1a\\r\\n- \u6c42\u89e3\u6700\u5c0f\u8df3\u8dc3\u6b21\u6570\u95ee\u9898\\r\\n- \u6570\u7ec4\u5143\u7d20\u8868\u793a\u8df3\u8dc3\u80fd\u529b\u7684\u573a\u666f\\r\\n- \u9700\u8981\u4f18\u5316\u8def\u5f84\u9009\u62e9\u7684\u95ee\u9898\\r\\n\\r\\n### \u26a0\ufe0f \u524d\u63d0\u6761\u4ef6\uff1a\\r\\n- \u9898\u76ee\u4fdd\u8bc1\u53ef\u4ee5\u5230\u8fbe\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\\r\\n- \u6570\u7ec4\u5143\u7d20\u4e3a\u975e\u8d1f\u6574\u6570\\r\\n\\r\\n## 5\ufe0f\u20e3 \u590d\u6742\u5ea6\u5206\u6790\\r\\n\\r\\n- \u23f1\ufe0f \u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n)\uff0c\u53ea\u9700\u904d\u5386\u4e00\u6b21\u6570\u7ec4\\r\\n- \ud83d\udcbe \u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(1)\uff0c\u53ea\u4f7f\u7528\u5e38\u6570\u989d\u5916\u7a7a\u95f4\\r\\n\\r\\n## 6\ufe0f\u20e3 \u6ce8\u610f\u4e8b\u9879\\r\\n\\r\\n### \ud83d\udea9 \u8fb9\u754c\u60c5\u51b5\uff1a\\r\\n- \u6570\u7ec4\u957f\u5ea6\u4e3a1\uff1a\u4e0d\u9700\u8981\u8df3\u8dc3\uff0c\u8fd4\u56de0\\r\\n- \u6570\u7ec4\u957f\u5ea6\u4e3a2\uff1a\u6700\u591a\u53ea\u97001\u6b21\u8df3\u8dc3\\r\\n- \u7b2c\u4e00\u4e2a\u5143\u7d20\u4e3a0\uff1a\u6839\u636e\u9898\u76ee\u4fdd\u8bc1\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0d\u4f1a\u51fa\u73b0\\r\\n\\r\\n### \ud83d\udca5 \u6613\u9519\u70b9\uff1a\\r\\n- \u5faa\u73af\u53ea\u9700\u8981\u5230 numsSize-1\uff0c\u5426\u5219\u53ef\u80fd\u591a\u8ba1\u7b97\u4e00\u6b21\u8df3\u8dc3\\r\\n- \u5fc5\u987b\u5728\u5230\u8fbe\u8fb9\u754c\u65f6\u624d\u589e\u52a0\u8df3\u8dc3\u6b21\u6570\\r\\n- \u66f4\u65b0\u8fb9\u754c\u548c\u6700\u8fdc\u4f4d\u7f6e\u7684\u987a\u5e8f\u4e0d\u80fd\u98a0\u5012\\r\\n\\r\\n## 7\u20e3 \u8865\u5145\u8bf4\u660e\\r\\n\\r\\n### \ud83c\udfaf \u5173\u952e\u6d1e\u5bdf\\r\\n- `jump` \u53d8\u91cf\u66f4\u65b0\u7684\u4f4d\u7f6e \u2260 \u5b9e\u9645\u8df3\u8dc3\u53d1\u751f\u7684\u7269\u7406\u4f4d\u7f6e\\r\\n- `jump` \u53d8\u91cf\u8868\u793a\u7684\u662f\\"\u5fc5\u987b\u505a\u51fa\u8df3\u8dc3\u51b3\u7b56\\"\u7684\u6b21\u6570\\r\\n\\r\\n### \ud83d\udcca \u7b97\u6cd5\u6267\u884c\u903b\u8f91\\r\\n**\u4f8b\uff1anums = [2, 3, 1, 1, 4]**\\r\\n\\r\\n**\u771f\u5b9e\u8df3\u8dc3\u8def\u5f84**\uff1a0 \u2192 1 \u2192 4\\r\\n\\r\\n**\u7b97\u6cd5\u8ba1\u6570\u903b\u8f91**\uff1a\\r\\n1. **\u4f4d\u7f6e0**\uff1a\u786e\u5b9a\u7b2c1\u6b21\u8df3\u8dc3\u8986\u76d6\u8303\u56f4(0-2)\\r\\n2. **\u4f4d\u7f6e1,2**\uff1a\u63a2\u7d22\u53d1\u73b0\u80fd\u8df3\u5230\u4f4d\u7f6e4\\r\\n3. **\u4f4d\u7f6e2(\u8fb9\u754c)**\uff1a\u5fc5\u987b\u51b3\u7b56\uff0c`jump++`\uff0c\u786e\u5b9a\u4e0b\u6b21\u8df3\u8dc3\u8303\u56f4\\r\\n\\r\\n### \ud83c\udfaf \u7b97\u6cd5\u672c\u8d28\\r\\n\\r\\n\u8fd9\u662f**\u6279\u91cf\u51b3\u7b56**\u8fc7\u7a0b\uff1a\\r\\n- **\u7b2c1\u6b21\u51b3\u7b56**(jump=1)\uff1a\u7ad9\u5728\u8d77\u70b9\uff0c\u786e\u5b9a\u8986\u76d6\u8303\u56f40-2\\r\\n- **\u7b2c2\u6b21\u51b3\u7b56**(jump=2)\uff1a\u5728\u8303\u56f4\u5185\u63a2\u7d22\uff0c\u53d1\u73b0\u80fd\u5230\u4f4d\u7f6e4\\r\\n\\r\\n**\u5b9e\u9645\u6267\u884c**\uff1a\u4f4d\u7f6e0 \u2192 \u4f4d\u7f6e1 \u2192 \u4f4d\u7f6e4  \\r\\n**\u7b97\u6cd5\u8ba1\u6570**\uff1a\u5728\u5fc5\u987b\u51b3\u7b56\u65f6\u8ba1\u6570\uff0c\u975e\u5b9e\u9645\u8d77\u8df3\u65f6\\r\\n\\r\\n### \ud83d\udca1 \u8bbe\u8ba1\u4f18\u52bf\\r\\n- **\u63d0\u524d\u89c4\u5212**\uff1a\u5fc5\u987b\u8df3\u8dc3\u524d\u5df2\u77e5\u6700\u4f18\u9009\u62e9\\r\\n- **\u6279\u91cf\u5904\u7406**\uff1a\u4e00\u6b21\u51b3\u7b56\u8986\u76d6\u4e00\u4e2a\u533a\u95f4  \\r\\n- **\u8d2a\u5fc3\u6700\u4f18**\uff1a\u6bcf\u6b21\u90fd\u9009\u80fd\u8df3\u6700\u8fdc\u7684\u65b9\u6848\\r\\n\\r\\n\u2705 `jump` \u53d8\u91cf\u5bb9\u6613\u8bef\u5bfc\u4eba\uff0c\u5b83\u8bb0\u5f55\u7684\u662f\\"\u51b3\u7b56\u6b21\u6570\\"\u800c\u975e\\"\u8d77\u8df3\u65f6\u523b\\"\u3002\\r\\n\\r\\n## 8\u20e3 \u60d1\u4e4b\u672a\u89e3\uff1f\\r\\n\\r\\n### \ud83e\udd14 \u95ee\u9898\u601d\u8003\\r\\n\u4e3a\u4ec0\u4e48for\u5faa\u73af\u7684\u5224\u65ad\u6761\u4ef6\u662f `i < numsSize - 1` \u800c\u4e0d\u662f `i < numsSize`\uff1f\\r\\n\\r\\n\u5982\u679c\u4f7f\u7528 `i < numsSize`\uff0c\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff08\u5982 `[2,3,1,1,4]`\uff09\uff0c\u5f53\u80fd\u591f\u8df3\u8f6c\u5230\u6700\u540e\u4f4d\u7f6e\u65f6\uff0c`jump` \u4f1a\u591a\u52a01\uff0c\u5bfc\u81f4\u7ed3\u679c\u9519\u8bef\u3002\\r\\n\\r\\n### \ud83e\uddd0 \u6df1\u5165\u5206\u6790\\r\\n\u7ecf\u8fc7\u518d\u6b21\u601d\u8003\uff0c\u8fd9\u4e9b\u53d8\u91cf `jump`\u3001`currentEnd`\u3001`farthest`\u3001`currentFarthest` \u90fd\u662f\u6839\u636e\u6570\u7ec4\u4e0b\u6807\u53ca\u5176\u5bf9\u5e94\u6570\u503c\u6765\u51b3\u5b9a\u662f\u5426\u66f4\u65b0\u7684\u3002\\r\\n\\r\\n**\u5173\u952e\u7406\u89e3\u70b9**\uff1a\\r\\n- `jump` \u7684\u542b\u4e49\u662f\\"\u9700\u8981\u8df3\u8dc3jump\u6b21\u624d\u80fd\u5230\u8fbe\u6570\u7ec4\u6700\u540e\u4e00\u4e2a\u5143\u7d20\\"\\r\\n- \u5982\u679c\u5faa\u73af\u6761\u4ef6\u8bbe\u5b9a\u4e3a `i < numsSize`\uff0cfor\u5faa\u73af\u4f1a\u904d\u5386\u5230\u6570\u7ec4\u7684\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\\r\\n- \u4f46\u5f53\u6211\u4eec\u5904\u7406\u5230\u5012\u6570\u7b2c\u4e8c\u4e2a\u4f4d\u7f6e\u65f6\uff0c\u5df2\u7ecf\u6536\u96c6\u4e86\u8db3\u591f\u7684\u4fe1\u606f\u6765\u786e\u5b9a\u6700\u5c11\u8df3\u8dc3\u6b21\u6570\\r\\n- \u7ee7\u7eed\u5904\u7406\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\u662f\u4e0d\u5fc5\u8981\u7684\uff0c\u751a\u81f3\u53ef\u80fd\u5bfc\u81f4\u9519\u8bef\u7ed3\u679c\\r\\n\\r\\n## 9\u20e3 \u4e3e\u4e00\u53cd\u4e00\uff1f\ud83d\ude02\\r\\n\\r\\n**\u6700\u5c0f\u8df3\u8dc3\u6b21\u6570 + \u771f\u5b9e\u8df3\u8dc3\u8def\u5f84**\\r\\n```c\\r\\n/**\\r\\n * \u8ba1\u7b97\u8df3\u8dc3\u6e38\u620f\u7684\u6700\u5c0f\u8df3\u8dc3\u6b21\u6570\u548c\u8def\u5f84\\r\\n * @param nums \u975e\u8d1f\u6574\u6570\u6570\u7ec4\uff0c\u6bcf\u4e2a\u5143\u7d20\u4ee3\u8868\u5728\u8be5\u4f4d\u7f6e\u53ef\u4ee5\u8df3\u8dc3\u7684\u6700\u5927\u957f\u5ea6\\r\\n * @param numsSize \u6570\u7ec4\u957f\u5ea6\\r\\n * @param path \u7528\u4e8e\u5b58\u50a8\u8df3\u8dc3\u8def\u5f84\u7684\u6570\u7ec4\\r\\n * @param pathSize \u7528\u4e8e\u8fd4\u56de\u8def\u5f84\u957f\u5ea6\u7684\u6307\u9488\\r\\n * @return \u5230\u8fbe\u6700\u540e\u4e00\u4e2a\u4e0b\u6807\u7684\u6700\u5c0f\u8df3\u8dc3\u6b21\u6570\\r\\n */\\r\\nint jumpWithPath(int* nums, int numsSize, int* path, int* pathSize) {\\r\\n    // \u8fb9\u754c\u60c5\u51b5\uff1a\u6570\u7ec4\u957f\u5ea6\u5c0f\u4e8e\u7b49\u4e8e1\uff0c\u4e0d\u9700\u8981\u8df3\u8dc3\\r\\n    if (numsSize <= 1) {\\r\\n        *pathSize = 0;\\r\\n        return 0;\\r\\n    }\\r\\n    \\r\\n    int jumps = 0;          // \u8bb0\u5f55\u8df3\u8dc3\u6b21\u6570\\r\\n    int currentEnd = 0;     // \u5f53\u524d\u8fd9\u6b21\u8df3\u8dc3\u80fd\u5230\u8fbe\u7684\u6700\u8fdc\u8fb9\u754c\\r\\n    int farthest = 0;       // \u76ee\u524d\u4e3a\u6b62\u80fd\u5230\u8fbe\u7684\u6700\u8fdc\u4f4d\u7f6e\\r\\n    int farthestIndex = 0;  // \u80fd\u5230\u8fbe\u6700\u8fdc\u4f4d\u7f6e\u7684\u7d22\u5f15\\r\\n    \\r\\n    // \u8bb0\u5f55\u8def\u5f84\\r\\n    path[0] = 0;            // \u8d77\u70b9\u603b\u662f\u4f4d\u7f6e0\\r\\n    int pathIndex = 1;\\r\\n    \\r\\n    // \u53ea\u9700\u8981\u904d\u5386\u5230 numsSize-2\uff0c\u56e0\u4e3a\u9898\u76ee\u4fdd\u8bc1\u80fd\u5230\u8fbe\u6700\u540e\u4f4d\u7f6e\\r\\n    for (int i = 0; i < numsSize - 1; i++) {\\r\\n        // \u8ba1\u7b97\u4ece\u4f4d\u7f6ei\u80fd\u8df3\u5230\u7684\u6700\u8fdc\u4f4d\u7f6e\\r\\n        int currentFarthest = i + nums[i];\\r\\n        \\r\\n        // \u66f4\u65b0\u5168\u5c40\u6700\u8fdc\u4f4d\u7f6e\u548c\u5bf9\u5e94\u7684\u7d22\u5f15\\r\\n        if (currentFarthest > farthest) {\\r\\n            farthest = currentFarthest;\\r\\n            farthestIndex = i;\\r\\n        }\\r\\n        \\r\\n        // \u5982\u679c\u5230\u8fbe\u5f53\u524d\u8df3\u8dc3\u7684\u8fb9\u754c\uff0c\u5fc5\u987b\u8fdb\u884c\u4e0b\u4e00\u6b21\u8df3\u8dc3\\r\\n        if (i == currentEnd) {\\r\\n            jumps++;                // \u589e\u52a0\u8df3\u8dc3\u6b21\u6570\\r\\n            currentEnd = farthest;  // \u66f4\u65b0\u4e0b\u4e00\u6b21\u8df3\u8dc3\u7684\u8fb9\u754c\\r\\n            path[pathIndex++] = farthestIndex;  // \u8bb0\u5f55\u8df3\u8dc3\u4f4d\u7f6e\\r\\n        }\\r\\n    }\\r\\n    \\r\\n    // \u6dfb\u52a0\u7ec8\u70b9\\r\\n    path[pathIndex++] = numsSize - 1;\\r\\n    *pathSize = pathIndex;\\r\\n    \\r\\n    return jumps;  // \u8fd4\u56de\u6700\u5c0f\u8df3\u8dc3\u6b21\u6570\\r\\n}\\r\\n\\r\\n// \u4f7f\u7528\u793a\u4f8b\\r\\n/*\\r\\nint main() {\\r\\n    int nums[] = {2, 3, 1, 1, 4};\\r\\n    int numsSize = 5;\\r\\n    int path[100];\\r\\n    int pathSize;\\r\\n    \\r\\n    int jumps = jumpWithPath(nums, numsSize, path, &pathSize);\\r\\n    \\r\\n    printf(\\"\u6700\u5c0f\u8df3\u8dc3\u6b21\u6570: %d\\\\n\\", jumps);\\r\\n    printf(\\"\u8df3\u8dc3\u8def\u5f84: \\");\\r\\n    for (int i = 0; i < pathSize; i++) {\\r\\n        printf(\\"%d \\", path[i]);\\r\\n    }\\r\\n    printf(\\"\\\\n\\");\\r\\n    \\r\\n    return 0;\\r\\n}\\r\\n*/\\r\\n```\\r\\n</details>"},{"id":"LeetCode55","metadata":{"permalink":"/blog/LeetCode55","editUrl":"https://github.com/EurekaShadow/EurekaShadow.github.io/tree/master/blog/2025-08-03-LeetCode55.mdx","source":"@site/blog/2025-08-03-LeetCode55.mdx","title":"\u8df3\u8dc3\u6e38\u620f","description":"\u529b\u6263\u9762\u8bd5\u7ecf\u5178\u2014\u201455\u9898","date":"2025-08-03T00:00:00.000Z","tags":[{"inline":false,"label":"\u6570\u7ec4","permalink":"/blog/tags/\u6570\u7ec4","description":"\u5173\u4e8e\u6570\u7ec4\u7684\u9898\u76ee"}],"readingTime":3.69,"hasTruncateMarker":true,"authors":[{"name":"Eureka X","title":"Mr.Nobody","url":"https://github.com/EurekaShadow","page":{"permalink":"/blog/authors/all-Eureka-X-articles"},"socials":{"github":"https://github.com/EurekaShadow"},"imageURL":"https://github.com/EurekaShadow.png","key":"eurekaX"}],"frontMatter":{"slug":"LeetCode55","title":"\u8df3\u8dc3\u6e38\u620f","authors":"eurekaX","tags":["\u6570\u7ec4"]},"unlisted":false,"lastUpdatedAt":1754217943000,"prevItem":{"title":"\u8df3\u8dc3\u6e38\u620fII","permalink":"/blog/LeetCode45"},"nextItem":{"title":"\u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a\u2161","permalink":"/blog/LeetCode122"}},"content":"import { Highlight, Keyword, Light, B1, B2, B3, BH3, B3W, MyColor} from \'@site/src/components/ForMDX\';\\r\\n\\r\\n\\r\\n### <B2>[\u529b\u6263\u9762\u8bd5\u7ecf\u5178\u2014\u201455\u9898](https://leetcode.cn/problems/jump-game/description/?envType=study-plan-v2&envId=top-interview-150 \\"\u529b\u6263\\")</B2>\\r\\n\\r\\n\x3c!-- truncate --\x3e\\r\\n\\r\\n\\r\\n### \ud83d\udca1 \u53c2\u8003\u4ee3\u7801\uff1a\\r\\n\\r\\n```c\\r\\n/**\\r\\n * \u5224\u65ad\u662f\u5426\u80fd\u8df3\u5230\u6700\u540e\u4e00\u4e2a\u4e0b\u6807\\r\\n * @param nums \u975e\u8d1f\u6574\u6570\u6570\u7ec4\uff0c\u6bcf\u4e2a\u5143\u7d20\u4ee3\u8868\u5728\u8be5\u4f4d\u7f6e\u53ef\u4ee5\u8df3\u8dc3\u7684\u6700\u5927\u957f\u5ea6\\r\\n * @param numsSize \u6570\u7ec4\u957f\u5ea6\\r\\n * @return \u5982\u679c\u80fd\u5230\u8fbe\u6700\u540e\u4e00\u4e2a\u4e0b\u6807\u8fd4\u56detrue\uff0c\u5426\u5219\u8fd4\u56defalse\\r\\n */\\r\\nbool canJump(int* nums, int numsSize) {\\r\\n    int maxReach = 0; // \u8bb0\u5f55\u5f53\u524d\u80fd\u5230\u8fbe\u7684\u6700\u8fdc\u4f4d\u7f6e\u4e0b\u6807\\r\\n    \\r\\n    // \u904d\u5386\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u4f4d\u7f6e\\r\\n    for (int i = 0; i < numsSize; i++) {\\r\\n        // \u5982\u679c\u5f53\u524d\u4f4d\u7f6ei\u8d85\u51fa\u4e86\u5f53\u524d\u80fd\u5230\u8fbe\u7684\u6700\u8fdc\u4f4d\u7f6e\uff0c\u8bf4\u660e\u65e0\u6cd5\u5230\u8fbe\u4f4d\u7f6ei\\r\\n        if (i > maxReach) {\\r\\n            return false;\\r\\n        }\\r\\n        \\r\\n        // \u8ba1\u7b97\u4ece\u5f53\u524d\u4f4d\u7f6ei\u80fd\u5230\u8fbe\u7684\u6700\u8fdc\u4f4d\u7f6e\\r\\n        int currentReach = i + nums[i];\\r\\n        \\r\\n        // \u66f4\u65b0\u5168\u5c40\u80fd\u5230\u8fbe\u7684\u6700\u8fdc\u4f4d\u7f6e\\r\\n        if (currentReach > maxReach) {\\r\\n            maxReach = currentReach;\\r\\n        }\\r\\n        \\r\\n        // \u5982\u679c\u5df2\u7ecf\u80fd\u5230\u8fbe\u6216\u8d85\u8fc7\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e(numsSize-1)\uff0c\u76f4\u63a5\u8fd4\u56detrue\\r\\n        if (maxReach >= numsSize - 1) {\\r\\n            return true;\\r\\n        }\\r\\n    }\\r\\n    \\r\\n    // \u5fc5\u987b\u4fdd\u7559\u8fd9\u884c\uff0c\u5373\u4f7f\u903b\u8f91\u4e0a\u4e0d\u4f1a\u6267\u884c\u5230\\r\\n    return maxReach >= numsSize - 1;\\r\\n}\\r\\n```\\r\\n\\r\\n### \ud83d\udcd6 \u603b\u7ed3\uff1a\\r\\n\\r\\n<details>\\r\\n<summary>\u70b9\u51fb\u5c55\u5f00\u9898\u76ee\u603b\u7ed3</summary>\\r\\n# \ud83e\udd14 \u8df3\u8dc3\u6e38\u620f\\r\\n\\r\\n---\\r\\n\\r\\n## 1\ufe0f\u20e3 \u9898\u76ee\u6838\u5fc3\u4fe1\u606f\\r\\n\\r\\n\ud83c\udfaf **\u529f\u80fd\u63cf\u8ff0**\uff1a\u5224\u65ad\u662f\u5426\u80fd\u4ece\u6570\u7ec4\u7684\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u8df3\u8dc3\u5230\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u6570\u7ec4\u4e2d\u6bcf\u4e2a\u5143\u7d20\u8868\u793a\u5728\u8be5\u4f4d\u7f6e\u53ef\u4ee5\u8df3\u8dc3\u7684\u6700\u5927\u957f\u5ea6\\r\\n\\r\\n\ud83d\udce5 **\u8f93\u5165\u8f93\u51fa**\uff1a\\r\\n- **\u8f93\u5165**\uff1aint* nums\uff08\u975e\u8d1f\u6574\u6570\u6570\u7ec4\uff09\uff0cint numsSize\uff08\u6570\u7ec4\u957f\u5ea6\uff09\\r\\n- **\u8f93\u51fa**\uff1abool\u7c7b\u578b\uff0c\u5982\u679c\u80fd\u5230\u8fbe\u6700\u540e\u4e00\u4e2a\u4e0b\u6807\u8fd4\u56detrue\uff0c\u5426\u5219\u8fd4\u56defalse\\r\\n\\r\\n---\\r\\n\\r\\n## 2\ufe0f\u20e3 \u5b9e\u73b0\u539f\u7406\\r\\n\\r\\n\ud83d\udca1 **\u6838\u5fc3\u601d\u8def**\uff1a\u4f7f\u7528\u8d2a\u5fc3\u7b97\u6cd5\uff0c\u7ef4\u62a4\u4e00\u4e2a\u53d8\u91cf\u8bb0\u5f55\u5f53\u524d\u80fd\u5230\u8fbe\u7684\u6700\u8fdc\u4f4d\u7f6e\uff0c\u904d\u5386\u6570\u7ec4\u4e0d\u65ad\u66f4\u65b0\u6700\u8fdc\u53ef\u8fbe\u4f4d\u7f6e\\r\\n\\r\\n\ud83d\udccb **\u5b9e\u73b0\u6b65\u9aa4**\uff1a\\r\\n1. \u521d\u59cb\u5316maxReach\u4e3a0\uff0c\u8868\u793a\u5f53\u524d\u80fd\u5230\u8fbe\u7684\u6700\u8fdc\u4f4d\u7f6e\u4e0b\u6807\\r\\n2. \u904d\u5386\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u4f4d\u7f6ei\\r\\n3. \u5982\u679c\u5f53\u524d\u4f4d\u7f6ei\u8d85\u51famaxReach\uff0c\u8bf4\u660e\u65e0\u6cd5\u5230\u8fbe\uff0c\u8fd4\u56defalse\\r\\n4. \u8ba1\u7b97\u4ece\u4f4d\u7f6ei\u80fd\u5230\u8fbe\u7684\u6700\u8fdc\u4f4d\u7f6e(i + nums[i])\uff0c\u5e76\u66f4\u65b0maxReach\\r\\n5. \u5982\u679cmaxReach\u5df2\u7ecf\u80fd\u5230\u8fbe\u6216\u8d85\u8fc7\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u76f4\u63a5\u8fd4\u56detrue\\r\\n6. \u904d\u5386\u7ed3\u675f\u540e\u68c0\u67e5maxReach\u662f\u5426\u80fd\u5230\u8fbe\u6700\u540e\u4e00\u4e2a\u4e0b\u6807\\r\\n\\r\\n---\\r\\n\\r\\n## 3\ufe0f\u20e3 \u5173\u952e\u70b9\u89e3\u6790\\r\\n\\r\\n\u539f\u59cb\u601d\u8def\u662f\u901a\u8fc7BFS\u65b9\u5f0f\u63a2\u7d22\u6240\u6709\u53ef\u80fd\u8def\u5f84\uff0c\u9010\u5c42\u6269\u5c55\u53ef\u80fd\u7684\u8df3\u8dc3\u8def\u5f84\uff0c\u4f46\u8fd9\u79cd\u65b9\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6\u8f83\u9ad8\u3002\u6700\u4f18\u89e3\u4f7f\u7528\u8d2a\u5fc3\u7b97\u6cd5\uff0c\u901a\u8fc7\u7ef4\u62a4\u5168\u5c40\u6700\u8fdc\u53ef\u8fbe\u4f4d\u7f6e\u6765\u5224\u65ad\uff0c\u907f\u514d\u4e86\u8def\u5f84\u63a2\u7d22\u548c\u91cd\u590d\u8ba1\u7b97\u3002\\r\\n\\r\\n### \ud83c\udfaf \u4ee3\u7801\u6280\u5de7\\r\\n- \u4f7f\u7528maxReach\u53d8\u91cf\u8bb0\u5f55\u5168\u5c40\u6700\u8fdc\u53ef\u8fbe\u4f4d\u7f6e\uff0c\u907f\u514d\u91cd\u590d\u8ba1\u7b97\\r\\n- \u63d0\u524d\u7ec8\u6b62\u4f18\u5316\uff1a\u4e00\u65e6\u80fd\u5230\u8fbe\u7ec8\u70b9\u5c31\u7acb\u5373\u8fd4\u56de\uff0c\u65e0\u9700\u7ee7\u7eed\u904d\u5386\\r\\n- \u8fb9\u754c\u68c0\u67e5\uff1a\u5728\u904d\u5386\u8fc7\u7a0b\u4e2d\u5b9e\u65f6\u68c0\u67e5\u662f\u5426\u80fd\u5230\u8fbe\u5f53\u524d\u4f4d\u7f6e\\r\\n\\r\\n## 4\ufe0f\u20e3 \u4f7f\u7528\u573a\u666f\\r\\n\\r\\n### \u2705 \u9002\u7528\u60c5\u51b5\uff1a\\r\\n- \u5224\u65ad\u80fd\u5426\u901a\u8fc7\u8df3\u8dc3\u5230\u8fbe\u76ee\u6807\u4f4d\u7f6e\\r\\n- \u6e38\u620f\u4e2d\u89d2\u8272\u79fb\u52a8\u8303\u56f4\u5224\u65ad\\r\\n- \u8d44\u6e90\u5206\u914d\u95ee\u9898\u4e2d\u5224\u65ad\u80fd\u5426\u8986\u76d6\u6240\u6709\u8282\u70b9\\r\\n\\r\\n### \u26a0\ufe0f \u524d\u63d0\u6761\u4ef6\uff1a\\r\\n- \u6570\u7ec4\u5143\u7d20\u4e3a\u975e\u8d1f\u6574\u6570\\r\\n- \u6570\u7ec4\u957f\u5ea6\u81f3\u5c11\u4e3a1\\r\\n- \u4ece\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u5f00\u59cb\u8df3\u8dc3\\r\\n\\r\\n## 5\ufe0f\u20e3 \u590d\u6742\u5ea6\u5206\u6790\\r\\n\\r\\n- \u23f1\ufe0f \u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n)\uff0c\u5176\u4e2dn\u662f\u6570\u7ec4\u957f\u5ea6\uff0c\u53ea\u9700\u904d\u5386\u4e00\u6b21\u6570\u7ec4\\r\\n\\r\\n- \ud83d\udcbe \u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(1)\uff0c\u53ea\u4f7f\u7528\u4e86\u5e38\u6570\u7ea7\u522b\u7684\u989d\u5916\u7a7a\u95f4\\r\\n\\r\\n## 6\ufe0f\u20e3 \u6ce8\u610f\u4e8b\u9879\\r\\n\\r\\n### \ud83d\udea9 \u8fb9\u754c\u60c5\u51b5\uff1a\\r\\n- \u6570\u7ec4\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\u7684\u60c5\u51b5\\r\\n- \u7b2c\u4e00\u4e2a\u5143\u7d20\u4e3a0\u7684\u60c5\u51b5\\r\\n- \u4e2d\u95f4\u5b58\u57280\u5143\u7d20\u7684\u60c5\u51b5\\r\\n\\r\\n### \ud83d\udca5 \u6613\u9519\u70b9\uff1a\\r\\n- \u5fd8\u8bb0\u68c0\u67e5\u5f53\u524d\u4f4d\u7f6e\u662f\u5426\u53ef\u8fbe\\r\\n- \u6ca1\u6709\u53ca\u65f6\u66f4\u65b0\u6700\u8fdc\u53ef\u8fbe\u4f4d\u7f6e\\r\\n- \u5ffd\u7565\u63d0\u524d\u7ec8\u6b62\u6761\u4ef6\u5bfc\u81f4\u6548\u7387\u964d\u4f4e\\r\\n- \u51fd\u6570\u672b\u5c3e\u6ca1\u6709\u6dfb\u52a0 return \u8bed\u53e5\\r\\n\\r\\n## 7\ufe0f\u20e3 \u8865\u5145\u8bf4\u660e\\r\\n**\u4e3a\u4ec0\u4e48 `i > maxReach` \u5c31\u80fd\u5224\u65ad\u65e0\u6cd5\u5230\u8fbe\u6700\u540e\u4f4d\u7f6e**\\r\\n\\r\\n### \ud83c\udfaf \u6838\u5fc3\u7406\u89e3\\r\\n`maxReach` \u8868\u793a\u622a\u81f3\u76ee\u524d\u80fd\u5230\u8fbe\u7684\u6700\u8fdc\u4f4d\u7f6e\u3002\u5982\u679c `i > maxReach`\uff0c\u8bf4\u660e\uff1a\\r\\n- \u4f4d\u7f6e `i` \u4e0d\u53ef\u8fbe\\r\\n- \u65e0\u6cd5\u5229\u7528\u4f4d\u7f6e `i` \u7684\u8df3\u8dc3\u80fd\u529b\\r\\n- \u66f4\u4e0d\u53ef\u80fd\u5230\u8fbe\u6700\u540e\u4f4d\u7f6e\\r\\n\\r\\n### \ud83d\udcdd \u4e3e\u4f8b\u8bf4\u660e\\r\\n\u5047\u8bbe `nums = [2, 0, 0, 3, 4]`\uff1a\\r\\n- `i = 0`: `maxReach = 2`\uff0c\u80fd\u5230\u8fbe\u4f4d\u7f6e0,1,2\\r\\n- `i = 1,2`: \u5747 `<= maxReach`\uff0c\u53ef\u8fbe\\r\\n- `i = 3`: `3 > maxReach(2)`\uff0c**\u4e0d\u53ef\u8fbe**\\r\\n\\r\\n### \ud83d\udd04 \u5173\u952e\u539f\u7406\\r\\n\u6211\u4eec\u53ea\u80fd\u4ece\u4f4d\u7f6e0\u5f00\u59cb\u8fde\u7eed\u5411\u524d\u8df3\u8dc3\uff0c\u4e0d\u80fd\u8df3\u8fc7\u4e2d\u95f4\u4f4d\u7f6e\uff1a\\r\\n- \u8981\u5230\u8fbe\u4f4d\u7f6e `i`\uff0c\u5fc5\u987b\u5148\u5230\u8fbe `0,1,2,...,i-1` \u4e2d\u67d0\u4f4d\u7f6e\\r\\n- \u5982\u679c `maxReach < i`\uff0c\u8bf4\u660e\u524d\u9762\u6240\u6709\u4f4d\u7f6e\u90fd\u65e0\u6cd5\u89e6\u53ca\u4f4d\u7f6e `i`\\r\\n- \u56e0\u6b64\u4f4d\u7f6e `i` \u53ca\u5176\u540e\u9762\u6240\u6709\u4f4d\u7f6e\u90fd\u4e0d\u53ef\u8fbe\\r\\n</details>"},{"id":"LeetCode122","metadata":{"permalink":"/blog/LeetCode122","editUrl":"https://github.com/EurekaShadow/EurekaShadow.github.io/tree/master/blog/2025-08-02-LeetCode122.mdx","source":"@site/blog/2025-08-02-LeetCode122.mdx","title":"\u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a\u2161","description":"\u529b\u6263\u9762\u8bd5\u7ecf\u5178\u2014\u2014122\u9898","date":"2025-08-02T00:00:00.000Z","tags":[{"inline":false,"label":"\u6570\u7ec4","permalink":"/blog/tags/\u6570\u7ec4","description":"\u5173\u4e8e\u6570\u7ec4\u7684\u9898\u76ee"}],"readingTime":2.91,"hasTruncateMarker":true,"authors":[{"name":"Eureka X","title":"Mr.Nobody","url":"https://github.com/EurekaShadow","page":{"permalink":"/blog/authors/all-Eureka-X-articles"},"socials":{"github":"https://github.com/EurekaShadow"},"imageURL":"https://github.com/EurekaShadow.png","key":"eurekaX"}],"frontMatter":{"slug":"LeetCode122","title":"\u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a\u2161","authors":"eurekaX","tags":["\u6570\u7ec4"]},"unlisted":false,"lastUpdatedAt":1754147755000,"prevItem":{"title":"\u8df3\u8dc3\u6e38\u620f","permalink":"/blog/LeetCode55"},"nextItem":{"title":"\u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a","permalink":"/blog/LeetCode121"}},"content":"import { Highlight, Keyword, Light, B1, B2, B3, BH3, B3W, MyColor} from \'@site/src/components/ForMDX\';\\r\\n\\r\\n\\r\\n### <B2>[\u529b\u6263\u9762\u8bd5\u7ecf\u5178\u2014\u2014122\u9898](https://leetcode.cn/problems/best-time-to-buy-and-sell-stock-ii/description/?envType=study-plan-v2&envId=top-interview-150 \\"\u529b\u6263\\")</B2>\\r\\n\\r\\n\x3c!-- truncate --\x3e\\r\\n\\r\\n\\r\\n### \ud83d\udca1 \u53c2\u8003\u4ee3\u7801\uff1a\\r\\n\\r\\n```c\\r\\n/**\\r\\n * \u8ba1\u7b97\u80a1\u7968\u4e70\u5356\u7684\u6700\u5927\u5229\u6da6\uff08\u53ef\u591a\u6b21\u4ea4\u6613\uff09\\r\\n * \\r\\n * \u7b97\u6cd5\u601d\u8def\uff1a\u8d2a\u5fc3\u7b56\u7565\uff0c\u6536\u96c6\u6240\u6709\u4e0a\u6da8\u6bb5\u7684\u5229\u6da6\\r\\n * \u6838\u5fc3\u601d\u60f3\uff1a\u53ea\u8981\u660e\u5929\u4ef7\u683c\u6bd4\u4eca\u5929\u9ad8\uff0c\u5c31\u76f8\u5f53\u4e8e\u4eca\u5929\u4e70\u5165\u660e\u5929\u5356\u51fa\\r\\n * \\r\\n * @param prices \u80a1\u7968\u4ef7\u683c\u6570\u7ec4\uff0cprices[i]\u8868\u793a\u7b2ci\u5929\u7684\u80a1\u7968\u4ef7\u683c\\r\\n * @param pricesSize \u6570\u7ec4\u957f\u5ea6\uff0c\u8868\u793a\u80a1\u7968\u4ea4\u6613\u5929\u6570\\r\\n * @return \u80fd\u83b7\u5f97\u7684\u6700\u5927\u5229\u6da6\\r\\n * \\r\\n * \u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n)\uff0c\u53ea\u9700\u8981\u904d\u5386\u4e00\u6b21\u4ef7\u683c\u6570\u7ec4\\r\\n * \u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(1)\uff0c\u53ea\u4f7f\u7528\u5e38\u6570\u989d\u5916\u7a7a\u95f4\\r\\n * \\r\\n * \u793a\u4f8b\uff1a\\r\\n * prices = [7,1,5,3,6,4]\\r\\n * \u7b2c2\u5929\u4e70\u5165(1)\uff0c\u7b2c3\u5929\u5356\u51fa(5)\uff1a\u5229\u6da64\\r\\n * \u7b2c4\u5929\u4e70\u5165(3)\uff0c\u7b2c5\u5929\u5356\u51fa(6)\uff1a\u5229\u6da63\\r\\n * \u603b\u5229\u6da6\uff1a7\\r\\n */\\r\\nint maxProfit(int* prices, int pricesSize) {\\r\\n    int profit = 0;  // \u7d2f\u8ba1\u603b\u5229\u6da6\\r\\n    \\r\\n    // \u4ece\u7b2c2\u5929\u5f00\u59cb\u904d\u5386\uff0c\u6bd4\u8f83\u76f8\u90bb\u4e24\u5929\u7684\u4ef7\u683c\\r\\n    for (int i = 1; i < pricesSize; i++) {\\r\\n        // \u5982\u679c\u4eca\u5929\u4ef7\u683c\u9ad8\u4e8e\u6628\u5929\u4ef7\u683c\uff0c\u8bf4\u660e\u53ef\u4ee5\u83b7\u5229\\r\\n        // \u76f8\u5f53\u4e8e\u6628\u5929\u4e70\u5165\u4eca\u5929\u5356\u51fa\\r\\n        if (prices[i] > prices[i-1]) {\\r\\n            profit += prices[i] - prices[i-1];  // \u7d2f\u52a0\u5229\u6da6\\r\\n        }\\r\\n    }\\r\\n    \\r\\n    return profit;  // \u8fd4\u56de\u6700\u5927\u5229\u6da6\\r\\n}\\r\\n```\\r\\n\\r\\n### \ud83d\udcd6 \u603b\u7ed3\uff1a\\r\\n\\r\\n<details>\\r\\n<summary>\u70b9\u51fb\u5c55\u5f00\u9898\u76ee\u603b\u7ed3</summary>\\r\\n# \ud83e\udd14 \u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a\u2161\\r\\n\\r\\n---\\r\\n\\r\\n## 1\ufe0f\u20e3 \u9898\u76ee\u6838\u5fc3\u4fe1\u606f\\r\\n\\r\\n\ud83c\udfaf **\u529f\u80fd\u63cf\u8ff0**\uff1a\u7ed9\u5b9a\u80a1\u7968\u6bcf\u5929\u7684\u4ef7\u683c\uff0c\u8ba1\u7b97\u5728\u53ef\u4ee5\u591a\u6b21\u4e70\u5356\u7684\u6761\u4ef6\u4e0b\u80fd\u83b7\u5f97\u7684\u6700\u5927\u5229\u6da6\uff0c\u4efb\u4f55\u65f6\u5019\u6700\u591a\u53ea\u80fd\u6301\u6709\u4e00\u80a1\u80a1\u7968\\r\\n\\r\\n\ud83d\udce5 **\u8f93\u5165\u8f93\u51fa**\uff1a\\r\\n- **\u8f93\u5165**\uff1aint* prices\uff08\u80a1\u7968\u4ef7\u683c\u6570\u7ec4\uff09\uff0cint pricesSize\uff08\u6570\u7ec4\u957f\u5ea6\uff09\\r\\n- **\u8f93\u51fa**\uff1aint\uff08\u80fd\u83b7\u5f97\u7684\u6700\u5927\u5229\u6da6\uff09\\r\\n\\r\\n---\\r\\n\\r\\n## 2\ufe0f\u20e3 \u5b9e\u73b0\u539f\u7406\\r\\n\\r\\n\ud83d\udca1 **\u6838\u5fc3\u601d\u8def**\uff1a\u8d2a\u5fc3\u7b97\u6cd5\uff0c\u6536\u96c6\u6240\u6709\u4e0a\u6da8\u6bb5\u7684\u5229\u6da6\u3002\u53ea\u8981\u76f8\u90bb\u4e24\u5929\u4ef7\u683c\u4e0a\u6da8\u5c31\u8fdb\u884c\u4ea4\u6613\uff0c\u76f8\u5f53\u4e8e\u4eca\u5929\u4e70\u5165\u660e\u5929\u5356\u51fa\\r\\n\\r\\n\ud83d\udccb **\u5b9e\u73b0\u6b65\u9aa4**\uff1a\\r\\n1. \u521d\u59cb\u5316\u5229\u6da6\u4e3a0\\r\\n2. \u4ece\u7b2c2\u5929\u5f00\u59cb\u904d\u5386\u4ef7\u683c\u6570\u7ec4\\r\\n3. \u6bd4\u8f83\u5f53\u5929\u4e0e\u524d\u4e00\u5929\u7684\u4ef7\u683c\\r\\n4. \u5982\u679c\u5f53\u5929\u4ef7\u683c\u66f4\u9ad8\uff0c\u5219\u5c06\u5dee\u503c\u52a0\u5165\u603b\u5229\u6da6\\r\\n5. \u8fd4\u56de\u7d2f\u8ba1\u5229\u6da6\\r\\n\\r\\n---\\r\\n\\r\\n## 3\ufe0f\u20e3 \u5173\u952e\u70b9\u89e3\u6790\\r\\n\\r\\n\u539f\u59cb\u601d\u8def\u662f\u5bfb\u627e\u5c40\u90e8\u6700\u4f18\u7684\u4e70\u5356\u70b9\uff0c\u8003\u8651\u5404\u79cd\u590d\u6742\u7684\u4e70\u5356\u7b56\u7565\u7ec4\u5408\uff0c\u4f46\u6700\u4f18\u89e3\u91c7\u7528\u8d2a\u5fc3\u7b56\u7565\uff0c\u5c06\u95ee\u9898\u7b80\u5316\u4e3a\u6536\u96c6\u6240\u6709\u4e0a\u6da8\u5229\u6da6\u3002\\r\\n\\r\\n### \ud83c\udfaf \u4ee3\u7801\u6280\u5de7\\r\\n- \u5229\u7528\u6570\u5b66\u4e2d\u7684\u671b\u8fdc\u955c\u6c42\u548c\u539f\u7406\uff0c\u5c06\u591a\u6b21\u4ea4\u6613\u7b49\u4ef7\u4e8e\u6700\u4f18\u7684\u4e00\u6b21\u6027\u4ea4\u6613\\r\\n- \u901a\u8fc7\u6bd4\u8f83\u76f8\u90bb\u5143\u7d20\u5dee\u503c\u6765\u6a21\u62df\u4ea4\u6613\u51b3\u7b56\\r\\n- \u907f\u514d\u5b9e\u9645\u6a21\u62df\u4e70\u5356\u8fc7\u7a0b\uff0c\u76f4\u63a5\u8ba1\u7b97\u7406\u8bba\u6700\u5927\u6536\u76ca\\r\\n\\r\\n## 4\ufe0f\u20e3 \u4f7f\u7528\u573a\u666f\\r\\n\\r\\n### \u2705 \u9002\u7528\u60c5\u51b5\uff1a\\r\\n- \u9700\u8981\u8ba1\u7b97\u53ef\u591a\u6b21\u4ea4\u6613\u60c5\u51b5\u4e0b\u7684\u6700\u5927\u7406\u8bba\u6536\u76ca\\r\\n- \u80a1\u7968\u4ef7\u683c\u8d8b\u52bf\u5206\u6790\\r\\n- \u7b97\u6cd5\u6559\u5b66\u4e2d\u7684\u8d2a\u5fc3\u7b56\u7565\u793a\u4f8b\\r\\n\\r\\n### \u26a0\ufe0f \u524d\u63d0\u6761\u4ef6\uff1a\\r\\n- \u53ef\u4ee5\u540c\u4e00\u5929\u4e70\u5165\u5e76\u5356\u51fa\\r\\n- \u6bcf\u6b21\u4ea4\u6613\u53ea\u6301\u6709\u4e00\u80a1\u80a1\u7968\\r\\n- \u4e0d\u8003\u8651\u4ea4\u6613\u6210\u672c\u548c\u7a0e\u6536\\r\\n\\r\\n## 5\ufe0f\u20e3 \u590d\u6742\u5ea6\u5206\u6790\\r\\n\\r\\n- \u23f1\ufe0f \u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n)\uff0c\u53ea\u9700\u8981\u904d\u5386\u4e00\u6b21\u4ef7\u683c\u6570\u7ec4\\r\\n\\r\\n- \ud83d\udcbe \u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(1)\uff0c\u53ea\u4f7f\u7528\u5e38\u6570\u989d\u5916\u7a7a\u95f4\\r\\n\\r\\n## 6\ufe0f\u20e3 \u6ce8\u610f\u4e8b\u9879\\r\\n\\r\\n### \ud83d\udea9 \u8fb9\u754c\u60c5\u51b5\uff1a\\r\\n- \u7a7a\u6570\u7ec4\u6216\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\uff1a\u8fd4\u56de0\\r\\n- \u4ef7\u683c\u6301\u7eed\u4e0b\u8dcc\uff1a\u8fd4\u56de0\\r\\n- \u4ef7\u683c\u6301\u7eed\u4e0a\u6da8\uff1a\u8fd4\u56de\u9996\u5c3e\u5dee\u503c\\r\\n\\r\\n### \ud83d\udca5 \u6613\u9519\u70b9\uff1a\\r\\n- \u8bef\u4ee5\u4e3a\u9700\u8981\u6a21\u62df\u771f\u5b9e\u7684\u4e70\u5356\u8fc7\u7a0b\\r\\n- \u6df7\u6dc6\u4e0e\u53ea\u80fd\u4e70\u5356\u4e00\u6b21\u7684\u80a1\u7968\u95ee\u9898\\r\\n- \u5ffd\u7565\u7b97\u6cd5\u57fa\u4e8e\\"\u9884\u77e5\u672a\u6765\\"\u7684\u5047\u8bbe\u6761\u4ef6\\r\\n</details>"},{"id":"LeetCode121","metadata":{"permalink":"/blog/LeetCode121","editUrl":"https://github.com/EurekaShadow/EurekaShadow.github.io/tree/master/blog/2025-08-01-LeetCode121.mdx","source":"@site/blog/2025-08-01-LeetCode121.mdx","title":"\u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a","description":"\u529b\u6263\u9762\u8bd5\u7ecf\u5178\u2014\u2014121\u9898","date":"2025-08-01T00:00:00.000Z","tags":[{"inline":false,"label":"\u6570\u7ec4","permalink":"/blog/tags/\u6570\u7ec4","description":"\u5173\u4e8e\u6570\u7ec4\u7684\u9898\u76ee"}],"readingTime":3.45,"hasTruncateMarker":true,"authors":[{"name":"Eureka X","title":"Mr.Nobody","url":"https://github.com/EurekaShadow","page":{"permalink":"/blog/authors/all-Eureka-X-articles"},"socials":{"github":"https://github.com/EurekaShadow"},"imageURL":"https://github.com/EurekaShadow.png","key":"eurekaX"}],"frontMatter":{"slug":"LeetCode121","title":"\u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a","authors":"eurekaX","tags":["\u6570\u7ec4"]},"unlisted":false,"lastUpdatedAt":1754147755000,"prevItem":{"title":"\u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a\u2161","permalink":"/blog/LeetCode122"},"nextItem":{"title":"\u8f6e\u8f6c\u6570\u7ec4","permalink":"/blog/LeetCode189"}},"content":"import { Highlight, Keyword, Light, B1, B2, B3, BH3, B3W, MyColor} from \'@site/src/components/ForMDX\';\\r\\n\\r\\n\\r\\n### <B2>[\u529b\u6263\u9762\u8bd5\u7ecf\u5178\u2014\u2014121\u9898](https://leetcode.cn/problems/best-time-to-buy-and-sell-stock/description/?envType=study-plan-v2&envId=top-interview-150 \\"\u529b\u6263\\")</B2>\\r\\n\\r\\n\x3c!-- truncate --\x3e\\r\\n\\r\\n\\r\\n### \ud83d\udca1 \u53c2\u8003\u4ee3\u7801\uff1a\\r\\n\\r\\n```c\\r\\n/**\\r\\n * \u8ba1\u7b97\u80a1\u7968\u4ea4\u6613\u7684\u6700\u5927\u5229\u6da6\\r\\n * \\r\\n * \u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4\uff0c\u5b83\u7684\u7b2ci\u4e2a\u5143\u7d20\u662f\u4e00\u652f\u7ed9\u5b9a\u80a1\u7968\u7b2ci\u5929\u7684\u4ef7\u683c\u3002\\r\\n * \u53ea\u80fd\u9009\u62e9\u67d0\u4e00\u5929\u4e70\u5165\u80a1\u7968\uff0c\u5e76\u9009\u62e9\u5728\u672a\u6765\u7684\u67d0\u4e00\u4e2a\u4e0d\u540c\u7684\u65e5\u5b50\u5356\u51fa\u8be5\u80a1\u7968\u3002\\r\\n * \u8bbe\u8ba1\u4e00\u4e2a\u7b97\u6cd5\u6765\u8ba1\u7b97\u6240\u80fd\u83b7\u53d6\u7684\u6700\u5927\u5229\u6da6\u3002\\r\\n * \\r\\n * @param prices \u6574\u6570\u6570\u7ec4\uff0c\u8868\u793a\u80a1\u7968\u6bcf\u5929\u7684\u4ef7\u683c\\r\\n * @param pricesSize \u6570\u7ec4prices\u7684\u957f\u5ea6\\r\\n * @return \u8fd4\u56de\u80fd\u83b7\u53d6\u7684\u6700\u5927\u5229\u6da6\uff0c\u5982\u679c\u4e0d\u80fd\u83b7\u53d6\u4efb\u4f55\u5229\u6da6\u5219\u8fd4\u56de0\\r\\n * \\r\\n * \u793a\u4f8b:\\r\\n * \u8f93\u5165: [7,1,5,3,6,4]\\r\\n * \u8f93\u51fa: 5\\r\\n * \u89e3\u91ca: \u5728\u7b2c2\u5929\u4e70\u5165(\u4ef7\u683c=1)\uff0c\u5728\u7b2c5\u5929\u5356\u51fa(\u4ef7\u683c=6)\uff0c\u5229\u6da6=6-1=5\\r\\n * \\r\\n * \u8f93\u5165: [7,6,4,3,1]\\r\\n * \u8f93\u51fa: 0\\r\\n * \u89e3\u91ca: \u4ef7\u683c\u6301\u7eed\u4e0b\u8dcc\uff0c\u65e0\u6cd5\u83b7\u5f97\u5229\u6da6\\r\\n * \\r\\n * \u65f6\u95f4\u590d\u6742\u5ea6: O(n)\\r\\n * \u7a7a\u95f4\u590d\u6742\u5ea6: O(1)\\r\\n */\\r\\nint maxProfit(int* prices, int pricesSize) {\\r\\n    // \u5982\u679c\u5929\u6570\u5c11\u4e8e2\u5929\uff0c\u65e0\u6cd5\u5b8c\u6210\u4ea4\u6613\uff0c\u8fd4\u56de0\\r\\n    if (pricesSize <= 1) {\\r\\n        return 0;\\r\\n    }\\r\\n    \\r\\n    // \u521d\u59cb\u5316\u6700\u4f4e\u4ef7\u683c\u4e3a\u7b2c\u4e00\u5929\u7684\u4ef7\u683c\\r\\n    int minPrice = prices[0];\\r\\n    // \u521d\u59cb\u5316\u6700\u5927\u5229\u6da6\u4e3a0\\r\\n    int maxProfit = 0;\\r\\n    \\r\\n    // \u4ece\u7b2c\u4e8c\u5929\u5f00\u59cb\u904d\u5386\u6240\u6709\u4ef7\u683c\\r\\n    for (int i = 1; i < pricesSize; i++) {\\r\\n        // \u5982\u679c\u5f53\u524d\u4ef7\u683c\u6bd4\u8bb0\u5f55\u7684\u6700\u4f4e\u4ef7\u683c\u66f4\u4f4e\uff0c\u5219\u66f4\u65b0\u6700\u4f4e\u4ef7\u683c\\r\\n        if (prices[i] < minPrice) {\\r\\n            minPrice = prices[i];\\r\\n        } \\r\\n        // \u5982\u679c\u5f53\u524d\u4ef7\u683c\u4e0e\u6700\u4f4e\u4ef7\u683c\u7684\u5dee\u503c\u5927\u4e8e\u8bb0\u5f55\u7684\u6700\u5927\u5229\u6da6\uff0c\u5219\u66f4\u65b0\u6700\u5927\u5229\u6da6\\r\\n        else if (prices[i] - minPrice > maxProfit) {\\r\\n            maxProfit = prices[i] - minPrice;\\r\\n        }\\r\\n    }\\r\\n    \\r\\n    return maxProfit;\\r\\n}\\r\\n```\\r\\n\\r\\n### \ud83d\udcd6 \u603b\u7ed3\uff1a\\r\\n\\r\\n<details>\\r\\n<summary>\u70b9\u51fb\u5c55\u5f00\u9898\u76ee\u603b\u7ed3</summary>\\r\\n# \ud83e\udd14 \u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a\\r\\n\\r\\n---\\r\\n\\r\\n## 1\ufe0f\u20e3 \u9898\u76ee\u6838\u5fc3\u4fe1\u606f\\r\\n\\r\\n\ud83c\udfaf **\u529f\u80fd\u63cf\u8ff0**\uff1a\u7ed9\u5b9a\u80a1\u7968\u4ef7\u683c\u6570\u7ec4\uff0c\u627e\u51fa\u4e70\u5165\u548c\u5356\u51fa\u80a1\u7968\u80fd\u83b7\u5f97\u7684\u6700\u5927\u5229\u6da6\uff0c\u53ea\u80fd\u8fdb\u884c\u4e00\u6b21\u4ea4\u6613\u4e14\u5356\u51fa\u65e5\u5fc5\u987b\u5728\u4e70\u5165\u65e5\u4e4b\u540e\\r\\n\\r\\n\ud83d\udce5 **\u8f93\u5165\u8f93\u51fa**\uff1a\\r\\n- **\u8f93\u5165**\uff1aint* prices\uff08\u80a1\u7968\u4ef7\u683c\u6570\u7ec4\uff09, int pricesSize\uff08\u6570\u7ec4\u957f\u5ea6\uff09\\r\\n- **\u8f93\u51fa**\uff1aint\uff08\u6700\u5927\u5229\u6da6\u503c\uff0c\u65e0\u6cd5\u83b7\u5229\u65f6\u8fd4\u56de0\uff09\\r\\n\\r\\n---\\r\\n\\r\\n## 2\ufe0f\u20e3 \u5b9e\u73b0\u539f\u7406\\r\\n\\r\\n\ud83d\udca1 **\u6838\u5fc3\u601d\u8def**\uff1a\u4e00\u6b21\u904d\u5386\u52a8\u6001\u7ef4\u62a4\u6700\u4f4e\u4e70\u5165\u4ef7\u683c\u548c\u6700\u5927\u5229\u6da6\\r\\n\\r\\n\ud83d\udccb **\u5b9e\u73b0\u6b65\u9aa4**\uff1a\\r\\n1. \u521d\u59cb\u5316\u6700\u4f4e\u4ef7\u683c\u4e3a\u7b2c\u4e00\u5929\u4ef7\u683c\uff0c\u6700\u5927\u5229\u6da6\u4e3a0\\r\\n2. \u4ece\u7b2c\u4e8c\u5929\u5f00\u59cb\u904d\u5386\u4ef7\u683c\u6570\u7ec4\\r\\n3. \u82e5\u5f53\u524d\u4ef7\u683c\u4f4e\u4e8e\u6700\u4f4e\u4ef7\u683c\uff0c\u5219\u66f4\u65b0\u6700\u4f4e\u4ef7\u683c\\r\\n4. \u5426\u5219\u8ba1\u7b97\u5f53\u524d\u5356\u51fa\u53ef\u5f97\u5229\u6da6\uff0c\u82e5\u5927\u4e8e\u6700\u5927\u5229\u6da6\u5219\u66f4\u65b0\u6700\u5927\u5229\u6da6\\r\\n5. \u904d\u5386\u7ed3\u675f\u8fd4\u56de\u6700\u5927\u5229\u6da6\\r\\n\\r\\n---\\r\\n\\r\\n## 3\ufe0f\u20e3 \u5173\u952e\u70b9\u89e3\u6790\\r\\n\\r\\n\u539f\u59cb\u601d\u8def\u662f\u4f7f\u7528\u5feb\u6162\u6307\u9488\u679a\u4e3e\u6240\u6709\u4e70\u5165\u5356\u51fa\u7ec4\u5408\uff0c\u901a\u8fc7\u4e24\u5c42\u5faa\u73af\u8ba1\u7b97\u6bcf\u79cd\u53ef\u80fd\u7684\u5229\u6da6\u5e76\u53d6\u6700\u5927\u503c\u3002\u4f46\u8be5\u65b9\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n\xb2)\u3002\u6700\u4f18\u89e3\u901a\u8fc7\u8bb0\u5f55\u5230\u76ee\u524d\u4e3a\u6b62\u7684\u6700\u4f4e\u4ef7\u683c\u548c\u6700\u5927\u5229\u6da6\uff0c\u53ea\u9700\u4e00\u6b21\u904d\u5386\u5c31\u80fd\u5f97\u5230\u7ed3\u679c\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4f18\u5316\u4e3aO(n)\u3002\\r\\n\\r\\n### \ud83c\udfaf \u4ee3\u7801\u6280\u5de7\\r\\n- \u4f7f\u7528else if\u907f\u514d\u4e0d\u5fc5\u8981\u7684\u5229\u6da6\u8ba1\u7b97\\r\\n- \u521d\u59cb\u5316\u6700\u4f4e\u4ef7\u683c\u4e3a\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c\u4ece\u7b2c\u4e8c\u4e2a\u5143\u7d20\u5f00\u59cb\u904d\u5386\\r\\n- \u5229\u7528\u8d2a\u5fc3\u601d\u60f3\uff0c\u59cb\u7ec8\u7ef4\u62a4\u5230\u76ee\u524d\u4e3a\u6b62\u7684\u6700\u4f18\u89e3\\r\\n\\r\\n## 4\ufe0f\u20e3 \u4f7f\u7528\u573a\u666f\\r\\n\\r\\n### \u2705 \u9002\u7528\u60c5\u51b5\uff1a\\r\\n- \u80a1\u7968\u4ea4\u6613\u5229\u6da6\u6700\u5927\u5316\u95ee\u9898\\r\\n- \u9700\u8981\u627e\u51fa\u6570\u7ec4\u4e2d\u4e24\u4e2a\u5143\u7d20\u7684\u6700\u5927\u6b63\u5411\u5dee\u503c\\r\\n- \u5728\u7ebf\u7b97\u6cd5\u9700\u8981\u5b9e\u65f6\u66f4\u65b0\u6700\u4f18\u89e3\\r\\n\\r\\n### \u26a0\ufe0f \u524d\u63d0\u6761\u4ef6\uff1a\\r\\n- \u5356\u51fa\u65e5\u5fc5\u987b\u5728\u4e70\u5165\u65e5\u4e4b\u540e\\r\\n- \u53ea\u80fd\u8fdb\u884c\u4e00\u6b21\u4ea4\u6613\\r\\n- \u6570\u7ec4\u5143\u7d20\u4e3a\u975e\u8d1f\u6574\u6570\\r\\n\\r\\n## 5\ufe0f\u20e3 \u590d\u6742\u5ea6\u5206\u6790\\r\\n\\r\\n- \u23f1\ufe0f \u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n)\uff0c\u53ea\u9700\u904d\u5386\u6570\u7ec4\u4e00\u6b21\\r\\n\\r\\n- \ud83d\udcbe \u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(1)\uff0c\u53ea\u4f7f\u7528\u5e38\u6570\u4e2a\u989d\u5916\u53d8\u91cf\\r\\n\\r\\n## 6\ufe0f\u20e3 \u6ce8\u610f\u4e8b\u9879\\r\\n\\r\\n### \ud83d\udea9 \u8fb9\u754c\u60c5\u51b5\uff1a\\r\\n- \u6570\u7ec4\u957f\u5ea6\u4e3a0\u62161\u65f6\uff0c\u65e0\u6cd5\u5b8c\u6210\u4ea4\u6613\\r\\n- \u4ef7\u683c\u6301\u7eed\u4e0b\u8dcc\u65f6\uff0c\u5229\u6da6\u4e3a0\\r\\n- \u6570\u7ec4\u4e3a\u7a7a\u6307\u9488\u7684\u60c5\u51b5\\r\\n\\r\\n### \ud83d\udca5 \u6613\u9519\u70b9\uff1a\\r\\n- \u5fd8\u8bb0\u5904\u7406\u6570\u7ec4\u957f\u5ea6\u5c0f\u4e8e2\u7684\u8fb9\u754c\u60c5\u51b5\\r\\n- \u9519\u8bef\u5730\u5141\u8bb8\u5728\u4e70\u5165\u524d\u5356\u51fa\\r\\n- \u6ca1\u6709\u6b63\u786e\u521d\u59cb\u5316\u6700\u5c0f\u4ef7\u683c\u548c\u6700\u5927\u5229\u6da6\\r\\n</details>"},{"id":"LeetCode189","metadata":{"permalink":"/blog/LeetCode189","editUrl":"https://github.com/EurekaShadow/EurekaShadow.github.io/tree/master/blog/2025-08-01-LeetCode189.mdx","source":"@site/blog/2025-08-01-LeetCode189.mdx","title":"\u8f6e\u8f6c\u6570\u7ec4","description":"\u529b\u6263\u9762\u8bd5\u7ecf\u5178\u2014\u2014189\u9898","date":"2025-08-01T00:00:00.000Z","tags":[{"inline":false,"label":"\u6570\u7ec4","permalink":"/blog/tags/\u6570\u7ec4","description":"\u5173\u4e8e\u6570\u7ec4\u7684\u9898\u76ee"}],"readingTime":6.9,"hasTruncateMarker":true,"authors":[{"name":"Eureka X","title":"Mr.Nobody","url":"https://github.com/EurekaShadow","page":{"permalink":"/blog/authors/all-Eureka-X-articles"},"socials":{"github":"https://github.com/EurekaShadow"},"imageURL":"https://github.com/EurekaShadow.png","key":"eurekaX"}],"frontMatter":{"slug":"LeetCode189","title":"\u8f6e\u8f6c\u6570\u7ec4","authors":"eurekaX","tags":["\u6570\u7ec4"]},"unlisted":false,"lastUpdatedAt":1754027993000,"prevItem":{"title":"\u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a","permalink":"/blog/LeetCode121"},"nextItem":{"title":"\u591a\u6570\u5143\u7d20","permalink":"/blog/LeetCode169"}},"content":"import { Highlight, Keyword, Light, B1, B2, B3, BH3, B3W, MyColor} from \'@site/src/components/ForMDX\';\\r\\n\\r\\n\\r\\n### <B2>[\u529b\u6263\u9762\u8bd5\u7ecf\u5178\u2014\u2014189\u9898](https://leetcode.cn/problems/rotate-array/description/?envType=study-plan-v2&envId=top-interview-150 \\"\u529b\u6263\\")</B2>\\r\\n\\r\\n\x3c!-- truncate --\x3e\\r\\n\\r\\n\\r\\n### \ud83d\udca1 \u53c2\u8003\u4ee3\u7801\uff1a\\r\\n\\r\\n```c\\r\\n/**\\r\\n * @brief \u53cd\u8f6c\u6570\u7ec4\u4e2d\u6307\u5b9a\u8303\u56f4\u7684\u5143\u7d20\\r\\n * \\r\\n * @param nums \u6307\u5411\u6574\u578b\u6570\u7ec4\u7684\u6307\u9488\\r\\n * @param start \u53cd\u8f6c\u8303\u56f4\u7684\u8d77\u59cb\u7d22\u5f15\uff08\u5305\u542b\uff09\\r\\n * @param end \u53cd\u8f6c\u8303\u56f4\u7684\u7ed3\u675f\u7d22\u5f15\uff08\u5305\u542b\uff09\\r\\n * \\r\\n * @details \u4f7f\u7528\u53cc\u6307\u9488\u6cd5\uff0c\u4ece\u4e24\u7aef\u5411\u4e2d\u95f4\u4ea4\u6362\u5143\u7d20\uff0c\u5b9e\u73b0\u6570\u7ec4\u90e8\u5206\u53cd\u8f6c\\r\\n *          \u65f6\u95f4\u590d\u6742\u5ea6: O(n)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6: O(1)\\r\\n */\\r\\nvoid reverse(int* nums, int start, int end) {\\r\\n    while (start < end) {\\r\\n        int temp = nums[start];\\r\\n        nums[start] = nums[end];\\r\\n        nums[end] = temp;\\r\\n        start++;\\r\\n        end--;\\r\\n    }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @brief \u5c06\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u5411\u53f3\u8f6e\u8f6c k \u4e2a\u4f4d\u7f6e\\r\\n * \\r\\n * @param nums \u6307\u5411\u6574\u578b\u6570\u7ec4\u7684\u6307\u9488\\r\\n * @param numsSize \u6570\u7ec4\u7684\u957f\u5ea6\\r\\n * @param k \u8f6e\u8f6c\u7684\u6b65\u6570\uff08\u975e\u8d1f\u6570\uff09\\r\\n * \\r\\n * @details \u4f7f\u7528\u4e09\u6b65\u53cd\u8f6c\u6cd5\u5b9e\u73b0\u6570\u7ec4\u8f6e\u8f6c\uff1a\\r\\n *          1. \u53cd\u8f6c\u6574\u4e2a\u6570\u7ec4\\r\\n *          2. \u53cd\u8f6c\u524d k \u4e2a\u5143\u7d20\\r\\n *          3. \u53cd\u8f6c\u540e n-k \u4e2a\u5143\u7d20\\r\\n *          \\r\\n *          \u4f8b\u5982: nums = [1,2,3,4,5,6,7], k = 3\\r\\n *          step1: [7,6,5,4,3,2,1] \u53cd\u8f6c\u6574\u4e2a\u6570\u7ec4\\r\\n *          step2: [5,6,7,4,3,2,1] \u53cd\u8f6c\u524d3\u4e2a\u5143\u7d20\\r\\n *          step3: [5,6,7,1,2,3,4] \u53cd\u8f6c\u540e4\u4e2a\u5143\u7d20\\r\\n *          \\r\\n *          \u65f6\u95f4\u590d\u6742\u5ea6: O(n)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6: O(1)\\r\\n */\\r\\nvoid rotate(int* nums, int numsSize, int k) {\\r\\n    // \u5904\u7406k\u5927\u4e8e\u6570\u7ec4\u957f\u5ea6\u7684\u60c5\u51b5\uff0c\u907f\u514d\u4e0d\u5fc5\u8981\u7684\u8f6e\u8f6c\\r\\n    k = k % numsSize;\\r\\n    \\r\\n    // \u4e09\u6b65\u53cd\u8f6c\u6cd5\\r\\n    reverse(nums, 0, numsSize - 1);      // \u53cd\u8f6c\u6574\u4e2a\u6570\u7ec4\\r\\n    reverse(nums, 0, k - 1);            // \u53cd\u8f6c\u524dk\u4e2a\u5143\u7d20\\r\\n    reverse(nums, k, numsSize - 1);     // \u53cd\u8f6c\u540en-k\u4e2a\u5143\u7d20\\r\\n}\\r\\n```\\r\\n\\r\\n### \ud83d\udcd6 \u603b\u7ed3\uff1a\\r\\n\\r\\n<details>\\r\\n<summary>\u70b9\u51fb\u5c55\u5f00\u9898\u76ee\u603b\u7ed3</summary>\\r\\n# \ud83e\udd14 \u8f6e\u8f6c\u6570\u7ec4\\r\\n\\r\\n---\\r\\n\\r\\n## 1\ufe0f\u20e3 \u9898\u76ee\u6838\u5fc3\u4fe1\u606f\\r\\n\\r\\n\ud83c\udfaf **\u529f\u80fd\u63cf\u8ff0**\uff1a\u5c06\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u5411\u53f3\u8f6e\u8f6c k \u4e2a\u4f4d\u7f6e\uff0c\u5b9e\u73b0\u5faa\u73af\u79fb\u4f4d\\r\\n\\r\\n\ud83d\udce5 **\u8f93\u5165\u8f93\u51fa**\uff1a\\r\\n- **\u8f93\u5165**\uff1a\\r\\n  - `nums`: \u6307\u5411\u6574\u578b\u6570\u7ec4\u7684\u6307\u9488\\r\\n  - `numsSize`: \u6570\u7ec4\u7684\u957f\u5ea6\\r\\n  - `k`: \u8f6e\u8f6c\u7684\u6b65\u6570\uff08\u975e\u8d1f\u6570\uff09\\r\\n- **\u8f93\u51fa**\uff1a\u65e0\u8fd4\u56de\u503c\uff0c\u76f4\u63a5\u5728\u539f\u6570\u7ec4\u4e0a\u8fdb\u884c\u4fee\u6539\\r\\n\\r\\n---\\r\\n\\r\\n## 2\ufe0f\u20e3 \u5b9e\u73b0\u539f\u7406\\r\\n\\r\\n\ud83d\udca1 **\u6838\u5fc3\u601d\u8def**\uff1a\u4f7f\u7528\u4e09\u6b65\u53cd\u8f6c\u6cd5\uff08\u4e09\u6b21\u6570\u7ec4\u53cd\u8f6c\uff09\u5b9e\u73b0\u6570\u7ec4\u8f6e\u8f6c\\r\\n\\r\\n\ud83d\udccb **\u5b9e\u73b0\u6b65\u9aa4**\uff1a\\r\\n1. \u9996\u5148\u5bf9 k \u53d6\u6a21\uff0c\u5904\u7406 k \u5927\u4e8e\u6570\u7ec4\u957f\u5ea6\u7684\u60c5\u51b5\\r\\n2. \u53cd\u8f6c\u6574\u4e2a\u6570\u7ec4\\r\\n3. \u53cd\u8f6c\u524d k \u4e2a\u5143\u7d20\\r\\n4. \u53cd\u8f6c\u540e n-k \u4e2a\u5143\u7d20\\r\\n\\r\\n---\\r\\n\\r\\n## 3\ufe0f\u20e3 \u5173\u952e\u70b9\u89e3\u6790\\r\\n\\r\\n\u539f\u59cb\u601d\u8def\u662f\u6a21\u62df\u8f6e\u8f6c\u8fc7\u7a0b\uff0c\u6bcf\u6b21\u5c06\u6570\u7ec4\u6574\u4f53\u53f3\u79fb\u4e00\u4f4d\uff0c\u91cd\u590dk\u6b21\u3002\u8fd9\u79cd\u65b9\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(n\xd7k)\uff0c\u5f53k\u5f88\u5927\u65f6\u6548\u7387\u8f83\u4f4e\u3002\u800c\u6700\u4f18\u89e3\u4f7f\u7528\u4e09\u6b65\u53cd\u8f6c\u6cd5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4ec5\u4e3aO(n)\u3002\\r\\n\\r\\n### \ud83c\udfaf \u4ee3\u7801\u6280\u5de7\\r\\n- \u4f7f\u7528\u53d6\u6a21\u8fd0\u7b97 `k = k % numsSize` \u4f18\u5316\u8f6e\u8f6c\u6b21\u6570\\r\\n- \u91c7\u7528\u53cc\u6307\u9488\u6cd5\u5b9e\u73b0\u6570\u7ec4\u53cd\u8f6c\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(1)\\r\\n- \u4e09\u6b65\u53cd\u8f6c\u6cd5\u7684\u5de7\u5999\u5e94\u7528\uff0c\u5c06\u8f6e\u8f6c\u95ee\u9898\u8f6c\u5316\u4e3a\u53cd\u8f6c\u95ee\u9898\\r\\n\\r\\n## 4\ufe0f\u20e3 \u4f7f\u7528\u573a\u666f\\r\\n\\r\\n### \u2705 \u9002\u7528\u60c5\u51b5\uff1a\\r\\n- \u9700\u8981\u5b9e\u73b0\u6570\u7ec4\u5faa\u73af\u79fb\u4f4d\u64cd\u4f5c\\r\\n- \u5bf9\u7a7a\u95f4\u590d\u6742\u5ea6\u6709\u4e25\u683c\u8981\u6c42\u7684\u573a\u666f\\r\\n- \u9700\u8981\u539f\u5730\u4fee\u6539\u6570\u7ec4\u7684\u573a\u5408\\r\\n\\r\\n### \u26a0\ufe0f \u524d\u63d0\u6761\u4ef6\uff1a\\r\\n- \u6570\u7ec4\u4e0d\u80fd\u4e3a\u7a7a\u6307\u9488\\r\\n- \u6570\u7ec4\u957f\u5ea6\u5fc5\u987b\u5927\u4e8e0\\r\\n- k\u503c\u5fc5\u987b\u4e3a\u975e\u8d1f\u6570\\r\\n\\r\\n## 5\ufe0f\u20e3 \u590d\u6742\u5ea6\u5206\u6790\\r\\n\\r\\n- \u23f1\ufe0f \u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n)\uff0c\u5176\u4e2dn\u4e3a\u6570\u7ec4\u957f\u5ea6\uff0c\u9700\u8981\u904d\u5386\u6570\u7ec4\u5e38\u6570\u6b21\\r\\n\\r\\n- \ud83d\udcbe \u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(1)\uff0c\u53ea\u4f7f\u7528\u4e86\u5e38\u6570\u7ea7\u522b\u7684\u989d\u5916\u7a7a\u95f4\\r\\n\\r\\n## 6\ufe0f\u20e3 \u6ce8\u610f\u4e8b\u9879\\r\\n\\r\\n### \ud83d\udea9 \u8fb9\u754c\u60c5\u51b5\uff1a\\r\\n- k\u7b49\u4e8e0\u6216\u6570\u7ec4\u957f\u5ea6\u7684\u500d\u6570\u65f6\uff0c\u6570\u7ec4\u4fdd\u6301\u4e0d\u53d8\\r\\n- \u6570\u7ec4\u957f\u5ea6\u4e3a1\u65f6\uff0c\u65e0\u8bbak\u4e3a\u4f55\u503c\u6570\u7ec4\u90fd\u4fdd\u6301\u4e0d\u53d8\\r\\n- k\u5927\u4e8e\u6570\u7ec4\u957f\u5ea6\u65f6\uff0c\u9700\u8981\u53d6\u6a21\u8fd0\u7b97\u907f\u514d\u591a\u4f59\u64cd\u4f5c\\r\\n\\r\\n### \ud83d\udca5 \u6613\u9519\u70b9\uff1a\\r\\n- \u5fd8\u8bb0\u5bf9k\u53d6\u6a21\u5bfc\u81f4\u4e0d\u5fc5\u8981\u7684\u8ba1\u7b97\\r\\n- \u53cd\u8f6c\u65f6\u8fb9\u754c\u6761\u4ef6\u5904\u7406\u9519\u8bef\\r\\n- \u6df7\u6dc6\u5de6\u8f6c\u548c\u53f3\u8f6c\u7684\u65b9\u5411\\r\\n\\r\\n## 7\ufe0f\u20e3 \u8865\u5145\u8bf4\u660e\\r\\n### \u4e3a\u4ec0\u4e48\u9700\u8981 k = k % numsSize \u64cd\u4f5c\uff1f\ud83e\udd14\\r\\n\\r\\n**\u95ee\u9898\u80cc\u666f**\\r\\n\\r\\n\u5f53 `k` \u5927\u4e8e\u6570\u7ec4\u957f\u5ea6\u65f6\uff0c\u5b9e\u9645\u4e0a\u4f1a\u53d1\u751f\u91cd\u590d\u7684\u8f6e\u8f6c\u3002\u8fd9\u4e2a\u64cd\u4f5c\u662f\u4e3a\u4e86\u907f\u514d\u4e0d\u5fc5\u8981\u7684\u91cd\u590d\u8ba1\u7b97\u3002\\r\\n\\r\\n**\u4e3e\u4f8b\u8bf4\u660e**\\r\\n\\r\\n\u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u957f\u5ea6\u4e3a 7 \u7684\u6570\u7ec4\uff1a`[1,2,3,4,5,6,7]`\\r\\n\\r\\n| k \u503c | \u5b9e\u9645\u6548\u679c | \u8bf4\u660e |\\r\\n|------|----------|------|\\r\\n| k=3 | `[5,6,7,1,2,3,4]` | \u8f6e\u8f6c3\u6b65 |\\r\\n| k=10 | `[5,6,7,1,2,3,4]` | 10 = 7+3\uff0c\u76f8\u5f53\u4e8e\u8f6e\u8f6c3\u6b65 |\\r\\n| k=17 | `[5,6,7,1,2,3,4]` | 17 = 7\xd72+3\uff0c\u4e5f\u76f8\u5f53\u4e8e\u8f6e\u8f6c3\u6b65 |\\r\\n\\r\\n**\u6570\u5b66\u539f\u7406**\\r\\n\\r\\n\u5bf9\u4e8e\u957f\u5ea6\u4e3a `n` \u7684\u6570\u7ec4\uff0c\u8f6e\u8f6c `k` \u6b65\u548c\u8f6e\u8f6c `k % n` \u6b65\u7684\u6548\u679c\u5b8c\u5168\u76f8\u540c\u3002\\r\\n\\r\\n\u8fd9\u662f\u56e0\u4e3a\uff1a\\r\\n- \u8f6e\u8f6c `n` \u6b65\u4f1a\u8ba9\u6570\u7ec4\u56de\u5230\u539f\u59cb\u72b6\u6001\\r\\n- \u6240\u4ee5\u8f6e\u8f6c `k` \u6b65 = \u8f6e\u8f6c `(k/n) \xd7 n + k%n` \u6b65 = \u8f6e\u8f6c `k%n` \u6b65\\r\\n\\r\\n**\u4f18\u5316\u610f\u4e49**\\r\\n\\r\\n**\u6027\u80fd\u4f18\u5316**\uff1a\u907f\u514d\u4e0d\u5fc5\u8981\u7684\u91cd\u590d\u8f6e\u8f6c\\r\\n- \u5982\u679c\u6ca1\u6709\u53d6\u6a21\uff0c`k=1000000`\u65f6\u5c31\u8981\u6267\u884c1000000\u6b21\u64cd\u4f5c\\r\\n- \u53d6\u6a21\u540e\uff0c\u53ea\u9700\u8981\u6267\u884c `1000000%7 = 2` \u6b21\u6709\u6548\u64cd\u4f5c\\r\\n\\r\\n**\u7ed3\u679c\u6b63\u786e\u6027**\uff1a\u786e\u4fdd\u7b97\u6cd5\u5728\u4efb\u4f55 k \u503c\u4e0b\u90fd\u80fd\u6b63\u786e\u5de5\u4f5c\\r\\n\\r\\n## 8\u20e3 \u5176\u4ed6\u89e3\u6cd5\\r\\n\\r\\n### \u2728 \u73af\u5f62\u66ff\u6362\u6cd5\\r\\n```c\\r\\n/**\\r\\n * @brief \u4f7f\u7528\u73af\u5f62\u66ff\u6362\u6cd5\u5c06\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u5411\u53f3\u8f6e\u8f6c k \u4e2a\u4f4d\u7f6e\\r\\n * \\r\\n * @param nums \u6307\u5411\u6574\u578b\u6570\u7ec4\u7684\u6307\u9488\\r\\n * @param numsSize \u6570\u7ec4\u7684\u957f\u5ea6\\r\\n * @param k \u8f6e\u8f6c\u7684\u6b65\u6570\uff08\u975e\u8d1f\u6570\uff09\\r\\n * \\r\\n * @details \u6838\u5fc3\u601d\u60f3\u662f\u5c06\u6570\u7ec4\u4e2d\u6bcf\u4e2a\u5143\u7d20\u76f4\u63a5\u653e\u5230\u8f6e\u8f6c\u540e\u7684\u4f4d\u7f6e\u4e0a\u3002\\r\\n *          \u901a\u8fc7\u8ffd\u8e2a\u5143\u7d20\u7684\u79fb\u52a8\u8f68\u8ff9\u5f62\u6210\u73af\u5f62\uff0c\u6bcf\u4e2a\u5143\u7d20\u53ea\u8bbf\u95ee\u4e00\u6b21\u3002\\r\\n *          \\r\\n *          \u7b97\u6cd5\u6d41\u7a0b\uff1a\\r\\n *          1. \u4ece\u6bcf\u4e2a\u672a\u8bbf\u95ee\u7684\u8d77\u59cb\u4f4d\u7f6e\u5f00\u59cb\\r\\n *          2. \u6cbf\u7740\u73af\u5f62\u8def\u5f84\u79fb\u52a8\u5143\u7d20\uff0c\u76f4\u5230\u56de\u5230\u8d77\u59cb\u4f4d\u7f6e\\r\\n *          3. \u7ee7\u7eed\u5904\u7406\u4e0b\u4e00\u4e2a\u73af\u5f62\uff0c\u76f4\u5230\u6240\u6709\u5143\u7d20\u90fd\u88ab\u5904\u7406\\r\\n *          \\r\\n *          \u4f8b\u5982: nums = [1,2,3,4,5,6], k = 2\\r\\n *          \u5f62\u6210\u4e24\u4e2a\u73af\u5f62: 1->3->5->1 \u548c 2->4->6->2\\r\\n *          \\r\\n *          \u65f6\u95f4\u590d\u6742\u5ea6: O(n)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6: O(1)\\r\\n */\\r\\nvoid rotate(int* nums, int numsSize, int k) {\\r\\n    // \u5904\u7406k\u5927\u4e8e\u6570\u7ec4\u957f\u5ea6\u7684\u60c5\u51b5\uff0c\u907f\u514d\u4e0d\u5fc5\u8981\u7684\u8f6e\u8f6c\\r\\n    k = k % numsSize;\\r\\n    \\r\\n    // \u8bb0\u5f55\u5df2\u5904\u7406\u7684\u5143\u7d20\u4e2a\u6570\\r\\n    int count = 0;\\r\\n    \\r\\n    // \u904d\u5386\u6240\u6709\u53ef\u80fd\u7684\u8d77\u59cb\u4f4d\u7f6e\uff0c\u76f4\u5230\u6240\u6709\u5143\u7d20\u90fd\u88ab\u5904\u7406\\r\\n    for (int start = 0; count < numsSize; start++) {\\r\\n        int current = start;    // \u5f53\u524d\u5904\u7406\u7684\u4f4d\u7f6e\\r\\n        int prev = nums[start]; // \u9700\u8981\u653e\u7f6e\u5230\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\u7684\u503c\\r\\n        \\r\\n        // \u6cbf\u7740\u73af\u5f62\u8def\u5f84\u79fb\u52a8\u5143\u7d20\uff0c\u76f4\u5230\u56de\u5230\u8d77\u59cb\u4f4d\u7f6e\\r\\n        do {\\r\\n            int next = (current + k) % numsSize;  // \u8ba1\u7b97\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\\r\\n            int temp = nums[next];                // \u4fdd\u5b58\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\u7684\u539f\u59cb\u503c\\r\\n            nums[next] = prev;                    // \u5c06prev\u653e\u5230\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\\r\\n            prev = temp;                          // \u66f4\u65b0prev\u4e3a\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\u7684\u539f\u59cb\u503c\\r\\n            current = next;                       // \u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\\r\\n            count++;                              // \u589e\u52a0\u5df2\u5904\u7406\u5143\u7d20\u8ba1\u6570\\r\\n        } while (start != current);  // \u5f53\u56de\u5230\u8d77\u59cb\u4f4d\u7f6e\u65f6\u7ed3\u675f\u5f53\u524d\u73af\u5f62\u5904\u7406\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n### \u2728 \u4f7f\u7528\u989d\u5916\u6570\u7ec4\\r\\n```c\\r\\n/**\\r\\n * @brief \u4f7f\u7528\u989d\u5916\u6570\u7ec4\u6cd5\u5c06\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u5411\u53f3\u8f6e\u8f6c k \u4e2a\u4f4d\u7f6e\\r\\n * \\r\\n * @param nums \u6307\u5411\u6574\u578b\u6570\u7ec4\u7684\u6307\u9488\\r\\n * @param numsSize \u6570\u7ec4\u7684\u957f\u5ea6\\r\\n * @param k \u8f6e\u8f6c\u7684\u6b65\u6570\uff08\u975e\u8d1f\u6570\uff09\\r\\n * \\r\\n * @details \u6838\u5fc3\u601d\u60f3\u662f\u521b\u5efa\u4e00\u4e2a\u65b0\u6570\u7ec4\uff0c\u5c06\u539f\u6570\u7ec4\u4e2d\u6bcf\u4e2a\u5143\u7d20\u76f4\u63a5\u653e\u5230\u8f6e\u8f6c\u540e\u7684\u4f4d\u7f6e\u4e0a\uff0c\\r\\n *          \u7136\u540e\u5c06\u65b0\u6570\u7ec4\u7684\u5185\u5bb9\u590d\u5236\u56de\u539f\u6570\u7ec4\u3002\\r\\n *          \\r\\n *          \u7b97\u6cd5\u6d41\u7a0b\uff1a\\r\\n *          1. \u521b\u5efa\u4e0e\u539f\u6570\u7ec4\u7b49\u957f\u7684\u65b0\u6570\u7ec4\\r\\n *          2. \u904d\u5386\u539f\u6570\u7ec4\uff0c\u5c06\u6bcf\u4e2a\u5143\u7d20 nums[i] \u653e\u5230\u65b0\u6570\u7ec4\u7684 (i + k) % n \u4f4d\u7f6e\\r\\n *          3. \u5c06\u65b0\u6570\u7ec4\u7684\u5185\u5bb9\u590d\u5236\u56de\u539f\u6570\u7ec4\\r\\n *          \\r\\n *          \u4f8b\u5982: nums = [1,2,3,4,5,6,7], k = 3\\r\\n *          nums[0]=1 \u653e\u5230 newArr[(0+3)%7] = newArr[3] \u7684\u4f4d\u7f6e\\r\\n *          nums[1]=2 \u653e\u5230 newArr[(1+3)%7] = newArr[4] \u7684\u4f4d\u7f6e\\r\\n *          ...\u4ee5\u6b64\u7c7b\u63a8\\r\\n *          \\r\\n *          \u65f6\u95f4\u590d\u6742\u5ea6: O(n)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6: O(n)\\r\\n */\\r\\nvoid rotate(int* nums, int numsSize, int k) {\\r\\n    int newArr[numsSize];     // \u521b\u5efa\u4e0e\u539f\u6570\u7ec4\u7b49\u957f\u7684\u65b0\u6570\u7ec4\\r\\n    k = k % numsSize;         // \u5904\u7406k\u5927\u4e8e\u6570\u7ec4\u957f\u5ea6\u7684\u60c5\u51b5\\r\\n    \\r\\n    // \u5c06\u5143\u7d20\u653e\u5230\u65b0\u4f4d\u7f6e\\r\\n    for (int i = 0; i < numsSize; i++) {\\r\\n        // \u5c06nums[i]\u653e\u5230\u65b0\u6570\u7ec4\u7684(i + k) % numsSize\u4f4d\u7f6e\uff08\u8f6e\u8f6c\u540e\u7684\u4f4d\u7f6e\uff09\\r\\n        newArr[(i + k) % numsSize] = nums[i];\\r\\n    }\\r\\n    \\r\\n    // \u590d\u5236\u56de\u539f\u6570\u7ec4\\r\\n    for (int i = 0; i < numsSize; i++) {\\r\\n        nums[i] = newArr[i];\\r\\n    }\\r\\n}\\r\\n```\\r\\n</details>"},{"id":"LeetCode169","metadata":{"permalink":"/blog/LeetCode169","editUrl":"https://github.com/EurekaShadow/EurekaShadow.github.io/tree/master/blog/2025-07-31-LeetCode169.mdx","source":"@site/blog/2025-07-31-LeetCode169.mdx","title":"\u591a\u6570\u5143\u7d20","description":"\u529b\u6263\u9762\u8bd5\u7ecf\u5178\u2014\u2014169\u9898","date":"2025-07-31T00:00:00.000Z","tags":[{"inline":false,"label":"\u6570\u7ec4","permalink":"/blog/tags/\u6570\u7ec4","description":"\u5173\u4e8e\u6570\u7ec4\u7684\u9898\u76ee"}],"readingTime":4.21,"hasTruncateMarker":true,"authors":[{"name":"Eureka X","title":"Mr.Nobody","url":"https://github.com/EurekaShadow","page":{"permalink":"/blog/authors/all-Eureka-X-articles"},"socials":{"github":"https://github.com/EurekaShadow"},"imageURL":"https://github.com/EurekaShadow.png","key":"eurekaX"}],"frontMatter":{"slug":"LeetCode169","title":"\u591a\u6570\u5143\u7d20","authors":"eurekaX","tags":["\u6570\u7ec4"]},"unlisted":false,"lastUpdatedAt":1754027993000,"prevItem":{"title":"\u8f6e\u8f6c\u6570\u7ec4","permalink":"/blog/LeetCode189"},"nextItem":{"title":"\u5220\u9664\u6709\u5e8f\u6570\u7ec4\u4e2d\u7684\u91cd\u590d\u9879","permalink":"/blog/LeetCode26"}},"content":"import { Highlight, Keyword, Light, B1, B2, B3, BH3, B3W, MyColor} from \'@site/src/components/ForMDX\';\\r\\n\\r\\n\\r\\n### <B2>[\u529b\u6263\u9762\u8bd5\u7ecf\u5178\u2014\u2014169\u9898](https://leetcode.cn/problems/majority-element/?envType=study-plan-v2&envId=top-interview-150 \\"\u529b\u6263\\")</B2>\\r\\n\\r\\n\x3c!-- truncate --\x3e\\r\\n\\r\\n\\r\\n### \ud83d\udca1 \u53c2\u8003\u4ee3\u7801\uff1a\\r\\n\\r\\n```c\\r\\n/**\\r\\n * \u67e5\u627e\u6570\u7ec4\u4e2d\u7684\u591a\u6570\u5143\u7d20\uff08\u51fa\u73b0\u6b21\u6570\u5927\u4e8e\u230an/2\u230b\u7684\u5143\u7d20\uff09\\r\\n * \u4f7f\u7528Boyer-Moore\u6295\u7968\u7b97\u6cd5\u5b9e\u73b0\\r\\n * \\r\\n * @param nums \u6574\u6570\u6570\u7ec4\u6307\u9488\\r\\n * @param numsSize \u6570\u7ec4\u957f\u5ea6\\r\\n * @return \u8fd4\u56de\u591a\u6570\u5143\u7d20\\r\\n */\\r\\nint majorityElement(int* nums, int numsSize) {\\r\\n    // \u521d\u59cb\u5316\u5019\u9009\u4eba\u4e3a\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c\u8ba1\u6570\u4e3a1\\r\\n    int candidate = nums[0];\\r\\n    int count = 1;\\r\\n    \\r\\n    // \u6295\u7968\u9636\u6bb5\uff1a\u904d\u5386\u6570\u7ec4\u4e2d\u5269\u4f59\u7684\u6240\u6709\u5143\u7d20\\r\\n    for (int i = 1; i < numsSize; i++) {\\r\\n        // \u5982\u679c\u8ba1\u6570\u4e3a0\uff0c\u66f4\u6362\u5019\u9009\u4eba\\r\\n        if (count == 0) {\\r\\n            candidate = nums[i];  // \u8bbe\u7f6e\u65b0\u7684\u5019\u9009\u4eba\\r\\n            count = 1;            // \u91cd\u7f6e\u8ba1\u6570\u4e3a1\\r\\n        } \\r\\n        // \u5982\u679c\u5f53\u524d\u5143\u7d20\u4e0e\u5019\u9009\u4eba\u76f8\u540c\uff0c\u8ba1\u6570\u52a01\\r\\n        else if (nums[i] == candidate) {\\r\\n            count++;\\r\\n        } \\r\\n        // \u5982\u679c\u5f53\u524d\u5143\u7d20\u4e0e\u5019\u9009\u4eba\u4e0d\u540c\uff0c\u8ba1\u6570\u51cf1\uff08\u76f8\u5f53\u4e8e\u62b5\u6d88\uff09\\r\\n        else {\\r\\n            count--;\\r\\n        }\\r\\n    }\\r\\n    \\r\\n    // \u8fd4\u56de\u6700\u7ec8\u7684\u5019\u9009\u4eba\uff08\u591a\u6570\u5143\u7d20\uff09\\r\\n    return candidate;\\r\\n}\\r\\n```\\r\\n\\r\\n### \ud83d\udcd6 \u603b\u7ed3\uff1a\\r\\n\\r\\n<details>\\r\\n<summary>\u70b9\u51fb\u5c55\u5f00\u9898\u76ee\u603b\u7ed3</summary>\\r\\n# \ud83e\udd14 \u591a\u6570\u5143\u7d20\\r\\n\\r\\n---\\r\\n\\r\\n## 1\ufe0f\u20e3 \u9898\u76ee\u6838\u5fc3\u4fe1\u606f\\r\\n\\r\\n\ud83c\udfaf **\u529f\u80fd\u63cf\u8ff0**\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u5927\u5c0f\u4e3a n \u7684\u6570\u7ec4\uff0c\u627e\u5230\u5176\u4e2d\u7684\u591a\u6570\u5143\u7d20\u3002\u591a\u6570\u5143\u7d20\u662f\u6307\u5728\u6570\u7ec4\u4e2d\u51fa\u73b0\u6b21\u6570\u5927\u4e8e \u230a n/2 \u230b \u7684\u5143\u7d20\u3002\\r\\n\\r\\n\ud83d\udce5 **\u8f93\u5165\u8f93\u51fa**\uff1a\\r\\n- **\u8f93\u5165**\uff1a`int* nums`\uff08\u6574\u6570\u6570\u7ec4\u6307\u9488\uff09\uff0c`int numsSize`\uff08\u6570\u7ec4\u957f\u5ea6\uff09\\r\\n- **\u8f93\u51fa**\uff1a\u8fd4\u56de\u591a\u6570\u5143\u7d20\uff08\u4fdd\u8bc1\u5b58\u5728\uff09\\r\\n\\r\\n---\\r\\n\\r\\n## 2\ufe0f\u20e3 \u5b9e\u73b0\u539f\u7406\\r\\n\\r\\n\ud83d\udca1 **\u6838\u5fc3\u601d\u8def**\uff1a\u4f7f\u7528Boyer-Moore\u6295\u7968\u7b97\u6cd5\uff0c\u5229\u7528\u591a\u6570\u5143\u7d20\u51fa\u73b0\u6b21\u6570\u8d85\u8fc7\u4e00\u534a\u7684\u7279\u6027\uff0c\u901a\u8fc7\\"\u6295\u7968\u62b5\u6d88\\"\u673a\u5236\u627e\u5230\u76ee\u6807\u5143\u7d20\u3002\\r\\n\\r\\n\ud83d\udccb **\u5b9e\u73b0\u6b65\u9aa4**\uff1a\\r\\n1. \u521d\u59cb\u5316\u5019\u9009\u5143\u7d20\u4e3a\u6570\u7ec4\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c\u8ba1\u6570\u5668\u4e3a1\\r\\n2. \u904d\u5386\u6570\u7ec4\u5269\u4f59\u5143\u7d20\\r\\n3. \u82e5\u8ba1\u6570\u5668\u4e3a0\uff0c\u66f4\u65b0\u5019\u9009\u5143\u7d20\u4e3a\u5f53\u524d\u5143\u7d20\uff0c\u8ba1\u6570\u5668\u91cd\u7f6e\u4e3a1\\r\\n4. \u82e5\u5f53\u524d\u5143\u7d20\u7b49\u4e8e\u5019\u9009\u5143\u7d20\uff0c\u8ba1\u6570\u5668\u52a01\\r\\n5. \u82e5\u5f53\u524d\u5143\u7d20\u4e0d\u7b49\u4e8e\u5019\u9009\u5143\u7d20\uff0c\u8ba1\u6570\u5668\u51cf1\\r\\n6. \u8fd4\u56de\u6700\u7ec8\u5019\u9009\u5143\u7d20\\r\\n\\r\\n---\\r\\n\\r\\n## 3\ufe0f\u20e3 \u5173\u952e\u70b9\u89e3\u6790\\r\\n\\r\\n\u539f\u59cb\u601d\u8def\u662f\u4f7f\u7528\u53cc\u91cd\u5faa\u73af\u7edf\u8ba1\u6bcf\u4e2a\u5143\u7d20\u51fa\u73b0\u6b21\u6570\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(n\xb2)\uff0c\u867d\u7136\u6b63\u786e\u4f46\u6548\u7387\u4f4e\u3002\u6700\u4f18\u89e3\u4f7f\u7528Boyer-Moore\u6295\u7968\u7b97\u6cd5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u964d\u4e3aO(n)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(1)\u3002\\r\\n\\r\\n### \ud83c\udfaf \u4ee3\u7801\u6280\u5de7\\r\\n- \u5229\u7528\u591a\u6570\u5143\u7d20\u8d85\u8fc7\u4e00\u534a\u7684\u6570\u5b66\u7279\u6027\\r\\n- \u91c7\u7528\u62b5\u6d88\u601d\u60f3\uff0c\u76f8\u540c+1\uff0c\u4e0d\u540c-1\\r\\n- \u65e0\u9700\u5b9e\u9645\u7edf\u8ba1\u6b21\u6570\uff0c\u53ea\u9700\u627e\u5230\u5019\u9009\u5143\u7d20\\r\\n\\r\\n## 4\ufe0f\u20e3 \u4f7f\u7528\u573a\u666f\\r\\n\\r\\n### \u2705 \u9002\u7528\u60c5\u51b5\uff1a\\r\\n- \u9700\u8981\u627e\u5230\u51fa\u73b0\u6b21\u6570\u8d85\u8fc7\u4e00\u534a\u7684\u5143\u7d20\\r\\n- \u6570\u636e\u6d41\u4e2d\u67e5\u627e\u591a\u6570\u5143\u7d20\\r\\n- \u5728\u7ebf\u7b97\u6cd5\u573a\u666f\uff0c\u9700\u8981\u5b9e\u65f6\u5904\u7406\\r\\n\\r\\n### \u26a0\ufe0f \u524d\u63d0\u6761\u4ef6\uff1a\\r\\n- \u6570\u7ec4\u975e\u7a7a\\r\\n- \u4fdd\u8bc1\u5b58\u5728\u591a\u6570\u5143\u7d20\uff08\u51fa\u73b0\u6b21\u6570>n/2\uff09\\r\\n\\r\\n## 5\ufe0f\u20e3 \u590d\u6742\u5ea6\u5206\u6790\\r\\n\\r\\n- \u23f1\ufe0f \u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n) - \u53ea\u9700\u904d\u5386\u6570\u7ec4\u4e00\u6b21\\r\\n\\r\\n- \ud83d\udcbe \u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(1) - \u53ea\u4f7f\u7528\u5e38\u6570\u989d\u5916\u7a7a\u95f4\\r\\n\\r\\n## 6\ufe0f\u20e3 \u6ce8\u610f\u4e8b\u9879\\r\\n\\r\\n### \ud83d\udea9 \u8fb9\u754c\u60c5\u51b5\uff1a\\r\\n- \u6570\u7ec4\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\\r\\n- \u591a\u6570\u5143\u7d20\u521a\u597d\u51fa\u73b0\u230an/2\u230b+1\u6b21\\r\\n- \u6570\u7ec4\u957f\u5ea6\u4e3a\u5076\u6570\u6216\u5947\u6570\u7684\u60c5\u51b5\\r\\n\\r\\n### \ud83d\udca5 \u6613\u9519\u70b9\uff1a\\r\\n- \u5fd8\u8bb0\u5904\u7406\u8ba1\u6570\u5668\u4e3a0\u65f6\u7684\u5019\u9009\u5143\u7d20\u66f4\u65b0\\r\\n- \u6df7\u6dc6\u591a\u6570\u5143\u7d20\u7684\u5224\u65ad\u6761\u4ef6\uff08>n/2\u800c\u975e\u2265n/2\uff09\\r\\n- \u5728\u5b9e\u9645\u5e94\u7528\u4e2d\u672a\u9a8c\u8bc1\u7ed3\u679c\u786e\u5b9e\u4e3a\u591a\u6570\u5143\u7d20\\r\\n\\r\\n## 7\ufe0f\u20e3 \u8865\u5145\u8bf4\u660e\\r\\n\\r\\n**\\"\u6218\u573a\u5bf9\u51b3\\"\u7c7b\u6bd4**\\r\\n```c\\r\\n/**\\r\\n * \u591a\u6570\u5143\u7d20\u67e5\u627e - Boyer-Moore\u6295\u7968\u7b97\u6cd5\u8be6\u89e3\\r\\n * \\r\\n * \u6838\u5fc3\u601d\u60f3\uff1a\u591a\u6570\u5143\u7d20\u7684\u6570\u91cf\u8d85\u8fc7\u603b\u6570\u7684\u4e00\u534a\\r\\n * \u5c31\u50cf\u4e00\u652f\u519b\u961f\u4eba\u6570\u8d85\u8fc7\u603b\u5175\u529b\u768450%\uff0c\u5373\u4f7f\u4e0e\u5176\u4ed6\u6240\u6709\u519b\u961f\u4e00\u5bf9\u4e00\u6218\u6597\uff0c\\r\\n * \u6700\u540e\u5269\u4e0b\u7684\u80af\u5b9a\u8fd8\u662f\u8fd9\u652f\u519b\u961f\u7684\u4eba\\r\\n */\\r\\nint majorityElement(int* nums, int numsSize) {\\r\\n    // \u521d\u59cb\u65f6\uff0c\u6211\u4eec\u5047\u8bbe\u7b2c\u4e00\u4e2a\u58eb\u5175\uff08\u6570\u7ec4\u7b2c\u4e00\u4e2a\u5143\u7d20\uff09\u662f\u6211\u4eec\u8981\u627e\u7684\u519b\u961f\\r\\n    int candidate = nums[0];  // \u5f53\u524d\u5019\u9009\u519b\u961f\\r\\n    int count = 1;            // \u5f53\u524d\u519b\u961f\u7684\u58eb\u5175\u6570\u91cf\uff08\u521d\u59cb\u4e3a1\uff09\\r\\n    \\r\\n    // \u4ece\u7b2c\u4e8c\u4e2a\u58eb\u5175\u5f00\u59cb\u68c0\u9605\u6574\u4e2a\u519b\u961f\\r\\n    for (int i = 1; i < numsSize; i++) {\\r\\n        // \u5982\u679c\u6218\u573a\u4e0a\u6ca1\u6709\u58eb\u5175\u4e86\uff08count\u4e3a0\uff09\\r\\n        if (count == 0) {\\r\\n            // \u66f4\u6362\u5019\u9009\u519b\u961f\u4e3a\u5f53\u524d\u9047\u5230\u7684\u58eb\u5175\u6240\u5c5e\u519b\u961f\\r\\n            candidate = nums[i];  // \u65b0\u7684\u5019\u9009\u519b\u961f\\r\\n            count = 1;            // \u8fd9\u652f\u519b\u961f\u5f53\u524d\u67091\u4e2a\u58eb\u5175\\r\\n        } \\r\\n        // \u5982\u679c\u5f53\u524d\u58eb\u5175\u5c5e\u4e8e\u6211\u4eec\u6b63\u5728\u8ffd\u8e2a\u7684\u5019\u9009\u519b\u961f\\r\\n        else if (nums[i] == candidate) {\\r\\n            count++;  // \u8be5\u519b\u961f\u58eb\u5175\u6570\u91cf+1\\r\\n        } \\r\\n        // \u5982\u679c\u5f53\u524d\u58eb\u5175\u5c5e\u4e8e\u5176\u4ed6\u519b\u961f\uff08\u654c\u5bf9\u519b\u961f\uff09\\r\\n        else {\\r\\n            count--;  // \u6211\u4eec\u5019\u9009\u519b\u961f\u7684\u58eb\u5175\u4e0e\u654c\u519b\u58eb\u5175\u540c\u5f52\u4e8e\u5c3d\uff0c\u6570\u91cf-1\\r\\n        }\\r\\n    }\\r\\n    \\r\\n    // \u6700\u7ec8\u5269\u4e0b\u7684\u5019\u9009\u519b\u961f\u5c31\u662f\u591a\u6570\u519b\u961f\uff08\u591a\u6570\u5143\u7d20\uff09\\r\\n    return candidate;\\r\\n}\\r\\n```\\r\\n\\r\\n**\u5177\u4f53\u4f8b\u5b50\u6f14\u793a**\\r\\n\\r\\n\u4ee5\u6570\u7ec4 `[2,2,1,1,1,2,2]` \u4e3a\u4f8b\uff1a\\r\\n\\r\\n| \u6b65\u9aa4 | \u5f53\u524d\u5143\u7d20 | candidate | count | \u8bf4\u660e |\\r\\n|------|----------|-----------|-------|------|\\r\\n| \u521d\u59cb | - | 2 | 1 | \u5047\u8bbe\u7b2c\u4e00\u4e2a\u5143\u7d202\u662f\u591a\u6570\u5143\u7d20 |\\r\\n| i=1 | 2 | 2 | 2 | \u9047\u5230\u76f8\u540c\u5143\u7d20\uff0ccount++ |\\r\\n| i=2 | 1 | 2 | 1 | \u9047\u5230\u4e0d\u540c\u5143\u7d20\uff0ccount--\uff082\u548c1\u62b5\u6d88\uff09 |\\r\\n| i=3 | 1 | 2 | 0 | \u518d\u6b21\u62b5\u6d88\uff0ccount\u53d8\u4e3a0 |\\r\\n| i=4 | 1 | 1 | 1 | count\u4e3a0\uff0c\u66f4\u6362\u5019\u9009\u5143\u7d20\u4e3a1 |\\r\\n| i=5 | 2 | 1 | 0 | 1\u548c2\u62b5\u6d88\uff0ccount\u53d8\u4e3a0 |\\r\\n| i=6 | 2 | 2 | 1 | count\u4e3a0\uff0c\u66f4\u6362\u5019\u9009\u5143\u7d20\u4e3a2 |\\r\\n</details>"},{"id":"LeetCode26","metadata":{"permalink":"/blog/LeetCode26","editUrl":"https://github.com/EurekaShadow/EurekaShadow.github.io/tree/master/blog/2025-07-30-LeetCode26.mdx","source":"@site/blog/2025-07-30-LeetCode26.mdx","title":"\u5220\u9664\u6709\u5e8f\u6570\u7ec4\u4e2d\u7684\u91cd\u590d\u9879","description":"\u529b\u6263\u9762\u8bd5\u7ecf\u5178\u2014\u201426\u9898","date":"2025-07-30T00:00:00.000Z","tags":[{"inline":false,"label":"\u6570\u7ec4","permalink":"/blog/tags/\u6570\u7ec4","description":"\u5173\u4e8e\u6570\u7ec4\u7684\u9898\u76ee"}],"readingTime":2.57,"hasTruncateMarker":true,"authors":[{"name":"Eureka X","title":"Mr.Nobody","url":"https://github.com/EurekaShadow","page":{"permalink":"/blog/authors/all-Eureka-X-articles"},"socials":{"github":"https://github.com/EurekaShadow"},"imageURL":"https://github.com/EurekaShadow.png","key":"eurekaX"}],"frontMatter":{"slug":"LeetCode26","title":"\u5220\u9664\u6709\u5e8f\u6570\u7ec4\u4e2d\u7684\u91cd\u590d\u9879","authors":"eurekaX","tags":["\u6570\u7ec4"]},"unlisted":false,"lastUpdatedAt":1753853638000,"prevItem":{"title":"\u591a\u6570\u5143\u7d20","permalink":"/blog/LeetCode169"},"nextItem":{"title":"\u5220\u9664\u6709\u5e8f\u6570\u7ec4\u4e2d\u7684\u91cd\u590d\u9879 \u2161","permalink":"/blog/LeetCode80"}},"content":"import { Highlight, Keyword, Light, B1, B2, B3, BH3, B3W, MyColor} from \'@site/src/components/ForMDX\';\\r\\n\\r\\n\\r\\n### <B2>[\u529b\u6263\u9762\u8bd5\u7ecf\u5178\u2014\u201426\u9898](https://leetcode.cn/problems/remove-duplicates-from-sorted-array/description/?envType=study-plan-v2&envId=top-interview-150 \\"\u529b\u6263\\")</B2>\\r\\n\\r\\n\x3c!-- truncate --\x3e\\r\\n\\r\\n\\r\\n### \ud83d\udca1 \u53c2\u8003\u4ee3\u7801\uff1a\\r\\n\\r\\n```c\\r\\n/**\\r\\n * \u5220\u9664\u6392\u5e8f\u6570\u7ec4\u4e2d\u7684\u91cd\u590d\u9879\\r\\n * \\r\\n * @param nums \u6392\u5e8f\u6570\u7ec4\u6307\u9488\uff0c\u7528\u4e8e\u539f\u5730\u5220\u9664\u91cd\u590d\u5143\u7d20\\r\\n * @param numsSize \u6570\u7ec4\u957f\u5ea6\\r\\n * @return \u8fd4\u56de\u5220\u9664\u91cd\u590d\u5143\u7d20\u540e\u6570\u7ec4\u7684\u65b0\u957f\u5ea6\\r\\n * \\r\\n * @description \u4f7f\u7528\u53cc\u6307\u9488\u6cd5\u539f\u5730\u5220\u9664\u91cd\u590d\u5143\u7d20\uff0c\u4fdd\u6301\u5143\u7d20\u76f8\u5bf9\u987a\u5e8f\u4e0d\u53d8\\r\\n * \u65f6\u95f4\u590d\u6742\u5ea6: O(n)\\r\\n * \u7a7a\u95f4\u590d\u6742\u5ea6: O(1)\\r\\n */\\r\\nint removeDuplicates(int* nums, int numsSize) {\\r\\n    int slow = 0;  // \u6162\u6307\u9488\uff0c\u6307\u5411\u4e0d\u91cd\u590d\u5143\u7d20\u7684\u5f53\u524d\u4f4d\u7f6e\\r\\n    \\r\\n    // \u5feb\u6307\u9488\u904d\u5386\u6574\u4e2a\u6570\u7ec4\uff0c\u4ece\u7b2c\u4e8c\u4e2a\u5143\u7d20\u5f00\u59cb\\r\\n    for (int fast = 1; fast < numsSize; fast++) {\\r\\n        // \u5f53\u5feb\u6307\u9488\u6307\u5411\u7684\u5143\u7d20\u4e0e\u6162\u6307\u9488\u6307\u5411\u7684\u5143\u7d20\u4e0d\u76f8\u7b49\u65f6\\r\\n        if (nums[fast] != nums[slow]) {\\r\\n            // \u5c06\u6162\u6307\u9488\u524d\u79fb\u4e00\u4f4d\uff0c\u5e76\u5c06\u5feb\u6307\u9488\u5143\u7d20\u590d\u5236\u5230\u8be5\u4f4d\u7f6e\\r\\n            nums[++slow] = nums[fast];\\r\\n        }\\r\\n    }\\r\\n    \\r\\n    return slow + 1;  // \u8fd4\u56de\u4e0d\u91cd\u590d\u5143\u7d20\u7684\u4e2a\u6570\\r\\n}\\r\\n```\\r\\n\\r\\n### \ud83d\udcd6 \u603b\u7ed3\uff1a\\r\\n\\r\\n<details>\\r\\n<summary>\u70b9\u51fb\u5c55\u5f00\u9898\u76ee\u603b\u7ed3</summary>\\r\\n# \ud83e\udd14 \u5220\u9664\u6709\u5e8f\u6570\u7ec4\u4e2d\u7684\u91cd\u590d\u9879\\r\\n\\r\\n---\\r\\n\\r\\n## 1\ufe0f\u20e3 \u9898\u76ee\u6838\u5fc3\u4fe1\u606f\\r\\n\\r\\n\ud83c\udfaf **\u529f\u80fd\u63cf\u8ff0**\uff1a\u539f\u5730\u5220\u9664\u975e\u4e25\u683c\u9012\u589e\u6392\u5217\u6570\u7ec4\u4e2d\u7684\u91cd\u590d\u5143\u7d20\uff0c\u4f7f\u6bcf\u4e2a\u5143\u7d20\u53ea\u51fa\u73b0\u4e00\u6b21\\r\\n\\r\\n\ud83d\udce5 **\u8f93\u5165\u8f93\u51fa**\uff1a\\r\\n- **\u8f93\u5165**\uff1a\u975e\u4e25\u683c\u9012\u589e\u6392\u5217\u6570\u7ec4 `nums`\u3001\u6570\u7ec4\u957f\u5ea6 `numsSize`\\r\\n- **\u8f93\u51fa**\uff1a\u5220\u9664\u91cd\u590d\u5143\u7d20\u540e\u6570\u7ec4\u7684\u65b0\u957f\u5ea6\uff0c\u5e76\u4fdd\u8bc1\u524dk\u4e2a\u5143\u7d20\u4e3a\u552f\u4e00\u5143\u7d20\\r\\n\\r\\n---\\r\\n\\r\\n## 2\ufe0f\u20e3 \u5b9e\u73b0\u539f\u7406\\r\\n\\r\\n\ud83d\udca1 **\u6838\u5fc3\u601d\u8def**\uff1a\u4f7f\u7528\u5feb\u6162\u53cc\u6307\u9488\u6280\u672f\uff0c\u5feb\u6307\u9488\u904d\u5386\u6570\u7ec4\uff0c\u6162\u6307\u9488\u8bb0\u5f55\u4e0d\u91cd\u590d\u5143\u7d20\u4f4d\u7f6e\\r\\n\\r\\n\ud83d\udccb **\u5b9e\u73b0\u6b65\u9aa4**\uff1a\\r\\n1. \u521d\u59cb\u5316\u6162\u6307\u9488\u6307\u5411\u6570\u7ec4\u7b2c\u4e00\u4e2a\u5143\u7d20\u4f4d\u7f6e\\r\\n2. \u5feb\u6307\u9488\u4ece\u7b2c\u4e8c\u4e2a\u5143\u7d20\u5f00\u59cb\u904d\u5386\u6574\u4e2a\u6570\u7ec4\\r\\n3. \u5f53\u5feb\u6307\u9488\u5143\u7d20\u4e0e\u6162\u6307\u9488\u5143\u7d20\u4e0d\u76f8\u7b49\u65f6\uff0c\u5c06\u5feb\u6307\u9488\u5143\u7d20\u590d\u5236\u5230\u6162\u6307\u9488\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\\r\\n4. \u8fd4\u56de\u6162\u6307\u9488\u4f4d\u7f6e\u52a01\u5373\u4e3a\u65b0\u6570\u7ec4\u957f\u5ea6\\r\\n\\r\\n---\\r\\n\\r\\n\\r\\n## 3\ufe0f\u20e3 \u5173\u952e\u70b9\u89e3\u6790\\r\\n\\r\\n### \ud83c\udfaf \u4ee3\u7801\u6280\u5de7\\r\\n- \u5feb\u6162\u6307\u9488\u7684\u7ecf\u5178\u5e94\u7528\\r\\n- \u5229\u7528\u6570\u7ec4\u5df2\u6392\u5e8f\u7279\u6027\uff0c\u53ea\u9700\u6bd4\u8f83\u76f8\u90bb\u4e0d\u540c\u5143\u7d20\\r\\n- `slow` \u6307\u9488\u65e2\u4f5c\u4e3a\u7d22\u5f15\u53c8\u4f5c\u4e3a\u8ba1\u6570\u5668\\r\\n\\r\\n## 4\ufe0f\u20e3 \u4f7f\u7528\u573a\u666f\\r\\n\\r\\n### \u2705 \u9002\u7528\u60c5\u51b5\uff1a\\r\\n- \u6709\u5e8f\u6570\u7ec4\u53bb\u91cd\u64cd\u4f5c\\r\\n- \u4fdd\u7559\u552f\u4e00\u5143\u7d20\u5e76\u7ef4\u6301\u539f\u6709\u987a\u5e8f\\r\\n- \u7c7b\u4f3c\u95ee\u9898\uff1a\u5220\u9664\u91cd\u590d\u5143\u7d20II\u3001\u79fb\u9664\u5143\u7d20\u7b49\\r\\n\\r\\n### \u26a0\ufe0f \u524d\u63d0\u6761\u4ef6\uff1a\\r\\n- \u6570\u7ec4\u5fc5\u987b\u662f\u6392\u5e8f\u7684\uff08\u975e\u4e25\u683c\u9012\u589e\uff09\\r\\n- \u53ea\u5173\u5fc3\u524dk\u4e2a\u5143\u7d20\uff0c\u5176\u4f59\u4f4d\u7f6e\u5185\u5bb9\u65e0\u5173\u7d27\u8981\\r\\n\\r\\n## 5\ufe0f\u20e3 \u590d\u6742\u5ea6\u5206\u6790\\r\\n\\r\\n- \u23f1\ufe0f \u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n)\uff0c\u53ea\u9700\u8981\u904d\u5386\u6570\u7ec4\u4e00\u6b21\\r\\n\\r\\n- \ud83d\udcbe \u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(1)\uff0c\u53ea\u4f7f\u7528\u4e86\u5e38\u6570\u4e2a\u989d\u5916\u53d8\u91cf\\r\\n\\r\\n## 6\ufe0f\u20e3 \u6ce8\u610f\u4e8b\u9879\\r\\n\\r\\n### \ud83d\udea9 \u8fb9\u754c\u60c5\u51b5\uff1a\\r\\n- \u7a7a\u6570\u7ec4\u6216\u5355\u5143\u7d20\u6570\u7ec4\uff1a`numsSize <= 1`\\r\\n- \u6240\u6709\u5143\u7d20\u90fd\u76f8\u540c\\r\\n- \u6240\u6709\u5143\u7d20\u90fd\u4e0d\u76f8\u540c\\r\\n\\r\\n### \ud83d\udca5 \u6613\u9519\u70b9\uff1a\\r\\n- \u5fd8\u8bb0\u5904\u7406\u8fb9\u754c\u6761\u4ef6\uff08\u5982\u679c\u9898\u76ee\u6ca1\u6709\u4fdd\u8bc1\u6570\u7ec4\u975e\u7a7a\uff09\\r\\n- \u8fd4\u56de\u503c\u5e94\u8be5\u662f `slow + 1` \u800c\u4e0d\u662f `slow`\\r\\n- \u6ca1\u6709\u6b63\u786e\u7406\u89e3\\"\u539f\u5730\\"\u7684\u542b\u4e49\\r\\n- \u5feb\u6307\u9488\u8d77\u59cb\u4f4d\u7f6e\u5e94\u8be5\u662f1\u800c\u4e0d\u662f0\\r\\n\\r\\n</details>"},{"id":"LeetCode80","metadata":{"permalink":"/blog/LeetCode80","editUrl":"https://github.com/EurekaShadow/EurekaShadow.github.io/tree/master/blog/2025-07-30-LeetCode80.mdx","source":"@site/blog/2025-07-30-LeetCode80.mdx","title":"\u5220\u9664\u6709\u5e8f\u6570\u7ec4\u4e2d\u7684\u91cd\u590d\u9879 \u2161","description":"\u529b\u6263\u9762\u8bd5\u7ecf\u5178\u2014\u201480\u9898","date":"2025-07-30T00:00:00.000Z","tags":[{"inline":false,"label":"\u6570\u7ec4","permalink":"/blog/tags/\u6570\u7ec4","description":"\u5173\u4e8e\u6570\u7ec4\u7684\u9898\u76ee"}],"readingTime":4.31,"hasTruncateMarker":true,"authors":[{"name":"Eureka X","title":"Mr.Nobody","url":"https://github.com/EurekaShadow","page":{"permalink":"/blog/authors/all-Eureka-X-articles"},"socials":{"github":"https://github.com/EurekaShadow"},"imageURL":"https://github.com/EurekaShadow.png","key":"eurekaX"}],"frontMatter":{"slug":"LeetCode80","title":"\u5220\u9664\u6709\u5e8f\u6570\u7ec4\u4e2d\u7684\u91cd\u590d\u9879 \u2161","authors":"eurekaX","tags":["\u6570\u7ec4"]},"unlisted":false,"lastUpdatedAt":1753867473000,"prevItem":{"title":"\u5220\u9664\u6709\u5e8f\u6570\u7ec4\u4e2d\u7684\u91cd\u590d\u9879","permalink":"/blog/LeetCode26"},"nextItem":{"title":"\u79fb\u9664\u5143\u7d20","permalink":"/blog/LeetCode27"}},"content":"import { Highlight, Keyword, Light, B1, B2, B3, BH3, B3W, MyColor} from \'@site/src/components/ForMDX\';\\r\\n\\r\\n\\r\\n### <B2>[\u529b\u6263\u9762\u8bd5\u7ecf\u5178\u2014\u201480\u9898](https://leetcode.cn/problems/remove-duplicates-from-sorted-array-ii/description/?envType=study-plan-v2&envId=top-interview-150 \\"\u529b\u6263\\")</B2>\\r\\n\\r\\n\x3c!-- truncate --\x3e\\r\\n\\r\\n\\r\\n### \ud83d\udca1 \u53c2\u8003\u4ee3\u7801\uff1a\\r\\n\\r\\n```c\\r\\n/**\\r\\n * \u5220\u9664\u6709\u5e8f\u6570\u7ec4\u4e2d\u7684\u91cd\u590d\u9879\uff08\u6700\u591a\u4fdd\u75592\u4e2a\u76f8\u540c\u5143\u7d20\uff09\\r\\n * \\r\\n * @param nums \u6709\u5e8f\u6570\u7ec4\u6307\u9488\uff0c\u7528\u4e8e\u539f\u5730\u5220\u9664\u91cd\u590d\u5143\u7d20\\r\\n * @param numsSize \u6570\u7ec4\u957f\u5ea6\\r\\n * @return \u8fd4\u56de\u5220\u9664\u91cd\u590d\u5143\u7d20\u540e\u6570\u7ec4\u7684\u65b0\u957f\u5ea6\\r\\n * \\r\\n * @description \u4f7f\u7528\u53cc\u6307\u9488\u6cd5\u539f\u5730\u5220\u9664\u91cd\u590d\u5143\u7d20\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u5143\u7d20\u6700\u591a\u51fa\u73b0\u4e24\u6b21\\r\\n * \u65f6\u95f4\u590d\u6742\u5ea6: O(n) - \u53ea\u9700\u904d\u5386\u6570\u7ec4\u4e00\u6b21\\r\\n * \u7a7a\u95f4\u590d\u6742\u5ea6: O(1) - \u53ea\u4f7f\u7528\u5e38\u6570\u989d\u5916\u7a7a\u95f4\\r\\n * \\r\\n */\\r\\nint removeDuplicates(int* nums, int numsSize) {\\r\\n    // \u8fb9\u754c\u6761\u4ef6\uff1a\u5982\u679c\u6570\u7ec4\u957f\u5ea6\u5c0f\u4e8e\u7b49\u4e8e2\uff0c\u65e0\u9700\u5904\u7406\u76f4\u63a5\u8fd4\u56de\\r\\n    // \u56e0\u4e3a\u6700\u591a\u4fdd\u75592\u4e2a\u76f8\u540c\u5143\u7d20\uff0c\u6240\u4ee5\u957f\u5ea6\u5c0f\u4e8e\u7b49\u4e8e2\u7684\u6570\u7ec4\u80af\u5b9a\u7b26\u5408\u8981\u6c42\\r\\n    if (numsSize <= 2) {\\r\\n        return numsSize;\\r\\n    }\\r\\n    \\r\\n    // \u521d\u59cb\u5316\u6162\u6307\u9488\u6307\u5411\u7d22\u5f152\\r\\n    // \u524d\u4e24\u4e2a\u5143\u7d20\u80af\u5b9a\u53ef\u4ee5\u4fdd\u7559\uff08\u6700\u591a\u5141\u8bb82\u4e2a\u91cd\u590d\uff09\uff0c\u6240\u4ee5\u4ece\u7b2c3\u4e2a\u4f4d\u7f6e\u5f00\u59cb\u653e\u7f6e\u6709\u6548\u5143\u7d20\\r\\n    int slow = 2;\\r\\n    \\r\\n    // \u5feb\u6307\u9488\u4ece\u7d22\u5f152\u5f00\u59cb\u904d\u5386\u6574\u4e2a\u6570\u7ec4\\r\\n    // \u4ece\u7b2c3\u4e2a\u5143\u7d20\u5f00\u59cb\u68c0\u67e5\u662f\u5426\u9700\u8981\u4fdd\u7559\\r\\n    for (int fast = 2; fast < numsSize; fast++) {\\r\\n        // \u6838\u5fc3\u5224\u65ad\u6761\u4ef6\uff1a\u53ea\u6709\u5f53\u5f53\u524d\u5143\u7d20\u4e0eslow\u6307\u9488\u524d\u4e24\u4e2a\u4f4d\u7f6e\u7684\u5143\u7d20\u4e0d\u540c\u65f6\u624d\u4fdd\u7559\\r\\n        // \u8fd9\u786e\u4fdd\u4e86\u4efb\u4f55\u5143\u7d20\u90fd\u4e0d\u4f1a\u51fa\u73b0\u8d85\u8fc72\u6b21\\r\\n        // \u539f\u7406\uff1a\u5982\u679cnums[fast] == nums[slow-2]\uff0c\u8bf4\u660e\u5305\u62ec\u5373\u5c06\u63d2\u5165\u7684\u4f4d\u7f6e\u5df2\u7ecf\u67093\u4e2a\u76f8\u540c\u5143\u7d20\u4e86\\r\\n        if (nums[fast] != nums[slow - 2]) {\\r\\n            // \u5c06\u5f53\u524d\u5143\u7d20\u590d\u5236\u5230slow\u6307\u9488\u4f4d\u7f6e\\r\\n            nums[slow] = nums[fast];\\r\\n            // \u6162\u6307\u9488\u524d\u79fb\uff0c\u6307\u5411\u4e0b\u4e00\u4e2a\u53ef\u653e\u7f6e\u5143\u7d20\u7684\u4f4d\u7f6e\\r\\n            slow++;\\r\\n        }\\r\\n        // \u5982\u679cnums[fast] == nums[slow-2]\uff0c\u5219\u8df3\u8fc7\u5f53\u524d\u5143\u7d20\uff08\u4e0d\u590d\u5236\uff09\uff0cfast\u7ee7\u7eed\u524d\u8fdb\\r\\n    }\\r\\n    \\r\\n    // \u8fd4\u56de\u65b0\u6570\u7ec4\u7684\u957f\u5ea6\\r\\n    // \u7531\u4e8eslow\u6307\u5411\u4e0b\u4e00\u4e2a\u53ef\u653e\u7f6e\u4f4d\u7f6e\u7684\u7d22\u5f15\uff0c\u6240\u4ee5\u76f4\u63a5\u8fd4\u56deslow\u5373\u4e3a\u6570\u7ec4\u957f\u5ea6\\r\\n    return slow;\\r\\n}\\r\\n```\\r\\n\\r\\n### \ud83d\udcd6 \u603b\u7ed3\uff1a\\r\\n\\r\\n<details>\\r\\n<summary>\u70b9\u51fb\u5c55\u5f00\u9898\u76ee\u603b\u7ed3</summary>\\r\\n# \ud83e\udd14 \u5220\u9664\u6709\u5e8f\u6570\u7ec4\u4e2d\u7684\u91cd\u590d\u9879 II\\r\\n\\r\\n---\\r\\n\\r\\n## 1\ufe0f\u20e3 \u9898\u76ee\u6838\u5fc3\u4fe1\u606f\\r\\n\\r\\n\ud83c\udfaf **\u529f\u80fd\u63cf\u8ff0**\uff1a\u539f\u5730\u5220\u9664\u6709\u5e8f\u6570\u7ec4\u4e2d\u7684\u91cd\u590d\u5143\u7d20\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u5143\u7d20\u6700\u591a\u51fa\u73b0\u4e24\u6b21\\r\\n\\r\\n\ud83d\udce5 **\u8f93\u5165\u8f93\u51fa**\uff1a\\r\\n- **\u8f93\u5165**\uff1a\u6709\u5e8f\u6570\u7ec4 `nums`\u3001\u6570\u7ec4\u957f\u5ea6 `numsSize`\\r\\n- **\u8f93\u51fa**\uff1a\u5220\u9664\u91cd\u590d\u5143\u7d20\u540e\u6570\u7ec4\u7684\u65b0\u957f\u5ea6\uff0c\u5e76\u4fee\u6539\u539f\u6570\u7ec4\u524dk\u4e2a\u5143\u7d20\\r\\n\\r\\n---\\r\\n\\r\\n## 2\ufe0f\u20e3 \u5b9e\u73b0\u539f\u7406\\r\\n\\r\\n\ud83d\udca1 **\u6838\u5fc3\u601d\u8def**\uff1a\u4f7f\u7528\u53cc\u6307\u9488\u6280\u672f\uff0c\u901a\u8fc7\u6bd4\u8f83\u5f53\u524d\u5143\u7d20\u4e0e\u5df2\u4fdd\u7559\u5143\u7d20\u4e2d\u5012\u6570\u7b2c2\u4e2a\u5143\u7d20\u6765\u5224\u65ad\u662f\u5426\u5141\u8bb8\u63d2\u5165\\r\\n\\r\\n\ud83d\udccb **\u5b9e\u73b0\u6b65\u9aa4**\uff1a\\r\\n1. \u5904\u7406\u8fb9\u754c\u60c5\u51b5\uff1a\u6570\u7ec4\u957f\u5ea6\u22642\u65f6\u76f4\u63a5\u8fd4\u56de\\r\\n2. \u521d\u59cb\u5316\u6162\u6307\u9488\u6307\u5411\u7d22\u5f152\uff08\u524d\u4e24\u4e2a\u5143\u7d20\u80af\u5b9a\u53ef\u4ee5\u4fdd\u7559\uff09\\r\\n3. \u5feb\u6307\u9488\u4ece\u7d22\u5f152\u5f00\u59cb\u904d\u5386\u6570\u7ec4\\r\\n4. \u5f53\u5feb\u6307\u9488\u5143\u7d20\u4e0e\u6162\u6307\u9488\u524d\u4e24\u4e2a\u4f4d\u7f6e\u5143\u7d20\u4e0d\u540c\u65f6\uff0c\u5c06\u5176\u590d\u5236\u5230\u6162\u6307\u9488\u4f4d\u7f6e\\r\\n5. \u8fd4\u56de\u6162\u6307\u9488\u4f4d\u7f6e\u4f5c\u4e3a\u65b0\u6570\u7ec4\u957f\u5ea6\\r\\n\\r\\n---\\r\\n\\r\\n## 3\ufe0f\u20e3 \u5173\u952e\u70b9\u89e3\u6790\\r\\n\\r\\n### \u521d\u59cb\u601d\u8def vs \u6700\u4f18\u89e3\\r\\n\\r\\n#### \ud83d\udcad \u6211\u7684\u521d\u59cb\u60f3\u6cd5\\r\\n\u4f7f\u7528\u663e\u5f0f\u8ba1\u6570\u5668\u8bb0\u5f55\u5f53\u524d\u5143\u7d20\u51fa\u73b0\u6b21\u6570\uff0c\u5f53\u5143\u7d20\u76f8\u540c\u65f6\u53ea\u6709\u8ba1\u6570\u5c0f\u4e8e1\u65f6\u624d\u5141\u8bb8\u590d\u5236\uff1a\\r\\n```c\\r\\nint removeDuplicates(int* nums, int numsSize) {\\r\\n    int slow = 0;\\r\\n    int count = 0;\\r\\n    \\r\\n    for (int fast = 1; fast < numsSize; fast++) {\\r\\n        if (nums[fast] != nums[slow]) {\\r\\n            nums[++slow] = nums[fast];\\r\\n            count = 0;\\r\\n        } else if(count < 1){\\r\\n            count++;\\r\\n            nums[++slow] = nums[fast];    \\r\\n        }\\r\\n    }\\r\\n    \\r\\n    return slow + 1;\\r\\n}\\r\\n```\\r\\n\\r\\n#### \u26a1 \u6700\u4f18\u89e3\u6cd5\uff08\u9690\u5f0f\u8ba1\u6570\uff09\\r\\n```c\\r\\nint removeDuplicates(int* nums, int numsSize) {\\r\\n    if (numsSize <= 2) {\\r\\n        return numsSize;\\r\\n    }\\r\\n    \\r\\n    int slow = 2;\\r\\n    \\r\\n    for (int fast = 2; fast < numsSize; fast++) {\\r\\n        if (nums[fast] != nums[slow - 2]) {\\r\\n            nums[slow] = nums[fast];\\r\\n            slow++;\\r\\n        }\\r\\n    }\\r\\n    \\r\\n    return slow;\\r\\n}\\r\\n```\\r\\n\\r\\n### \ud83c\udd9a \u5bf9\u6bd4\u5206\u6790\\r\\n\\r\\n| \u65b9\u9762 | \u521d\u59cb\u601d\u8def | \u6700\u4f18\u89e3 |\\r\\n|------|----------|--------|\\r\\n| \u8ba1\u6570\u65b9\u5f0f | \u663e\u5f0f\u8ba1\u6570\u5668 | \u9690\u5f0f\u901a\u8fc7\u6570\u7ec4\u4f4d\u7f6e\u5173\u7cfb |\\r\\n| \u4ee3\u7801\u590d\u6742\u5ea6 | \u9700\u8981\u7ef4\u62a4count\u53d8\u91cf | \u65e0\u9700\u989d\u5916\u53d8\u91cf |\\r\\n| \u53ef\u8bfb\u6027 | \u903b\u8f91\u6e05\u6670\u4f46\u7a0d\u590d\u6742 | \u7b80\u6d01\u4f46\u9700\u8981\u7406\u89e3\u6280\u5de7 |\\r\\n| \u6269\u5c55\u6027 | \u5bb9\u6613\u6269\u5c55\u5230k\u6b21\u91cd\u590d | \u9700\u8981\u4fee\u6539\u7d22\u5f15\u8ba1\u7b97 |\\r\\n\\r\\n### \ud83c\udfaf \u4ee3\u7801\u6280\u5de7\\r\\n- \u53cc\u6307\u9488\u6cd5\u7684\u7ecf\u5178\u5e94\u7528\\r\\n- \u5229\u7528\u6570\u7ec4\u6709\u5e8f\u7279\u6027\uff0c\u901a\u8fc7\u4f4d\u7f6e\u5173\u7cfb\u9690\u5f0f\u8ba1\u6570\\r\\n- \u8fb9\u754c\u6761\u4ef6\u7684\u5de7\u5999\u5904\u7406\uff08\u524d\u4e24\u4e2a\u5143\u7d20\u5929\u7136\u6ee1\u8db3\u6761\u4ef6\uff09\\r\\n\\r\\n## 4\ufe0f\u20e3 \u4f7f\u7528\u573a\u666f\\r\\n\\r\\n### \u2705 \u9002\u7528\u60c5\u51b5\uff1a\\r\\n- \u6709\u5e8f\u6570\u7ec4\u4e2d\u9650\u5236\u5143\u7d20\u51fa\u73b0\u6b21\u6570\\r\\n- \u9700\u8981\u539f\u5730\u5904\u7406\u6570\u7ec4\u6570\u636e\\r\\n- \u7c7b\u4f3c\u95ee\u9898\uff1a\u5220\u9664\u91cd\u590d\u5143\u7d20I\u3001\u79fb\u9664\u5143\u7d20\u7b49\\r\\n\\r\\n### \u26a0\ufe0f \u524d\u63d0\u6761\u4ef6\uff1a\\r\\n- \u6570\u7ec4\u5fc5\u987b\u662f\u6392\u5e8f\u7684\\r\\n- \u53ea\u5173\u5fc3\u524dk\u4e2a\u5143\u7d20\uff0c\u5176\u4f59\u4f4d\u7f6e\u5185\u5bb9\u65e0\u5173\u7d27\u8981\\r\\n\\r\\n## 5\ufe0f\u20e3 \u590d\u6742\u5ea6\u5206\u6790\\r\\n\\r\\n- \u23f1\ufe0f \u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n)\uff0c\u53ea\u9700\u8981\u904d\u5386\u6570\u7ec4\u4e00\u6b21\\r\\n\\r\\n- \ud83d\udcbe \u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(1)\uff0c\u53ea\u4f7f\u7528\u4e86\u5e38\u6570\u4e2a\u989d\u5916\u53d8\u91cf\\r\\n\\r\\n## 6\ufe0f\u20e3 \u6ce8\u610f\u4e8b\u9879\\r\\n\\r\\n### \ud83d\udea9 \u8fb9\u754c\u60c5\u51b5\uff1a\\r\\n- \u7a7a\u6570\u7ec4\u6216\u5355\u5143\u7d20\u6570\u7ec4\uff1a`numsSize <= 2`\\r\\n- \u6240\u6709\u5143\u7d20\u90fd\u76f8\u540c\\r\\n- \u6240\u6709\u5143\u7d20\u90fd\u4e0d\u76f8\u540c\\r\\n- \u53ea\u6709\u90e8\u5206\u5143\u7d20\u91cd\u590d\u8d85\u8fc7\u4e24\u6b21\\r\\n\\r\\n### \ud83d\udca5 \u6613\u9519\u70b9\uff1a\\r\\n- \u5fd8\u8bb0\u5904\u7406\u8fb9\u754c\u6761\u4ef6\\r\\n- \u6162\u6307\u9488\u8d77\u59cb\u4f4d\u7f6e\u5e94\u8be5\u662f2\u800c\u4e0d\u662f0\\r\\n- \u8fd4\u56de\u503c\u5e94\u8be5\u662f `slow` \u800c\u4e0d\u662f `slow + 1`\\r\\n- \u6bd4\u8f83\u6761\u4ef6\u5e94\u8be5\u662f `nums[fast] != nums[slow - 2]` \u800c\u4e0d\u662f\u5176\u4ed6\u4f4d\u7f6e\\r\\n</details>"},{"id":"LeetCode27","metadata":{"permalink":"/blog/LeetCode27","editUrl":"https://github.com/EurekaShadow/EurekaShadow.github.io/tree/master/blog/2025-07-29-LeetCode27.mdx","source":"@site/blog/2025-07-29-LeetCode27.mdx","title":"\u79fb\u9664\u5143\u7d20","description":"\u529b\u6263\u9762\u8bd5\u7ecf\u5178\u2014\u201427\u9898","date":"2025-07-29T00:00:00.000Z","tags":[{"inline":false,"label":"\u6570\u7ec4","permalink":"/blog/tags/\u6570\u7ec4","description":"\u5173\u4e8e\u6570\u7ec4\u7684\u9898\u76ee"}],"readingTime":3.15,"hasTruncateMarker":true,"authors":[{"name":"Eureka X","title":"Mr.Nobody","url":"https://github.com/EurekaShadow","page":{"permalink":"/blog/authors/all-Eureka-X-articles"},"socials":{"github":"https://github.com/EurekaShadow"},"imageURL":"https://github.com/EurekaShadow.png","key":"eurekaX"}],"frontMatter":{"slug":"LeetCode27","title":"\u79fb\u9664\u5143\u7d20","authors":"eurekaX","tags":["\u6570\u7ec4"]},"unlisted":false,"lastUpdatedAt":1753795459000,"prevItem":{"title":"\u5220\u9664\u6709\u5e8f\u6570\u7ec4\u4e2d\u7684\u91cd\u590d\u9879 \u2161","permalink":"/blog/LeetCode80"},"nextItem":{"title":"Git\u5b66\u4e60","permalink":"/blog/LearnGit"}},"content":"import { Highlight, Keyword, Light, B1, B2, B3, BH3, B3W, MyColor} from \'@site/src/components/ForMDX\';\\r\\n\\r\\n\\r\\n### <B2>[\u529b\u6263\u9762\u8bd5\u7ecf\u5178\u2014\u201427\u9898](https://leetcode.cn/problems/remove-element/?envType=study-plan-v2&envId=top-interview-150 \\"\u529b\u6263\\")</B2>\\r\\n\\r\\n\x3c!-- truncate --\x3e\\r\\n\\r\\n\\r\\n### \ud83d\udca1 \u53c2\u8003\u4ee3\u7801\uff1a\\r\\n\\r\\n```c\\r\\n/**\\r\\n * \u539f\u5730\u79fb\u9664\u6570\u7ec4\u4e2d\u7b49\u4e8e val \u7684\u5143\u7d20\\r\\n * \\r\\n * @param nums \u8f93\u5165\u6570\u7ec4\\r\\n * @param numsSize \u6570\u7ec4\u957f\u5ea6\\r\\n * @param val  \u8981\u79fb\u9664\u7684\u503c\\r\\n * @return \u8fd4\u56de\u4e0d\u7b49\u4e8e val \u7684\u5143\u7d20\u6570\u91cf\\r\\n */\\r\\nint removeElement(int* nums, int numsSize, int val) {\\r\\n    int slow = 0;  // \u6162\u6307\u9488\uff0c\u6307\u5411\u4e0b\u4e00\u4e2a\u8981\u653e\u7f6e\u975eval\u5143\u7d20\u7684\u4f4d\u7f6e\\r\\n    \\r\\n    // \u5feb\u6307\u9488\u904d\u5386\u6574\u4e2a\u6570\u7ec4\\r\\n    for (int fast = 0; fast < numsSize; fast++) {\\r\\n        // \u5982\u679c\u5f53\u524d\u5143\u7d20\u4e0d\u7b49\u4e8eval\uff0c\u5219\u5c06\u5176\u653e\u5230slow\u4f4d\u7f6e\\r\\n        if (nums[fast] != val) {\\r\\n            nums[slow++] = nums[fast];\\r\\n        }\\r\\n    }\\r\\n    \\r\\n    return slow;  // slow\u5373\u4e3a\u65b0\u6570\u7ec4\u7684\u957f\u5ea6\\r\\n}\\r\\n```\\r\\n\\r\\n### \ud83d\udcd6 \u603b\u7ed3\uff1a\\r\\n\\r\\n<details>\\r\\n<summary>\u70b9\u51fb\u5c55\u5f00\u9898\u76ee\u603b\u7ed3</summary>\\r\\n# \ud83e\udd14 \u79fb\u9664\u5143\u7d20\\r\\n\\r\\n---\\r\\n\\r\\n## 1\ufe0f\u20e3 \u9898\u76ee\u6838\u5fc3\u4fe1\u606f\\r\\n\\r\\n\ud83c\udfaf **\u529f\u80fd\u63cf\u8ff0**\uff1a\u539f\u5730\u79fb\u9664\u6570\u7ec4\u4e2d\u6240\u6709\u7b49\u4e8e\u6307\u5b9a\u503c\u7684\u5143\u7d20\uff0c\u8fd4\u56de\u5269\u4f59\u5143\u7d20\u6570\u91cf\\r\\n\\r\\n\ud83d\udce5 **\u8f93\u5165\u8f93\u51fa**\uff1a\\r\\n- **\u8f93\u5165**\uff1a\u6570\u7ec4 `nums`\u3001\u6570\u7ec4\u957f\u5ea6 `numsSize`\u3001\u8981\u79fb\u9664\u7684\u503c `val`\\r\\n- **\u8f93\u51fa**\uff1a\u4e0d\u7b49\u4e8e `val` \u7684\u5143\u7d20\u6570\u91cf\uff0c\u4e14\u8fd9\u4e9b\u5143\u7d20\u4f4d\u4e8e\u6570\u7ec4\u524d\u90e8\\r\\n\\r\\n---\\r\\n\\r\\n## 2\ufe0f\u20e3 \u5b9e\u73b0\u539f\u7406\\r\\n\\r\\n\ud83d\udca1 **\u6838\u5fc3\u601d\u8def**\uff1a\u4f7f\u7528\u5feb\u6162\u53cc\u6307\u9488\u6280\u672f\uff0c\u5feb\u6307\u9488\u904d\u5386\u6570\u7ec4\uff0c\u6162\u6307\u9488\u8bb0\u5f55\u6709\u6548\u5143\u7d20\u4f4d\u7f6e\\r\\n\\r\\n\ud83d\udccb **\u5b9e\u73b0\u6b65\u9aa4**\uff1a\\r\\n1. \u521d\u59cb\u5316\u6162\u6307\u9488\u6307\u5411\u6570\u7ec4\u5f00\u5934\uff08\u4e0b\u4e00\u4e2a\u6709\u6548\u5143\u7d20\u5b58\u653e\u4f4d\u7f6e\uff09\\r\\n2. \u5feb\u6307\u9488\u904d\u5386\u6574\u4e2a\u6570\u7ec4\\r\\n3. \u9047\u5230\u4e0d\u7b49\u4e8e `val` \u7684\u5143\u7d20\u5c31\u653e\u5230\u6162\u6307\u9488\u4f4d\u7f6e\uff0c\u5e76\u79fb\u52a8\u6162\u6307\u9488\\r\\n4. \u8fd4\u56de\u6162\u6307\u9488\u7684\u4f4d\u7f6e\u5373\u4e3a\u65b0\u6570\u7ec4\u957f\u5ea6\\r\\n\\r\\n---\\r\\n\\r\\n## 3\ufe0f\u20e3 \u5173\u952e\u70b9\u89e3\u6790\\r\\n\\r\\n### \ud83e\udde0 \u521d\u59cb\u601d\u8def vs \u6700\u4f18\u89e3\\r\\n\\r\\n#### \ud83d\udcad \u6211\u7684\u521d\u59cb\u60f3\u6cd5\\r\\n\u4f7f\u7528\u989d\u5916\u6570\u7ec4\u5b58\u50a8\u4e0d\u7b49\u4e8e `val` \u7684\u5143\u7d20\uff0c\u904d\u5386\u5b8c\u6210\u540e\u590d\u5236\u56de\u539f\u6570\u7ec4\u3002\u5373\uff1a\\r\\n```c\\r\\nint removeElement(int* nums, int numsSize, int val) {\\r\\n    int tempArray[100];  // \u989d\u5916\u6570\u7ec4\\r\\n    int count = 0;\\r\\n    \\r\\n    // \u7b2c\u4e00\u904d\u904d\u5386\uff1a\u590d\u5236\u5230\u4e34\u65f6\u6570\u7ec4\\r\\n    for (int i = 0; i < numsSize; i++) {\\r\\n        if (nums[i] != val) {\\r\\n            tempArray[count++] = nums[i];\\r\\n        }\\r\\n    }\\r\\n    \\r\\n    // \u7b2c\u4e8c\u904d\u904d\u5386\uff1a\u590d\u5236\u56de\u539f\u6570\u7ec4\\r\\n    for (int i = 0; i < count; i++) {\\r\\n        nums[i] = tempArray[i];\\r\\n    }\\r\\n    \\r\\n    return count;\\r\\n}\\r\\n```\\r\\n\\r\\n#### \u26a1 \u6700\u4f18\u89e3\u6cd5\uff08\u53cc\u6307\u9488\uff09\\r\\n\\r\\n```c\\r\\nint removeElement(int* nums, int numsSize, int val) {\\r\\n    int slow = 0;  // \u6162\u6307\u9488\uff0c\u6307\u5411\u4e0b\u4e00\u4e2a\u8981\u653e\u7f6e\u975eval\u5143\u7d20\u7684\u4f4d\u7f6e\\r\\n\\t\\r\\n    // \u5feb\u6307\u9488\u904d\u5386\u6574\u4e2a\u6570\u7ec4\\r\\n    for (int fast = 0; fast < numsSize; fast++) {\\r\\n        // \u5982\u679c\u5f53\u524d\u5143\u7d20\u4e0d\u7b49\u4e8eval\uff0c\u5219\u5c06\u5176\u653e\u5230slow\u4f4d\u7f6e\\r\\n        if (nums[fast] != val) {\\r\\n            nums[slow++] = nums[fast];\\r\\n        }\\r\\n    }\\r\\n    \\r\\n    return slow;  // slow\u5373\u4e3a\u65b0\u6570\u7ec4\u7684\u957f\u5ea6\\r\\n}\\r\\n```\\r\\n### \ud83c\udd9a \u5bf9\u6bd4\u5206\u6790\\r\\n\\r\\n| \u65b9\u9762 | \u521d\u59cb\u601d\u8def | \u6700\u4f18\u89e3(\u53cc\u6307\u9488) |\\r\\n|------|----------|----------------|\\r\\n| \u7a7a\u95f4\u590d\u6742\u5ea6 | O(n) - \u9700\u8981\u989d\u5916\u6570\u7ec4 | O(1) - \u539f\u5730\u64cd\u4f5c |\\r\\n| \u65f6\u95f4\u590d\u6742\u5ea6 | O(n) - \u4e24\u6b21\u904d\u5386 | O(n) - \u4e00\u6b21\u904d\u5386 |\\r\\n| \u4ee3\u7801\u7b80\u6d01\u6027 | \u9700\u8981\u4e24\u4e2a\u5faa\u73af | \u53ea\u9700\u4e00\u4e2a\u5faa\u73af |\\r\\n| \u662f\u5426\u539f\u5730 | \u5426 | \u662f |\\r\\n\\r\\n### \ud83c\udfaf \u4ee3\u7801\u6280\u5de7\\r\\n- \u5feb\u6162\u6307\u9488\u7684\u7ecf\u5178\u5e94\u7528\\r\\n- \u5229\u7528\u6570\u7ec4\u968f\u673a\u8bbf\u95ee\u7279\u6027\uff0c\u76f4\u63a5\u8986\u76d6\u65e0\u6548\u5143\u7d20\\r\\n- `slow` \u6307\u9488\u65e2\u4f5c\u4e3a\u7d22\u5f15\u53c8\u4f5c\u4e3a\u8ba1\u6570\u5668\\r\\n\\r\\n---\\r\\n\\r\\n## 4\ufe0f\u20e3 \u4f7f\u7528\u573a\u666f\\r\\n\\r\\n\u2705 **\u9002\u7528\u60c5\u51b5**\uff1a\\r\\n- \u9700\u8981\u539f\u5730\u5220\u9664\u6570\u7ec4\u4e2d\u6ee1\u8db3\u6761\u4ef6\u7684\u5143\u7d20\\r\\n- \u6570\u7ec4\u5143\u7d20\u8fc7\u6ee4\u64cd\u4f5c\\r\\n- \u7c7b\u4f3c\u95ee\u9898\uff1a\u5220\u9664\u91cd\u590d\u5143\u7d20\u3001\u79fb\u52a8\u96f6\u7b49\\r\\n\\r\\n\u26a0\ufe0f **\u524d\u63d0\u6761\u4ef6**\uff1a\\r\\n- \u5143\u7d20\u987a\u5e8f\u53ef\u4ee5\u6539\u53d8\\r\\n- \u53ea\u5173\u5fc3\u524dk\u4e2a\u5143\u7d20\uff0c\u5176\u4f59\u4f4d\u7f6e\u5185\u5bb9\u65e0\u5173\u7d27\u8981\\r\\n\\r\\n---\\r\\n\\r\\n## 5\ufe0f\u20e3 \u590d\u6742\u5ea6\u5206\u6790\\r\\n\\r\\n\u23f1\ufe0f **\u65f6\u95f4\u590d\u6742\u5ea6**\uff1aO(n)\uff0c\u53ea\u9700\u8981\u904d\u5386\u6570\u7ec4\u4e00\u6b21\\r\\n\\r\\n\ud83d\udcbe **\u7a7a\u95f4\u590d\u6742\u5ea6**\uff1aO(1)\uff0c\u53ea\u4f7f\u7528\u4e86\u5e38\u6570\u4e2a\u989d\u5916\u53d8\u91cf\\r\\n\\r\\n---\\r\\n\\r\\n## 6\ufe0f\u20e3 \u6ce8\u610f\u4e8b\u9879\\r\\n\\r\\n\ud83d\udea9 **\u8fb9\u754c\u60c5\u51b5**\uff1a\\r\\n- \u7a7a\u6570\u7ec4\uff1a`numsSize = 0`\\r\\n- \u6240\u6709\u5143\u7d20\u90fd\u7b49\u4e8e `val`\\r\\n- \u6240\u6709\u5143\u7d20\u90fd\u4e0d\u7b49\u4e8e `val`\\r\\n\\r\\n\ud83d\udca5 **\u6613\u9519\u70b9**\uff1a\\r\\n- \u5fd8\u8bb0\u8fd4\u56de\u65b0\u6570\u7ec4\u957f\u5ea6\\r\\n- \u6307\u9488\u8fb9\u754c\u6761\u4ef6\u5904\u7406\u9519\u8bef\\r\\n- \u6ca1\u6709\u6b63\u786e\u7406\u89e3\\"\u539f\u5730\\"\u7684\u542b\u4e49\\r\\n\\r\\n\\r\\n</details>"},{"id":"LearnGit","metadata":{"permalink":"/blog/LearnGit","editUrl":"https://github.com/EurekaShadow/EurekaShadow.github.io/tree/master/blog/2025-07-06-LearnGit.mdx","source":"@site/blog/2025-07-06-LearnGit.mdx","title":"Git\u5b66\u4e60","description":"Git \u4f7f\u7528\u6280\u5de7\u6c47\u603b","date":"2025-07-06T00:00:00.000Z","tags":[{"inline":false,"label":"Git","permalink":"/blog/tags/Git","description":"\u8bb0\u5f55\u5b66\u4e60Git\u7684\u5386\u7a0b"}],"readingTime":2.69,"hasTruncateMarker":true,"authors":[{"name":"Eureka X","title":"Mr.Nobody","url":"https://github.com/EurekaShadow","page":{"permalink":"/blog/authors/all-Eureka-X-articles"},"socials":{"github":"https://github.com/EurekaShadow"},"imageURL":"https://github.com/EurekaShadow.png","key":"eurekaX"}],"frontMatter":{"slug":"LearnGit","title":"Git\u5b66\u4e60","authors":"eurekaX","tags":["Git"]},"unlisted":false,"lastUpdatedAt":1751818747000,"prevItem":{"title":"\u79fb\u9664\u5143\u7d20","permalink":"/blog/LeetCode27"},"nextItem":{"title":"\u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4","permalink":"/blog/LeetCode88"}},"content":"## Git \u4f7f\u7528\u6280\u5de7\u6c47\u603b\\r\\n\x3c!-- truncate --\x3e\\r\\n\\r\\n### \u6d4b\u8bd5 git diff \u529f\u80fd\\r\\n\\r\\n- `git diff`\uff1a\u67e5\u770b**\u672a\u6682\u5b58\u6587\u4ef6**\u4e0e\u4e0a\u6b21\u63d0\u4ea4\u4e4b\u95f4\u7684\u5dee\u5f02\u3002\\r\\n- `git diff --staged`\uff1a\u67e5\u770b**\u5df2\u6682\u5b58\u6587\u4ef6**\u4e0e\u4e0a\u6b21\u63d0\u4ea4\u4e4b\u95f4\u7684\u5dee\u5f02\u3002\\r\\n\\r\\n\u2705 **\u4e00\u53e5\u8bdd\u603b\u7ed3**\uff1a\u5982\u679c\u6587\u4ef6\u5728**\u672a\u6682\u5b58\u533a**\uff0c\u4f7f\u7528 `git diff`\uff1b\u5982\u679c\u6587\u4ef6**\u5df2\u6682\u5b58**\uff0c\u4f7f\u7528 `git diff --staged`\u3002\\r\\n\\r\\n---\\r\\n\\r\\n### \u63d0\u4ea4\u64cd\u4f5c\\r\\n\\r\\n- `git commit -a`\uff1a\u8df3\u8fc7 `git add` \u9636\u6bb5\uff0c\u4e00\u952e\u6682\u5b58\u5e76\u63d0\u4ea4\u6240\u6709\u4fee\u6539\u3002\\r\\n- `git commit --amend`\uff1a\u64a4\u9500\u6700\u8fd1\u4e00\u6b21\u63d0\u4ea4\uff0c\u5e76\u5141\u8bb8\uff1a\\r\\n  - \u4f7f\u7528 `git add` \u8865\u5145\u9057\u6f0f\u7684\u6587\u4ef6\uff1b\\r\\n  - \u7f16\u8f91\u6216\u4fdd\u7559\u539f\u6709\u7684\u63d0\u4ea4\u4fe1\u606f\u540e\u91cd\u65b0\u63d0\u4ea4\u3002\\r\\n\\r\\n\ud83d\udd01 \u9002\u7528\u4e8e\u521a\u63d0\u4ea4\u5b8c\u53d1\u73b0\u8fd8\u6709\u6587\u4ef6\u6ca1\u6dfb\u52a0\uff0c\u6216\u8005\u9700\u8981\u4fee\u6539\u63d0\u4ea4\u4fe1\u606f\u7684\u60c5\u51b5\u3002\\r\\n\\r\\n---\\r\\n\\r\\n### \u6587\u4ef6\u91cd\u547d\u540d\u64cd\u4f5c\\r\\n\\r\\n- `git mv <\u539f\u6587\u4ef6\u540d> <\u65b0\u6587\u4ef6\u540d>`\uff1a\u7528\u4e8e\u91cd\u547d\u540d Git \u8ddf\u8e2a\u7684\u6587\u4ef6\u3002\\r\\n\\r\\n\u793a\u4f8b\uff1a\\r\\n\\r\\n```bash\\r\\ngit mv test1.txt test.txt\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### \u64a4\u9500\u6682\u5b58\u64cd\u4f5c\\r\\n\\r\\n- `git reset HEAD <\u6587\u4ef6\u540d>`\uff1a\u53d6\u6d88\u67d0\u4e2a\u6587\u4ef6\u7684\u6682\u5b58\u72b6\u6001\u3002\\r\\n\\r\\n\u793a\u4f8b\uff1a\\r\\n\\r\\n```bash\\r\\ngit reset HEAD README.md\\r\\n```\\r\\n\\r\\n\ud83d\udccc \u5e38\u7528\u4e8e\u8bef\u5c06\u67d0\u4e9b\u6587\u4ef6\u52a0\u5165\u6682\u5b58\u533a\u540e\u60f3\u5c06\u5176\u79fb\u51fa\u7684\u60c5\u51b5\u3002\\r\\n\\r\\n---\\r\\n\\r\\n### \u653e\u5f03\u672c\u5730\u4fee\u6539\\r\\n\\r\\n- `git restore <\u6587\u4ef6\u540d>`\uff1a\u653e\u5f03\u5bf9\u8be5\u6587\u4ef6\u7684\u6240\u6709\u672c\u5730\u4fee\u6539\u3002\\r\\n\\r\\n\u26a0\ufe0f **\u6ce8\u610f**\uff1a\u8be5\u64cd\u4f5c\u4e0d\u53ef\u9006\uff0c\u8bf7\u786e\u4fdd\u786e\u5b9e\u4e0d\u9700\u8981\u8fd9\u4e9b\u4fee\u6539\u540e\u518d\u6267\u884c\u3002\\r\\n\\r\\n---\\r\\n\\r\\n## \u5206\u652f\u5207\u6362\u4e0e\u7d27\u6025\u4fee\u590d\u6d41\u7a0b\\r\\n\\r\\n\u5047\u8bbe\u4f60\u73b0\u5728\u6b63\u5728\u89e3\u51b3\u95ee\u989853\uff0c\u5f53\u524d\u5904\u4e8e `iss53` \u5206\u652f\u4e0a\uff0c\u800c `main` \u5206\u652f\u7a81\u7136\u51fa\u73b0\u4e86\u95ee\u9898\uff0c\u9700\u8981\u9a6c\u4e0a\u4fee\u590d\u3002\\r\\n\\r\\n\u2705 **\u5904\u7406\u6b65\u9aa4\u5982\u4e0b**\uff1a\\r\\n\\r\\n1. \u5207\u6362\u56de `main` \u5206\u652f\uff1a\\r\\n\\r\\n   ```bash\\r\\n   git switch main\\r\\n   ```\\r\\n\\r\\n2. \u521b\u5efa\u4e00\u4e2a\u4e34\u65f6\u5206\u652f `hotfix` \u6765\u4fee\u590d\u95ee\u9898\uff1a\\r\\n\\r\\n   ```bash\\r\\n   git checkout -b hotfix\\r\\n   ```\\r\\n\\r\\n3. \u4fee\u590d\u5b8c\u6210\u540e\uff0c\u63d0\u4ea4\u66f4\u6539\u3002\\r\\n\\r\\n4. \u5207\u6362\u56de `main` \u5206\u652f\u5e76\u5408\u5e76\u4fee\u590d\u5185\u5bb9\uff1a\\r\\n\\r\\n   ```bash\\r\\n   git checkout main\\r\\n   git merge hotfix\\r\\n   ```\\r\\n\\r\\n5. \u5220\u9664\u4e34\u65f6\u5206\u652f\uff08\u95ee\u9898\u5df2\u4fee\u590d\uff09\uff1a\\r\\n\\r\\n   ```bash\\r\\n   git branch -d hotfix\\r\\n   ```\\r\\n\\r\\n6. \u56de\u5230 `iss53` \u5206\u652f\u7ee7\u7eed\u5f00\u53d1\uff1a\\r\\n\\r\\n   ```bash\\r\\n   git switch iss53\\r\\n   ```\\r\\n\\r\\n---\\r\\n\\r\\n## \u5408\u5e76\u51b2\u7a81\u8bf4\u660e\u53ca\u89e3\u51b3\u65b9\u6cd5\\r\\n\\r\\n### \u26a0\ufe0f \u51b2\u7a81\u539f\u56e0\\r\\n\\r\\n\u5f53 `main` \u548c `iss53` \u5206\u652f**\u540c\u65f6\u4fee\u6539\u4e86\u540c\u4e00\u4e2a\u6587\u4ef6\u7684\u76f8\u540c\u90e8\u5206**\uff08\u4f8b\u5982 `README.md`\uff09\uff0cGit \u65e0\u6cd5\u5224\u65ad\u5e94\u8be5\u4fdd\u7559\u54ea\u8fb9\u7684\u5185\u5bb9\uff0c\u5c31\u4f1a\u63d0\u793a\u51b2\u7a81\u3002\\r\\n\\r\\n### \u793a\u4f8b\u573a\u666f\\r\\n\\r\\n- \u5728 `main` \u5206\u652f\u4e0b\u4fee\u6539\u4e86 `README.md` \u5e76\u63d0\u4ea4\uff1b\\r\\n- \u7136\u540e\u5207\u6362\u5230 `iss53` \u5206\u652f\uff0c\u5728\u6b64\u5206\u652f\u4e0b\u4e5f\u4fee\u6539\u4e86 `README.md` \u5e76\u63d0\u4ea4\uff1b\\r\\n- \u6700\u540e\u5207\u6362\u56de `main` \u5206\u652f\uff0c\u5c1d\u8bd5\u5408\u5e76 `iss53`\uff0c\u51fa\u73b0\u51b2\u7a81\u3002\\r\\n\\r\\n---\\r\\n\\r\\n### \ud83d\udd27 \u89e3\u51b3\u6b65\u9aa4\\r\\n\\r\\n1. \u6253\u5f00\u51b2\u7a81\u6587\u4ef6\uff08\u5982 `README.md`\uff09\uff0c\u4f60\u4f1a\u770b\u5230\u7c7b\u4f3c\u5982\u4e0b\u5185\u5bb9\uff1a\\r\\n\\r\\n   ```html\\r\\n   <<<<<<< HEAD\\r\\n   This is the content from main.\\r\\n   =======\\r\\n   This is the content from iss53.\\r\\n   >>>>>>> iss53\\r\\n   ```\\r\\n\\r\\n2. \u624b\u52a8\u7f16\u8f91\u6587\u4ef6\uff0c\u9009\u62e9\u4f60\u60f3\u8981\u4fdd\u7559\u7684\u5185\u5bb9\uff0c\u5220\u9664\u51b2\u7a81\u6807\u8bb0\u3002\\r\\n3. \u6dfb\u52a0\u4fee\u6539\u540e\u7684\u6587\u4ef6\u5230\u6682\u5b58\u533a\uff1a\\r\\n\\r\\n   ```bash\\r\\n   git add README.md\\r\\n   ```\\r\\n\\r\\n4. \u63d0\u4ea4\u5408\u5e76\u7ed3\u679c\uff1a\\r\\n\\r\\n   ```bash\\r\\n   git commit -m \\"Fixed conflict\\"\\r\\n   ```\\r\\n\\r\\n---\\r\\n\\r\\n### \ud83d\udca1 \u5982\u4f55\u907f\u514d\u51b2\u7a81\uff1f\\r\\n\\r\\n- **\u4fdd\u6301\u5206\u652f\u540c\u6b65**\uff1a\u5728\u4fee\u6539\u524d\u5148\u62c9\u53d6\u6700\u65b0\u4ee3\u7801\uff1b\\r\\n- **\u53ca\u65f6\u5408\u5e76\u5206\u652f**\uff1a\u907f\u514d\u4e24\u4e2a\u5206\u652f\u957f\u65f6\u95f4\u4e0d\u5408\u5e76\uff1b\\r\\n- **\u660e\u786e\u5206\u5de5**\uff1a\u56e2\u961f\u534f\u4f5c\u65f6\u5c3d\u91cf\u907f\u514d\u591a\u4eba\u4fee\u6539\u540c\u4e00\u6587\u4ef6\u7684\u5173\u952e\u533a\u57df\uff1b\\r\\n- **\u4f7f\u7528 Pull Request \u5ba1\u67e5\u673a\u5236**\uff1a\u63d0\u524d\u53d1\u73b0\u6f5c\u5728\u51b2\u7a81\u3002\\r\\n\\r\\n---\\r\\n\\r\\n## \u2705 \u5b9e\u9645\u6d4b\u8bd5\u8bf4\u660e\\r\\n\\r\\n\u8fd9\u662f\u4e00\u4e2a\u6d4b\u8bd5\u5185\u5bb9\uff0c\u5f53\u524d\u6587\u672c\u662f\u5728 `iss53` \u5206\u652f\u4e0b\u7f16\u5199\u5b8c\u6210\u7684\u3002\u4e4b\u524d\u5df2\u7ecf\u4e0e `main` \u5206\u652f\u5408\u5e76\u3002\\r\\n\\r\\n\u6309\u7167\u9884\u671f\uff0c\u5207\u6362\u56de `main` \u5206\u652f\u540e\uff0c\u518d\u5408\u5e76 `iss53` \u5206\u652f\u4e0d\u4f1a\u4ea7\u751f\u51b2\u7a81\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728 `main` \u5206\u652f\u4e0b\u4e5f\u80fd\u770b\u5230\u8fd9\u6bb5\u65b0\u589e\u5185\u5bb9\u3002"},{"id":"LeetCode88","metadata":{"permalink":"/blog/LeetCode88","editUrl":"https://github.com/EurekaShadow/EurekaShadow.github.io/tree/master/blog/2025-07-04-LeetCode88.mdx","source":"@site/blog/2025-07-04-LeetCode88.mdx","title":"\u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4","description":"\u529b\u6263\u9762\u8bd5\u7ecf\u5178\u2014\u201488\u9898","date":"2025-07-04T00:00:00.000Z","tags":[{"inline":false,"label":"\u6570\u7ec4","permalink":"/blog/tags/\u6570\u7ec4","description":"\u5173\u4e8e\u6570\u7ec4\u7684\u9898\u76ee"}],"readingTime":5.01,"hasTruncateMarker":true,"authors":[{"name":"Eureka X","title":"Mr.Nobody","url":"https://github.com/EurekaShadow","page":{"permalink":"/blog/authors/all-Eureka-X-articles"},"socials":{"github":"https://github.com/EurekaShadow"},"imageURL":"https://github.com/EurekaShadow.png","key":"eurekaX"}],"frontMatter":{"slug":"LeetCode88","title":"\u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4","authors":"eurekaX","tags":["\u6570\u7ec4"]},"unlisted":false,"lastUpdatedAt":1753794916000,"prevItem":{"title":"Git\u5b66\u4e60","permalink":"/blog/LearnGit"},"nextItem":{"title":"Blog1!","permalink":"/blog/Blog1"}},"content":"import { Highlight, Keyword, Light, B1, B2, B3, BH3, B3W, MyColor} from \'@site/src/components/ForMDX\';\\r\\n\\r\\n\\r\\n### <B2>[\u529b\u6263\u9762\u8bd5\u7ecf\u5178\u2014\u201488\u9898](https://leetcode.cn/problems/merge-sorted-array/?envType=study-plan-v2&envId=top-interview-150 \\"\u529b\u6263\\")</B2>\\r\\n\\r\\n\x3c!-- truncate --\x3e\\r\\n\\r\\n\u7ed9\u4f60\u4e24\u4e2a\u6309**\u975e\u9012\u51cf\u987a\u5e8f**\u6392\u5217\u7684\u6574\u6570\u6570\u7ec4 `nums1` \u548c `nums2`\uff0c\u53e6\u6709\u4e24\u4e2a\u6574\u6570 `m` \u548c `n`\uff0c\u5206\u522b\u8868\u793a `nums1` \u548c `nums2` \u4e2d\u7684\u5143\u7d20\u6570\u76ee\u3002\\r\\n\\r\\n\u8bf7\u4f60\u5408\u5e76 `nums2` \u5230 `nums1` \u4e2d\uff0c\u4f7f\u5408\u5e76\u540e\u7684\u6570\u7ec4\u540c\u6837\u6309**\u975e\u9012\u51cf\u987a\u5e8f**\u6392\u5217\u3002\\r\\n\\r\\n> \u26a0\ufe0f \u6ce8\u610f\uff1a\u6700\u7ec8\uff0c\u5408\u5e76\u540e\u6570\u7ec4\u4e0d\u5e94\u7531\u51fd\u6570\u8fd4\u56de\uff0c\u800c\u662f\u5b58\u50a8\u5728\u6570\u7ec4 `nums1` \u4e2d\u3002\u4e3a\u4e86\u5e94\u5bf9\u8fd9\u79cd\u60c5\u51b5\uff0c`nums1` \u7684\u521d\u59cb\u957f\u5ea6\u4e3a `m + n`\uff0c\u5176\u4e2d\u524d `m` \u4e2a\u5143\u7d20\u8868\u793a\u5e94\u5408\u5e76\u7684\u5143\u7d20\uff0c\u540e `n` \u4e2a\u5143\u7d20\u4e3a `0`\uff0c\u5e94\u5ffd\u7565\u3002`nums2` \u7684\u957f\u5ea6\u4e3a `n`\u3002\\r\\n\\r\\n---\\r\\n\\r\\n### \ud83e\uddea \u793a\u4f8b\u8bf4\u660e\\r\\n\\r\\n#### \u793a\u4f8b 1\uff1a\\r\\n> \u8f93\u5165\uff1a  \\r\\n> `nums1 = [1, 2, 3, 0, 0, 0]`, `m = 3`  \\r\\n> `nums2 = [2, 5, 6]`, `n = 3`  \\r\\n>\\r\\n> \u8f93\u51fa\uff1a  \\r\\n> `[1, 2, 2, 3, 5, 6]`  \\r\\n>\\r\\n> \u89e3\u91ca\uff1a\u9700\u8981\u5408\u5e76 `[1,2,3]` \u548c `[2,5,6]`\u3002  \\r\\n> \u5408\u5e76\u7ed3\u679c\u662f `[1, 2, 2, 3, 5, 6]`\uff0c\u5176\u4e2d\u659c\u4f53\u52a0\u7c97\u6807\u6ce8\u7684\u4e3a `nums1` \u4e2d\u7684\u539f\u59cb\u5143\u7d20\u3002\\r\\n\\r\\n#### \u793a\u4f8b 2\uff1a\\r\\n> \u8f93\u5165\uff1a  \\r\\n> `nums1 = [1]`, `m = 1`  \\r\\n> `nums2 = []`, `n = 0`  \\r\\n>\\r\\n> \u8f93\u51fa\uff1a  \\r\\n> `[1]`\\r\\n\\r\\n#### \u793a\u4f8b 3\uff1a\\r\\n> \u8f93\u5165\uff1a  \\r\\n> `nums1 = [0]`, `m = 0`  \\r\\n> `nums2 = [1]`, `n = 1`  \\r\\n>\\r\\n> \u8f93\u51fa\uff1a  \\r\\n> `[1]`  \\r\\n>\\r\\n> \u89e3\u91ca\uff1a\u56e0\u4e3a `m = 0`\uff0c\u6240\u4ee5 `nums1` \u4e2d\u6ca1\u6709\u6709\u6548\u5143\u7d20\u3002`0` \u53ea\u662f\u4e3a\u4e86\u786e\u4fdd\u5408\u5e76\u7ed3\u679c\u53ef\u4ee5\u987a\u5229\u5b58\u653e\u5230 `nums1` \u4e2d\u3002\\r\\n\\r\\n---\\r\\n\\r\\n### \ud83d\udd0d \u63d0\u793a\uff1a\\r\\n\\r\\n- `nums1.length == m + n`\\r\\n- `nums2.length == n`\\r\\n- `0 <= m, n <= 200`\\r\\n- `-10^9 <= nums1[i], nums2[j] <= 10^9`\\r\\n\\r\\n---\\r\\n\\r\\n### \ud83d\ude80 \u8fdb\u9636\u6311\u6218\uff1a\\r\\n\\r\\n\u4f60\u53ef\u4ee5\u8bbe\u8ba1\u5b9e\u73b0\u4e00\u4e2a\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a `O(m + n)` \u7684\u7b97\u6cd5\u89e3\u51b3\u6b64\u95ee\u9898\u5417\uff1f\\r\\n\\r\\n---\\r\\n\\r\\n### \ud83d\udca1 \u53c2\u8003\u4ee3\u7801\uff1a\\r\\n\\r\\n```c\\r\\n/**\\r\\n * \u5408\u5e76\u4e24\u4e2a\u5df2\u6392\u5e8f\u7684\u6570\u7ec4\\r\\n * \u5c06 nums2 \u5408\u5e76\u5230 nums1 \u4e2d\uff0c\u7ed3\u679c\u5b58\u50a8\u5728 nums1 \u5185\\r\\n * \\r\\n * @param nums1     \u76ee\u6807\u6570\u7ec4\uff0c\u9884\u5206\u914d\u4e86\u8db3\u591f\u7a7a\u95f4 (\u957f\u5ea6\u4e3a m+n)\\r\\n * @param nums1Size nums1 \u6570\u7ec4\u7684\u603b\u957f\u5ea6 (\u7b49\u4e8e m+n)\\r\\n * @param m         nums1 \u4e2d\u6709\u6548\u5143\u7d20\u7684\u4e2a\u6570\\r\\n * @param nums2     \u6e90\u6570\u7ec4\uff0c\u5305\u542b\u9700\u8981\u5408\u5e76\u7684\u5143\u7d20\\r\\n * @param nums2Size nums2 \u6570\u7ec4\u7684\u957f\u5ea6 (\u7b49\u4e8e n)\\r\\n * @param n         nums2 \u4e2d\u5143\u7d20\u7684\u4e2a\u6570\\r\\n */\\r\\nvoid merge(int* nums1, int nums1Size, int m, int* nums2, int nums2Size, int n) {\\r\\n    // \u521d\u59cb\u5316\u4e09\u4e2a\u6307\u9488\uff1ai\u6307\u5411nums1\u6709\u6548\u5143\u7d20\u672b\u5c3e\uff0cj\u6307\u5411nums2\u672b\u5c3e\uff0ck\u6307\u5411\u5408\u5e76\u7ed3\u679c\u672b\u5c3e\\r\\n    int i = m - 1;      // nums1\u6709\u6548\u5143\u7d20\u7684\u6700\u540e\u4e00\u4e2a\u7d22\u5f15\\r\\n    int j = n - 1;      // nums2\u7684\u6700\u540e\u4e00\u4e2a\u7d22\u5f15\\r\\n    int k = m + n - 1;  // \u5408\u5e76\u540e\u6570\u7ec4\u7684\u6700\u540e\u4e00\u4e2a\u7d22\u5f15\\r\\n    \\r\\n    // \u4ece\u540e\u5f80\u524d\u6bd4\u8f83\u4e24\u4e2a\u6570\u7ec4\u7684\u5143\u7d20\uff0c\u5c06\u8f83\u5927\u8005\u653e\u5230nums1\u7684\u672b\u5c3e\\r\\n    while (i >= 0 && j >= 0) {\\r\\n        if (nums1[i] > nums2[j]) {\\r\\n            nums1[k--] = nums1[i--];  // nums1[i]\u8f83\u5927\uff0c\u5c06\u5176\u653e\u5230\u4f4d\u7f6ek\\r\\n        } else {\\r\\n            nums1[k--] = nums2[j--];  // nums2[j]\u8f83\u5927\u6216\u76f8\u7b49\uff0c\u5c06\u5176\u653e\u5230\u4f4d\u7f6ek\\r\\n        }\\r\\n    }\\r\\n    \\r\\n    // \u5982\u679cnums2\u4e2d\u8fd8\u6709\u5269\u4f59\u5143\u7d20\uff0c\u590d\u5236\u5230nums1\u4e2d\\r\\n    // \u6ce8\u610f\uff1a\u5982\u679cnums1\u6709\u5269\u4f59\u5143\u7d20(i>=0)\uff0c\u5b83\u4eec\u5df2\u7ecf\u5728\u6b63\u786e\u4f4d\u7f6e\uff0c\u65e0\u9700\u79fb\u52a8\\r\\n    while (j >= 0) {\\r\\n        nums1[k--] = nums2[j--];\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n### \ud83d\udcd6 \u603b\u7ed3\uff1a\\r\\n\\r\\n<details>\\r\\n<summary>\u70b9\u51fb\u5c55\u5f00\u9898\u76ee\u603b\u7ed3</summary>\\r\\n# \ud83e\udd14 \u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4\\r\\n\\r\\n---\\r\\n\\r\\n## 1\ufe0f\u20e3 \u9898\u76ee\u6838\u5fc3\u4fe1\u606f\\r\\n\\r\\n\ud83c\udfaf **\u529f\u80fd\u63cf\u8ff0**\uff1a\u5c06\u4e24\u4e2a\u5df2\u6392\u5e8f\u7684\u6570\u7ec4\u5408\u5e76\u6210\u4e00\u4e2a\u6709\u5e8f\u6570\u7ec4\uff0c\u7ed3\u679c\u5b58\u50a8\u5728\u7b2c\u4e00\u4e2a\u6570\u7ec4\u4e2d\\r\\n\\r\\n\ud83d\udce5 **\u8f93\u5165\u8f93\u51fa**\uff1a\\r\\n- **\u8f93\u5165**\uff1a\u4e24\u4e2a\u5df2\u6392\u5e8f\u6570\u7ec4 `nums1` \u548c `nums2`\uff0c\u4ee5\u53ca\u5b83\u4eec\u7684\u6709\u6548\u5143\u7d20\u4e2a\u6570 `m` \u548c `n`\\r\\n- **\u8f93\u51fa**\uff1a\u65e0\u8fd4\u56de\u503c\uff0c\u5408\u5e76\u7ed3\u679c\u76f4\u63a5\u5b58\u50a8\u5728 `nums1` \u4e2d\\r\\n\\r\\n---\\r\\n\\r\\n## 2\ufe0f\u20e3 \u5b9e\u73b0\u539f\u7406\\r\\n\\r\\n\ud83d\udca1 **\u6838\u5fc3\u601d\u8def**\uff1a\u91c7\u7528\u4ece\u540e\u5f80\u524d\u7684\u53cc\u6307\u9488\u6280\u672f\uff0c\u907f\u514d\u8986\u76d6\u672a\u5904\u7406\u7684\u6570\u636e\\r\\n\\r\\n\ud83d\udccb **\u5b9e\u73b0\u6b65\u9aa4**\uff1a\\r\\n1. \u8bbe\u7f6e\u4e09\u4e2a\u6307\u9488\u5206\u522b\u6307\u5411\u4e24\u4e2a\u6570\u7ec4\u6709\u6548\u5143\u7d20\u672b\u5c3e\u548c\u5408\u5e76\u7ed3\u679c\u672b\u5c3e\\r\\n2. \u4ece\u540e\u5f80\u524d\u6bd4\u8f83\u4e24\u4e2a\u6570\u7ec4\u7684\u5143\u7d20\uff0c\u5c06\u8f83\u5927\u8005\u653e\u5230\u5408\u5e76\u4f4d\u7f6e\\r\\n3. \u5904\u7406\u5269\u4f59\u672a\u5408\u5e76\u7684\u5143\u7d20\\r\\n\\r\\n---\\r\\n\\r\\n## 3\ufe0f\u20e3 \u5173\u952e\u70b9\u89e3\u6790\\r\\n\\r\\n### \ud83d\udd01 \u4e3a\u4ec0\u4e48\u9700\u8981\u4e24\u4e2a\u5faa\u73af\\r\\n\\r\\n\u7b2c\u4e00\u4e2a\u5faa\u73af\u4f1a\u5728**\u4efb\u610f\u4e00\u4e2a\u6570\u7ec4\u5904\u7406\u5b8c**\u65f6\u505c\u6b62\uff0c\u4f46\u53e6\u4e00\u4e2a\u6570\u7ec4\u53ef\u80fd\u8fd8\u6709\u5269\u4f59\u5143\u7d20\u9700\u8981\u5904\u7406\u3002\\r\\n\\r\\n#### \ud83d\udccc \u5177\u4f53\u4f8b\u5b50\\r\\n\\r\\n`nums1 = [4,5,6,0,0,0] (m=3) nums2 = [1,2,3] (n=3)`\\r\\n\\r\\n\\r\\n\ud83d\udd04 **\u6267\u884c\u8fc7\u7a0b**\uff1a\\r\\n1. \u6bd4\u8f83 6 \u548c 3 \u2192 nums1[5] = 6\\r\\n2. \u6bd4\u8f83 5 \u548c 3 \u2192 nums1[4] = 5  \\r\\n3. \u6bd4\u8f83 4 \u548c 3 \u2192 nums1[3] = 4\\r\\n\\r\\n\u6b64\u65f6\u7b2c\u4e00\u4e2a\u5faa\u73af\u7ed3\u675f\uff0c\u4f46nums2\u4e2d[1,2,3]\u8fd8\u6ca1\u6709\u88ab\u5904\u7406\u3002\\r\\n\\r\\n#### \u26a1 \u5173\u952e\u7406\u89e3\\r\\n\\r\\n\u5f53\u7b2c\u4e00\u4e2a\u5faa\u73af\u7ed3\u675f\u65f6\uff0c\u6709\u4e24\u79cd\u53ef\u80fd\u60c5\u51b5\uff1a\\r\\n- **i < 0 \u4f46 j >= 0**\uff1anums1\u5904\u7406\u5b8c\u4e86\uff0c\u4f46nums2\u8fd8\u6709\u5269\u4f59\u5143\u7d20\u9700\u8981\u590d\u5236\\r\\n- **j < 0 \u4f46 i >= 0**\uff1anums2\u5904\u7406\u5b8c\u4e86\uff0c\u4f46nums1\u8fd8\u6709\u5269\u4f59\u5143\u7d20\\r\\n\\r\\n\u5bf9\u4e8e\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff0cnums1\u7684\u5269\u4f59\u5143\u7d20**\u5df2\u7ecf\u5904\u4e8e\u6b63\u786e\u4f4d\u7f6e**\uff0c\u65e0\u9700\u79fb\u52a8\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u989d\u5916\u5904\u7406\u3002\\r\\n\\r\\n\u56e0\u6b64\u9700\u8981\u7b2c\u4e8c\u4e2a\u5faa\u73af\u6765\u5904\u7406nums2\u7684\u5269\u4f59\u5143\u7d20\u3002\\r\\n\\r\\n### \ud83c\udfaf \u4ee3\u7801\u6280\u5de7\\r\\n- \u4ece\u540e\u5f80\u524d\u904d\u5386\u907f\u514d\u4e86\u8986\u76d6 `nums1` \u4e2d\u672a\u5904\u7406\u7684\u5143\u7d20\\r\\n- \u53ea\u9700\u5904\u7406 `nums2` \u7684\u5269\u4f59\u5143\u7d20\uff0c\u56e0\u4e3a `nums1` \u7684\u5269\u4f59\u5143\u7d20\u5df2\u5728\u6b63\u786e\u4f4d\u7f6e\\r\\n- \u4f7f\u7528 `--` \u64cd\u4f5c\u7b26\u5728\u8d4b\u503c\u7684\u540c\u65f6\u79fb\u52a8\u6307\u9488\uff0c\u4ee3\u7801\u66f4\u7b80\u6d01\\r\\n\\r\\n---\\r\\n\\r\\n## 4\ufe0f\u20e3 \u4f7f\u7528\u573a\u666f\\r\\n\\r\\n\u2705 **\u9002\u7528\u60c5\u51b5**\uff1a\\r\\n- \u9700\u8981\u5408\u5e76\u4e24\u4e2a\u5df2\u6392\u5e8f\u7684\u6570\u7ec4\\r\\n- \u5e0c\u671b\u5728\u539f\u5730\u8fdb\u884c\u5408\u5e76\u64cd\u4f5c\u4ee5\u8282\u7701\u7a7a\u95f4\\r\\n- \u5904\u7406\u6570\u7ec4\u76f8\u5173\u7684\u5f52\u5e76\u6392\u5e8f\u95ee\u9898\\r\\n\\r\\n\u26a0\ufe0f **\u524d\u63d0\u6761\u4ef6**\uff1a\\r\\n- `nums1` \u5fc5\u987b\u6709\u8db3\u591f\u7a7a\u95f4\u5bb9\u7eb3\u5408\u5e76\u7ed3\u679c\uff08\u81f3\u5c11 `m+n` \u4e2a\u5143\u7d20\uff09\\r\\n- \u4e24\u4e2a\u8f93\u5165\u6570\u7ec4\u90fd\u5df2\u6309\u975e\u9012\u51cf\u987a\u5e8f\u6392\u5e8f\\r\\n\\r\\n---\\r\\n\\r\\n## 5\ufe0f\u20e3 \u590d\u6742\u5ea6\u5206\u6790\\r\\n\\r\\n\u23f1\ufe0f **\u65f6\u95f4\u590d\u6742\u5ea6**\uff1aO(m + n)\uff0c\u6bcf\u4e2a\u5143\u7d20\u6700\u591a\u88ab\u8bbf\u95ee\u4e00\u6b21\\r\\n\\r\\n\ud83d\udcbe **\u7a7a\u95f4\u590d\u6742\u5ea6**\uff1aO(1)\uff0c\u53ea\u4f7f\u7528\u4e86\u5e38\u6570\u4e2a\u989d\u5916\u53d8\u91cf\\r\\n\\r\\n---\\r\\n\\r\\n## 6\ufe0f\u20e3 \u6ce8\u610f\u4e8b\u9879\\r\\n\\r\\n\ud83d\udea9 **\u8fb9\u754c\u60c5\u51b5**\uff1a\\r\\n- `m = 0`\uff1a`nums1` \u4e3a\u7a7a\u6570\u7ec4\\r\\n- `n = 0`\uff1a`nums2` \u4e3a\u7a7a\u6570\u7ec4\\r\\n- \u5176\u4e2d\u4e00\u4e2a\u6570\u7ec4\u7684\u6240\u6709\u5143\u7d20\u90fd\u6bd4\u53e6\u4e00\u4e2a\u6570\u7ec4\u5c0f\\r\\n\\r\\n\ud83d\udca5 **\u6613\u9519\u70b9**\uff1a\\r\\n- \u5fd8\u8bb0\u5904\u7406\u5269\u4f59\u5143\u7d20\uff0c\u7279\u522b\u662f\u7b2c\u4e8c\u4e2a\u5faa\u73af\\r\\n- \u6307\u9488\u8fb9\u754c\u6761\u4ef6\u5224\u65ad\u9519\u8bef\\r\\n- \u4ece\u524d\u5f80\u540e\u5408\u5e76\u5bfc\u81f4\u6570\u636e\u88ab\u8986\u76d6\\r\\n\\r\\n\\r\\n</details>"},{"id":"Blog1","metadata":{"permalink":"/blog/Blog1","editUrl":"https://github.com/EurekaShadow/EurekaShadow.github.io/tree/master/blog/2025-06-23-Blog1.md","source":"@site/blog/2025-06-23-Blog1.md","title":"Blog1!","description":"\u5173\u4e8e\u56fe\u6807\u7684\u66ff\u6362","date":"2025-06-23T00:00:00.000Z","tags":[{"inline":false,"label":"Recording","permalink":"/blog/tags/recording","description":"\u5728Recording\u6807\u7b7e\u4e0b\u7684\u535a\u5ba2\u4e3b\u8981\u4e3a\u5b66\u4e60\u8bb0\u5f55"}],"readingTime":0.16,"hasTruncateMarker":true,"authors":[{"name":"Eureka X","title":"Mr.Nobody","url":"https://github.com/EurekaShadow","page":{"permalink":"/blog/authors/all-Eureka-X-articles"},"socials":{"github":"https://github.com/EurekaShadow"},"imageURL":"https://github.com/EurekaShadow.png","key":"eurekaX"}],"frontMatter":{"slug":"Blog1","title":"Blog1!","authors":"eurekaX","tags":["recording"]},"unlisted":false,"lastUpdatedAt":1751811536000,"prevItem":{"title":"\u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4","permalink":"/blog/LeetCode88"},"nextItem":{"title":"Greetings!","permalink":"/blog/greetings"}},"content":"**\u5173\u4e8e\u56fe\u6807\u7684\u66ff\u6362**\\r\\n\\r\\n\x3c!-- truncate --\x3e\\r\\n\u603b\u7ed3\uff1a\\r\\n\u5b57\u6bb5\\t\u542b\u4e49\\r\\nslug\\t\u9875\u9762\u7684\u81ea\u5b9a\u4e49 URL \u8def\u5f84\\r\\ntitle\\t\u9875\u9762\u663e\u793a\u7684\u6807\u9898\\r\\nauthors\\t\u4f5c\u8005\u540d\\r\\ntags\\t\u6587\u7ae0\u6807\u7b7e\uff0c\u7528\u4e8e\u5206\u7c7b"},{"id":"greetings","metadata":{"permalink":"/blog/greetings","editUrl":"https://github.com/EurekaShadow/EurekaShadow.github.io/tree/master/blog/2025-06-05-greetings.md","source":"@site/blog/2025-06-05-greetings.md","title":"Greetings!","description":"Congratulations, you have made your first post!","date":"2025-06-05T00:00:00.000Z","tags":[{"inline":false,"label":"Greetings","permalink":"/blog/tags/greetings","description":"greetings tag description"}],"readingTime":0.19,"hasTruncateMarker":true,"authors":[{"name":"Eureka X","title":"Mr.Nobody","url":"https://github.com/EurekaShadow","page":{"permalink":"/blog/authors/all-Eureka-X-articles"},"socials":{"github":"https://github.com/EurekaShadow"},"imageURL":"https://github.com/EurekaShadow.png","key":"eurekaX"}],"frontMatter":{"slug":"greetings","title":"Greetings!","authors":"eurekaX","tags":["greetings"]},"unlisted":false,"lastUpdatedAt":1750758918000,"prevItem":{"title":"Blog1!","permalink":"/blog/Blog1"},"nextItem":{"title":"TEST!","permalink":"/blog/TEST"}},"content":"Congratulations, you have made your first post!\\r\\n\\r\\nFeel free to play around and edit this post as much as you like.AAAA\\r\\n\\r\\n**I MADE MY FIRST BLOG POST!!!**\\r\\n\\r\\n\x3c!-- truncate --\x3e\\r\\n\\r\\n\u8fd9\u662f\u540e\u7eed\u5185\u5bb9\uff1a\\r\\n\\r\\n* \u54c8\u54c8\u54c8\\r\\n* \u8212\u9002\\r\\n* \u53cd\u590d"},{"id":"TEST","metadata":{"permalink":"/blog/TEST","editUrl":"https://github.com/EurekaShadow/EurekaShadow.github.io/tree/master/blog/2025-06-05-TEST.md","source":"@site/blog/2025-06-05-TEST.md","title":"TEST!","description":"This is the summary of a very long blog post,","date":"2025-06-05T00:00:00.000Z","tags":[{"inline":false,"label":"Greetings","permalink":"/blog/tags/greetings","description":"greetings tag description"}],"readingTime":0.21,"hasTruncateMarker":true,"authors":[{"name":"Eureka X","title":"Mr.Nobody","url":"https://github.com/EurekaShadow","page":{"permalink":"/blog/authors/all-Eureka-X-articles"},"socials":{"github":"https://github.com/EurekaShadow"},"imageURL":"https://github.com/EurekaShadow.png","key":"eurekaX"}],"frontMatter":{"slug":"TEST","title":"TEST!","authors":"eurekaX","tags":["greetings"]},"unlisted":false,"lastUpdatedAt":1750758918000,"prevItem":{"title":"Greetings!","permalink":"/blog/greetings"}},"content":"This is the summary of a very long blog post,\\r\\n\\r\\nUse a `\x3c!--` `truncate` `--\x3e` comment to limit blog post size in the list view.\\r\\n\\r\\n\x3c!-- truncate --\x3e\\r\\n\\r\\n**TEST**\\r\\n\\r\\n\u63d2\u5165`\x3c!--` `truncate` `--\x3e`\uff0c\u8868\u793a`\x3c!--` `truncate` `--\x3e`\u4ee5\u4e0a\u7684\u5185\u5bb9\u4e3a\u9884\u89c8\uff0c`\x3c!--` `truncate` `--\x3e`\u4e00\u4e0b\u7684\u5185\u5bb9\u4e3a\u5b8c\u6574\u5185\u5bb9\u3002"}]}}')}}]);