"use strict";(self.webpackChunktest_site=self.webpackChunktest_site||[]).push([[7588],{589:(e,n,r)=>{r.d(n,{A:()=>o});r(6540);var t=r(900),i=r(7487),s=r.n(i),l=r(8478),a=r(4848);function o({src:e,alt:n,isCenter:r=!1,isBoxed:i=!1}){return(0,a.jsx)(l.A,{children:()=>{const l={width:"100%",maxWidth:"700px",height:"auto",cursor:"zoom-in",objectFit:"cover",borderRadius:"8px",boxShadow:"0 0 15px rgba(0,0,0,0.1)",transition:"transform 300ms ease, box-shadow 300ms ease"},o=r?(0,a.jsx)("center",{children:(0,a.jsx)(s(),{src:e,alt:n,style:l})}):(0,a.jsx)(s(),{src:e,alt:n,style:l}),c=(0,a.jsx)("div",{style:{display:"inline-block",padding:"10px",margin:"10px 0",borderRadius:"10px",border:"3px solid var(--card-img-border-color)",backgroundColor:"#f9fbfc",boxShadow:"0 0 10px rgba(0, 0, 0, 0.1)",transition:"all 300ms ease",cursor:"pointer"},onMouseEnter:e=>{e.currentTarget.style.transform="scale(1.02)",e.currentTarget.style.boxShadow="0 0 16px rgba(0, 0, 0, 0.2)",e.currentTarget.style.borderColor="var(--card-img-hover-border-color)"},onMouseLeave:e=>{e.currentTarget.style.transform="scale(1)",e.currentTarget.style.boxShadow="0 0 10px rgba(0, 0, 0, 0.1)",e.currentTarget.style.borderColor="var(--card-img-border-color)"},children:(0,a.jsx)(t.wy,{maskOpacity:.6,speed:()=>500,children:(0,a.jsx)(t.A8,{src:e,alt:n,children:o})})});return(0,a.jsx)("div",{style:{textAlign:"center",margin:"20px 0"},children:i?c:(0,a.jsx)(t.wy,{maskOpacity:.6,speed:()=>500,children:(0,a.jsx)(t.A8,{src:e,alt:n,children:o})})})}})}},1470:(e,n,r)=>{r.d(n,{A:()=>y});var t=r(6540),i=r(4164),s=r(3104),l=r(6347),a=r(205),o=r(7485),c=r(1682),d=r(679);function h(e){return t.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:n,children:r}=e;return(0,t.useMemo)((()=>{const e=n??function(e){return h(e).map((({props:{value:e,label:n,attributes:r,default:t}})=>({value:e,label:n,attributes:r,default:t})))}(r);return function(e){const n=(0,c.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,r])}function g({value:e,tabValues:n}){return n.some((n=>n.value===e))}function p({queryString:e=!1,groupId:n}){const r=(0,l.W6)(),i=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,o.aZ)(i),(0,t.useCallback)((e=>{if(!i)return;const n=new URLSearchParams(r.location.search);n.set(i,e),r.replace({...r.location,search:n.toString()})}),[i,r])]}function x(e){const{defaultValue:n,queryString:r=!1,groupId:i}=e,s=u(e),[l,o]=(0,t.useState)((()=>function({defaultValue:e,tabValues:n}){if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!g({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const r=n.find((e=>e.default))??n[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:s}))),[c,h]=p({queryString:r,groupId:i}),[x,m]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[r,i]=(0,d.Dv)(n);return[r,(0,t.useCallback)((e=>{n&&i.set(e)}),[n,i])]}({groupId:i}),j=(()=>{const e=c??x;return g({value:e,tabValues:s})?e:null})();(0,a.A)((()=>{j&&o(j)}),[j]);return{selectedValue:l,selectValue:(0,t.useCallback)((e=>{if(!g({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);o(e),h(e),m(e)}),[h,m,s]),tabValues:s}}var m=r(2303);const j={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var f=r(4848);function b({className:e,block:n,selectedValue:r,selectValue:t,tabValues:l}){const a=[],{blockElementScrollPositionUntilNextRender:o}=(0,s.a_)(),c=e=>{const n=e.currentTarget,i=a.indexOf(n),s=l[i].value;s!==r&&(o(n),t(s))},d=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const r=a.indexOf(e.currentTarget)+1;n=a[r]??a[0];break}case"ArrowLeft":{const r=a.indexOf(e.currentTarget)-1;n=a[r]??a[a.length-1];break}}n?.focus()};return(0,f.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":n},e),children:l.map((({value:e,label:n,attributes:t})=>(0,f.jsx)("li",{role:"tab",tabIndex:r===e?0:-1,"aria-selected":r===e,ref:e=>{a.push(e)},onKeyDown:d,onClick:c,...t,className:(0,i.A)("tabs__item",j.tabItem,t?.className,{"tabs__item--active":r===e}),children:n??e},e)))})}function A({lazy:e,children:n,selectedValue:r}){const s=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=s.find((e=>e.props.value===r));return e?(0,t.cloneElement)(e,{className:(0,i.A)("margin-top--md",e.props.className)}):null}return(0,f.jsx)("div",{className:"margin-top--md",children:s.map(((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==r})))})}function w(e){const n=x(e);return(0,f.jsxs)("div",{className:(0,i.A)("tabs-container",j.tabList),children:[(0,f.jsx)(b,{...n,...e}),(0,f.jsx)(A,{...n,...e})]})}function y(e){const n=(0,m.A)();return(0,f.jsx)(w,{...e,children:h(e.children)},String(n))}},1647:e=>{e.exports=JSON.parse('{"permalink":"/en/blog/Algolia","editUrl":"https://github.com/EurekaShadow/EurekaShadow.github.io/tree/master/blog/2025-08-27-Algolia.mdx","source":"@site/i18n/en/docusaurus-plugin-content-blog/2025-08-27-Algolia.mdx","title":"Add Algolia Search Functionality to Docusaurus","description":"This article introduces how to add search functionality to a Docusaurus website using Algolia.","date":"2025-08-27T00:00:00.000Z","tags":[{"inline":false,"label":"Algolia","permalink":"/en/blog/tags/Algolia","description":"\u5173\u4e8e Algolia \u641c\u7d22\u7684\u914d\u7f6e"},{"inline":false,"label":"Search","permalink":"/en/blog/tags/Search","description":"\u5173\u4e8e Search \u529f\u80fd\u7684\u914d\u7f6e"},{"inline":false,"label":"\u641c\u7d22","permalink":"/en/blog/tags/\u641c\u7d22","description":"\u5173\u4e8e \u641c\u7d22 \u529f\u80fd\u7684\u914d\u7f6e"}],"readingTime":8.93,"hasTruncateMarker":true,"authors":[{"name":"Eureka X","title":"Mr.Nobody","url":"https://github.com/EurekaShadow","page":{"permalink":"/en/blog/authors/all-Eureka-X-articles"},"socials":{"github":"https://github.com/EurekaShadow"},"imageURL":"https://github.com/EurekaShadow.png","key":"eurekaX"}],"frontMatter":{"slug":"Algolia","title":"Add Algolia Search Functionality to Docusaurus","authors":"eurekaX","tags":["Algolia","Search","\u641c\u7d22"]},"unlisted":false,"lastUpdatedAt":1757492098000,"prevItem":{"title":"\u87ba\u65cb\u77e9\u9635","permalink":"/en/blog/LeetCode54"},"nextItem":{"title":"\u56fd\u9645\u5316","permalink":"/en/blog/i18n"}}')},1873:(e,n,r)=>{r.d(n,{B1:()=>c,B2:()=>d,B3:()=>h,$u:()=>g,kp:()=>u,$n:()=>x,Zp:()=>p,f4:()=>a,io:()=>o,yL:()=>l});var t=r(6540);const i={B1:"B1_h0KH",B2:"B2_JnYG",B3:"B3_QTSf",BH3:"BH3_qHt0",InlineHighlight:"InlineHighlight_qz1L",Card:"Card_HgCT",button:"button_j0cx",icon:"icon_zC6Q",spinner:"spinner_xW5N",spin:"spin_YzkE"};r(8478);var s=r(4848);const l={docusaurusGreen:"#25c2a0",facebookBlue:"#1877F2",yellow:"#ffff50",green:"#6abe30",red:"#f03c46",white:"white",black:"black",qing:"#f0f5fa",Purple:"#5c62d5",Pink:"#F2BBE0",Blue:"#87CEFA"};function a({children:e,bgColor:n=l.yellow,fontColor:r=l.black}){return(0,s.jsx)("span",{style:{backgroundColor:n,borderRadius:"4px",color:r,padding:"0.2rem",display:"inline-block"},children:e})}function o({children:e}){return(0,s.jsx)("span",{className:i.InlineHighlight,style:{padding:"0.2rem",margin:"0.4rem 0.4rem"},children:e})}function c({children:e}){return(0,s.jsx)("span",{className:i.B1,children:e})}function d({children:e}){return(0,s.jsx)("span",{className:i.B2,children:e})}function h({children:e}){return(0,s.jsx)("span",{className:i.B3,children:e})}function u({children:e}){return(0,s.jsx)("span",{className:i.BH3,style:{padding:"0.2rem",marginRight:"0.5rem"},children:e})}function g({children:e}){return(0,s.jsx)("span",{style:{borderRadius:"4px",color:l.docusaurusGreen,padding:"0.2rem"},children:e})}const p=({children:e})=>(0,s.jsx)("div",{className:i.Card,children:e}),x=({icon:e,href:n,children:r,color:l="#F2BBE0",textColor:a="white",size:o="medium",loading:c=!1,disabled:d=!1})=>{const h=(0,t.useMemo)((()=>({small:"0.3rem 1rem",medium:"0.5rem 1.5rem",large:"0.7rem 2rem"})),[]),u=(0,t.useMemo)((()=>({backgroundColor:l,color:a,padding:h[o]})),[l,a,h,o]),g=n?"a":"button",p={...n?{href:n,target:"_blank",rel:"noopener noreferrer"}:{}};return(0,s.jsxs)(g,{className:i.button,style:u,...p,..."button"===g?{disabled:d||c}:{},children:[e&&(0,s.jsx)("span",{className:i.icon,children:e}),(0,s.jsx)("span",{children:r}),c&&(0,s.jsx)("span",{className:i.spinner,children:"\u23f3"})]})}},8278:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>g,frontMatter:()=>o,metadata:()=>t,toc:()=>h});var t=r(1647),i=r(4848),s=r(8453),l=r(1873),a=r(589);r(1470),r(9365);const o={slug:"Algolia",title:"Add Algolia Search Functionality to Docusaurus",authors:"eurekaX",tags:["Algolia","Search","\u641c\u7d22"]},c=void 0,d={authorsImageUrls:[void 0]},h=[{value:"<B2>Algolia Configuration Tutorial \ud83d\udd0e</B2>",id:"-algolia-configuration-tutorial-",level:2},{value:"Obtain the Algolia API",id:"obtain-the-algolia-api",level:2},{value:"API Name Correlation",id:"api-name-correlation",level:3},{value:"Register an Algolia account",id:"register-an-algolia-account",level:3},{value:"Obtain API",id:"obtain-api",level:3},{value:"Create Actions Secrets",id:"create-actions-secrets",level:2},{value:"Create a Github Actions workflow",id:"create-a-github-actions-workflow",level:2},{value:"Create docsearch.json",id:"create-docsearchjson",level:2},{value:"Configure docusaurus.config.js",id:"configure-docusaurusconfigjs",level:2},{value:"Website Deployment",id:"website-deployment",level:2},{value:"Manually trigger the workflow to retrieve information",id:"manually-trigger-the-workflow-to-retrieve-information",level:2},{value:"View Algolia Records",id:"view-algolia-records",level:2},{value:"Deploy the website to GitPages",id:"deploy-the-website-to-gitpages",level:2},{value:"Result",id:"result",level:2},{value:"\ud83d\udcda References",id:"-references",level:2}];function u(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components},{Details:r}=n;return r||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"This article introduces how to add search functionality to a Docusaurus website using Algolia."}),"\n",(0,i.jsx)(n.h2,{id:"-algolia-configuration-tutorial-",children:(0,i.jsx)(l.B2,{children:" Algolia Configuration Tutorial \ud83d\udd0e"})}),"\n",(0,i.jsxs)(n.p,{children:["I referred to this ",(0,i.jsx)(n.a,{href:"https://www.alanwang.site/posts/blog-guides/docusaurus-search#%E5%88%9B%E5%BB%BA-algolia-%E8%B4%A6%E5%8F%B7",children:"article"})," to add a search function to my website. However, during the implementation process, I encountered some problems and the original article's explanation was not detailed enough. Therefore, I decided to write a more detailed blog to record the entire configuration process."]}),"\n",(0,i.jsx)(n.h2,{id:"obtain-the-algolia-api",children:"Obtain the Algolia API"}),"\n",(0,i.jsxs)(n.p,{children:["The objective of this section is to obtain these three ",(0,i.jsx)(n.code,{children:"APIs"})," of ",(0,i.jsx)(n.code,{children:"Algolia"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"1. Application ID\r\n2. Search API Key\r\n3. Admin API Key\n"})}),"\n",(0,i.jsx)(n.h3,{id:"api-name-correlation",children:"API Name Correlation"}),"\n",(0,i.jsxs)(n.p,{children:["The names of the APIs in ",(0,i.jsx)(n.code,{children:"Algolia"})," do not ",(0,i.jsx)(n.strong,{children:"exactly match"})," those in the code. The corresponding relationship is as follows:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",metastring:'title="docusaurus.config.js"',children:"Application ID -> appId\r\nSearch API Key -> apiKey\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",metastring:'title="Actions secrets"',children:"Application ID -> ALGOLIA_APP_ID\r\nAdmin API Key -> ALGOLIA_API_KEY\n"})}),"\n",(0,i.jsx)(n.h3,{id:"register-an-algolia-account",children:"Register an Algolia account"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Open ",(0,i.jsx)(n.a,{href:"https://www.algolia.com/",title:"Algolia",children:"Algolia's official website"}),", use your Github account to register and log in"]}),"\n"]}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)(a.A,{src:"/img/Blog/Algolia1.jpg",alt:"Algolia1",isCenter:!0,isBoxed:!0})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsxs)(n.li,{children:["Click on ",(0,i.jsx)(n.code,{children:"Not now..."})," to skip the initial setup."]}),"\n"]}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)(a.A,{src:"/img/Blog/Algolia2.jpg",alt:"Algolia2",isCenter:!0,isBoxed:!0})}),"\n",(0,i.jsx)(n.h3,{id:"obtain-api",children:"Obtain API"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Open the ",(0,i.jsx)(n.code,{children:"Settings"})," configuration page"]}),"\n"]}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)(a.A,{src:"/img/Blog/Algolia3.jpg",alt:"Algolia3",isCenter:!0,isBoxed:!0})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsx)(n.li,{children:"View API Key"}),"\n"]}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)(a.A,{src:"/img/Blog/Algolia4.jpg",alt:"Algolia4",isCenter:!0,isBoxed:!0})}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)(a.A,{src:"/img/Blog/Algolia5.jpg",alt:"Algolia5",isCenter:!0,isBoxed:!0})}),"\n",(0,i.jsxs)(n.p,{children:["The above three ",(0,i.jsx)(n.code,{children:"API"}),"s are exactly what we need. This page can remain open for your convenience in copying and pasting later. At this point, the three ",(0,i.jsx)(n.code,{children:"API"}),"s should have been successfully obtained."]}),"\n",(0,i.jsx)(n.admonition,{title:"Important Reminder",type:"danger",children:(0,i.jsxs)(n.p,{children:["Do not share the ",(0,i.jsx)(n.strong,{children:"Admin API Key!"})," This is sensitive information and its leakage may lead to security issues!"]})}),"\n",(0,i.jsxs)(r,{children:[(0,i.jsx)("summary",{children:"Only two APIs were found?"}),(0,i.jsxs)(n.p,{children:["If when viewing the ",(0,i.jsx)(n.code,{children:"API"}),", you notice that there are only ",(0,i.jsx)(n.strong,{children:"two"})," APIs, namely ",(0,i.jsx)(n.code,{children:"Application ID"})," and ",(0,i.jsx)(n.code,{children:"Search API Key"}),", but no ",(0,i.jsx)(n.code,{children:"Admin API Key"}),"? \uff01 This indicates that you did not follow this ",(0,i.jsx)(n.a,{href:"./Algolia#register-an-algolia-account",children:"step"})," precisely. What you see now is the default Application ",(0,i.jsx)(n.code,{children:"Docsearch"})," created by ",(0,i.jsx)(n.code,{children:"Algolia"}),". This Application currently does not have a key. (Following the official tutorial step by step should result in one, but I haven't tried it. \ud83d\ude31) The solution is to create another Application here: ",(0,i.jsx)(n.code,{children:"Settings/API Keys"})]}),(0,i.jsx)("p",{children:(0,i.jsx)(a.A,{src:"/img/Blog/Algolia26.jpg",alt:"Algolia26",isCenter:!0,isBoxed:!0})}),(0,i.jsxs)(n.p,{children:["After filling in the name, keep the other configurations as default. Simply click ",(0,i.jsx)(n.code,{children:"Next:Review & Confirm"})," -> ",(0,i.jsx)(n.code,{children:"Create Application"}),". The ",(0,i.jsx)(n.code,{children:"API"})," acquisition method for the new Application is the same as above."]})]}),"\n",(0,i.jsx)(n.h2,{id:"create-actions-secrets",children:"Create Actions Secrets"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Open the Github repository where the website project code is stored, and go to: ",(0,i.jsx)(n.code,{children:"Settings/Secrets and variables/Actions"}),"."]}),"\n"]}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)(a.A,{src:"/img/Blog/Algolia8.jpg",alt:"Algolia8",isCenter:!0,isBoxed:!0})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsxs)(n.li,{children:["Return to the Algolia page and copy the ",(0,i.jsx)(n.code,{children:"Application ID"}),":"]}),"\n"]}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)(a.A,{src:"/img/Blog/Algolia9.jpg",alt:"Algolia9",isCenter:!0,isBoxed:!0})}),"\n",(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsxs)(n.li,{children:["Return to the Github page, enter the name ",(0,i.jsx)(n.code,{children:"ALGOLIA_APP_ID"}),", paste the secret key, and click ",(0,i.jsx)(n.code,{children:"Add secret"}),"."]}),"\n"]}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)(a.A,{src:"/img/Blog/Algolia11.jpg",alt:"Algolia10",isCenter:!0,isBoxed:!0})}),"\n",(0,i.jsxs)(n.ol,{start:"4",children:["\n",(0,i.jsx)(n.li,{children:'Return to the Algolia page and copy the "Admin API Key":'}),"\n"]}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)(a.A,{src:"/img/Blog/Algolia12.jpg",alt:"Algolia11",isCenter:!0,isBoxed:!0})}),"\n",(0,i.jsxs)(n.ol,{start:"5",children:["\n",(0,i.jsxs)(n.li,{children:["Return to the Github page, enter the name ",(0,i.jsx)(n.code,{children:"ALGOLIA_API_KEY"}),", paste the secret key, and click ",(0,i.jsx)(n.code,{children:"Add secret"}),"."]}),"\n"]}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)(a.A,{src:"/img/Blog/Algolia13.jpg",alt:"Algolia12",isCenter:!0,isBoxed:!0})}),"\n",(0,i.jsxs)(n.ol,{start:"6",children:["\n",(0,i.jsx)(n.li,{children:"Expected Outcome:"}),"\n"]}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)(a.A,{src:"/img/Blog/Algolia14.jpg",alt:"Algolia14",isCenter:!0,isBoxed:!0})}),"\n",(0,i.jsx)(n.h2,{id:"create-a-github-actions-workflow",children:"Create a Github Actions workflow"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["You can create a file named ",(0,i.jsx)(n.code,{children:".github/workflows/docsearch.yml"})," in the root directory of your local project:"]}),"\n"]}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)(a.A,{src:"/img/Blog/Algolia6.jpg",alt:"Algolia6",isCenter:!0,isBoxed:!0})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yml",metastring:'title=".github/workflows/docsearch.yml"',children:'name: DocSearch Scraper\r\n\r\n# Define the triggering conditions for the workflow\r\non:\r\n  # Allow manual triggering of the workflow\r\n  workflow_dispatch:\r\n  # Automatic operation (UTC time)\r\n  schedule:\r\n    - cron: \'0 0 * * *\'\r\n\r\n# Define workflow tasks\r\njobs:\r\n  algolia:\r\n    # Operation Environment\r\n    runs-on: ubuntu-latest\r\n    steps:\r\n      # Check out the code repository\r\n      - uses: actions/checkout@v3\r\n\r\n      # Install the jq tool for handling JSON.\r\n      - name: Install jq\r\n        run: sudo apt-get install jq\r\n\r\n      # Verify the existence of the configuration file\r\n      - name: Validate docsearch.json exists\r\n        run: |\r\n          if [ ! -f "docsearch.json" ]; then\r\n            echo "docsearch.json not found!"\r\n            exit 1\r\n          fi\r\n\r\n      # Read and set the Algolia configuration\r\n      - name: Get the content of docsearch.json as config\r\n        id: algolia_config\r\n        run: echo "config=$(cat docsearch.json | jq -r tostring)" >> $GITHUB_OUTPUT\r\n\r\n      # Run the DocSearch crawler\r\n      - name: Run algolia/docsearch-scraper image\r\n        env:\r\n          # Obtain the Algolia credentials from secrets\r\n          ALGOLIA_APP_ID: ${{ secrets.ALGOLIA_APP_ID }}\r\n          ALGOLIA_API_KEY: ${{ secrets.ALGOLIA_API_KEY }}\r\n          CONFIG: ${{ steps.algolia_config.outputs.config }}\r\n        run: |\r\n          echo "Starting DocSearch scraper..."\r\n          docker run \\\r\n            --env APPLICATION_ID=${ALGOLIA_APP_ID} \\\r\n            --env API_KEY=${ALGOLIA_API_KEY} \\\r\n            --env "CONFIG=${CONFIG}" \\\r\n            algolia/docsearch-scraper\r\n          echo "DocSearch scraper completed successfully."\n'})}),"\n",(0,i.jsxs)(n.p,{children:["If you want to configure it so that this workflow is triggered ",(0,i.jsx)(n.strong,{children:"after deployment"}),", you can refer to this ",(0,i.jsx)(n.a,{href:"https://www.alanwang.site/posts/blog-guides/docusaurus-search#%E5%88%9B%E5%BB%BA-github-actions",children:"article"}),". However, I think manual and scheduled triggering are already sufficient, so I did not try other triggering methods."]}),"\n",(0,i.jsx)(n.h2,{id:"create-docsearchjson",children:"Create docsearch.json"}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)(a.A,{src:"/img/Blog/Algolia15.jpg",alt:"Algolia15",isCenter:!0,isBoxed:!0})}),"\n",(0,i.jsxs)(n.p,{children:["The highlighted yellow part below needs to be customized with your own settings. ",(0,i.jsx)(n.code,{children:"index_name"})," can be customized, but it must be consistent with the subsequent ",(0,i.jsx)(n.code,{children:"docusaurus.config.js"})," configuration. ",(0,i.jsx)(n.code,{children:"start_urls"})," and ",(0,i.jsx)(n.code,{children:"sitemap_urls"})," should be changed to your own links."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",metastring:'title="docsearch.json"',children:'{\r\n   // highlight-start\r\n  "index_name": "test-site",\r\n  "start_urls": ["https://www.eurekashadow.xin/"],\r\n  "sitemap_urls": ["https://www.eurekashadow.xin/sitemap.xml"],\r\n  // highlight-end\r\n  // highlight-add-start\r\n  "js_render": true,\r\n  "js_wait": 1,\r\n  // highlight-add-end\r\n  "selectors": {\r\n    "lvl0": {\r\n      "selector": "(//ul[contains(@class,\'menu__list\')]//a[contains(@class, \'menu__link menu__link--sublist menu__link--active\')]/text() | //nav[contains(@class, \'navbar\')]//a[contains(@class, \'navbar__link--active\')]/text())[last()]",\r\n      "type": "xpath",\r\n      "global": true,\r\n      "default_value": "Documentation"\r\n    },\r\n    "lvl1": "header h1, article h1",\r\n    "lvl2": "article h2",\r\n    "lvl3": "article h3",\r\n    "lvl4": "article h4",\r\n    "lvl5": "article h5, article td:first-child",\r\n    "lvl6": "article h6",\r\n    "text": "article p, article li, article td:last-child"\r\n  },\r\n  "custom_settings": {\r\n    "attributesForFaceting": ["type", "lang", "language", "version", "docusaurus_tag"],\r\n    "attributesToRetrieve": ["hierarchy", "content", "anchor", "url", "url_without_anchor", "type"],\r\n    "attributesToHighlight": ["hierarchy", "content"],\r\n    "attributesToSnippet": ["content:10"],\r\n    "camelCaseAttributes": ["hierarchy", "content"],\r\n    "searchableAttributes": [\r\n      "unordered(hierarchy.lvl0)",\r\n      "unordered(hierarchy.lvl1)",\r\n      "unordered(hierarchy.lvl2)",\r\n      "unordered(hierarchy.lvl3)",\r\n      "unordered(hierarchy.lvl4)",\r\n      "unordered(hierarchy.lvl5)",\r\n      "unordered(hierarchy.lvl6)",\r\n      "content"\r\n    ],\r\n    "distinct": true,\r\n    "attributeForDistinct": "url",\r\n    "customRanking": ["desc(weight.pageRank)", "desc(weight.level)", "asc(weight.position)"],\r\n    "ranking": ["words", "filters", "typo", "attribute", "proximity", "exact", "custom"],\r\n    "highlightPreTag": "<span class=\'algolia-docsearch-suggestion--highlight\'>",\r\n    "highlightPostTag": "</span>",\r\n    "minWordSizefor1Typo": 3,\r\n    "minWordSizefor2Typos": 7,\r\n    "allowTyposOnNumericTokens": false,\r\n    "minProximity": 1,\r\n    "ignorePlurals": true,\r\n    "advancedSyntax": true,\r\n    "attributeCriteriaComputedByMinProximity": true,\r\n    "removeWordsIfNoResults": "allOptional",\r\n    "separatorsToIndex": "_",\r\n    "synonyms": [\r\n      ["js", "javascript"],\r\n      ["ts", "typescript"]\r\n    ]\r\n  }\r\n}\n'})}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["Note: The two lines marked in green (",(0,i.jsx)(n.code,{children:"js_render"})," and ",(0,i.jsx)(n.code,{children:"js_wait"}),") are ",(0,i.jsx)(n.strong,{children:"extremely important"}),". Without these two lines, Algolia may only be able to crawl the data of the homepage. When clicking F12 on pages other than the homepage, you may find a 404 page, but the webpage can still be displayed normally at this time. This inconsistent display with the source code makes it impossible to crawl the complete data. By adding these two lines to indicate that crawling should be done after the rendering is completed, all data can be normally obtained."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"configure-docusaurusconfigjs",children:"Configure docusaurus.config.js"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Position illustration:"}),"\n"]}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)(a.A,{src:"/img/Blog/Algolia16.jpg",alt:"Algolia16",isCenter:!0,isBoxed:!0})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsx)(n.li,{children:"New code:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",metastring:'title="docusaurus.config.js"',children:"//Add Algolia search\r\nalgolia: {\r\n    // Application ID\r\n    appId: '********',\r\n    //  Search API Key\r\n    apiKey: '*******************',\r\n    indexName: 'test-site',//Consistent with the index_name in docsearch.json\r\n    searchPagePath: 'search',\r\n    contextualSearch: true\r\n    },\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"./Algolia#api-name-correlation",children:"Don't remember the correspondence between the names?"})}),"\n",(0,i.jsx)(n.h2,{id:"website-deployment",children:"Website Deployment"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Push the code to the remote repository using ",(0,i.jsx)(n.code,{children:"git push"}),"."]}),"\n"]}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)(a.A,{src:"/img/Blog/Algolia18.jpg",alt:"Algolia18",isCenter:!0,isBoxed:!0})}),"\n",(0,i.jsx)(n.h2,{id:"manually-trigger-the-workflow-to-retrieve-information",children:"Manually trigger the workflow to retrieve information"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:'After the deployment on Vercel has been completed, go back to the GitHub repository, click on Actions, select "Docsearch scraper", and then click "Run workflow". This will trigger the workflow, which will crawl the website information and generate an index file for subsequent Algolia search.'}),"\n"]}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)(a.A,{src:"/img/Blog/Algolia19.jpg",alt:"Algolia19",isCenter:!0,isBoxed:!0})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Operation completed:"}),"\n"]}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)(a.A,{src:"/img/Blog/Algolia20.jpg",alt:"Algolia20",isCenter:!0,isBoxed:!0})}),"\n",(0,i.jsx)(n.h2,{id:"view-algolia-records",children:"View Algolia Records"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Click on ",(0,i.jsx)(n.code,{children:"Data Source"})]}),"\n"]}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)(a.A,{src:"/img/Blog/Algolia21.jpg",alt:"Algolia21",isCenter:!0,isBoxed:!0})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsxs)(n.li,{children:["Click on ",(0,i.jsx)(n.code,{children:"indices"}),", as shown in the following figure, it can be seen that the index file has been generated. Under the index ",(0,i.jsx)(n.code,{children:"test-site"}),", a total of ",(0,i.jsx)(n.code,{children:"134"})," records were found. The number of these records depends on the website content. If the content is extensive, the number of records will also be large. This is just a demonstration of the website, and there are only ",(0,i.jsx)(n.code,{children:"134"})," records. Normal index records may have thousands or even tens of thousands."]}),"\n"]}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["Note that the configuration is considered successful only when there are matching records here with the content of your website. If the website content is extensive and the resulting records here are only a few, it clearly indicates that something has gone wrong somewhere. It might be that the two lines ",(0,i.jsx)(n.a,{href:"./Algolia#create-docsearchjson",children:"here"})," were not added?"]}),"\n"]}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)(a.A,{src:"/img/Blog/Algolia22.jpg",alt:"Algolia22",isCenter:!0,isBoxed:!0})}),"\n",(0,i.jsx)(n.h2,{id:"deploy-the-website-to-gitpages",children:"Deploy the website to GitPages"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"In fact, you can view the results locally. The purpose of deploying and then checking is to further confirm whether the results are correct. After all, sometimes everything runs fine locally, but when deployed to GitPages, problems arise. (This is referring to you! i18n, the annoying flashing issue still hasn't been resolved... \ud83d\ude14)"}),"\n"]}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)(a.A,{src:"/img/Blog/Algolia23.jpg",alt:"Algolia23",isCenter:!0,isBoxed:!0})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Deployment completed:"}),"\n"]}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)(a.A,{src:"/img/Blog/Algolia24.jpg",alt:"Algolia24",isCenter:!0,isBoxed:!0})}),"\n",(0,i.jsx)(n.h2,{id:"result",children:"Result"}),"\n",(0,i.jsx)(n.p,{children:"Mission accomplished! Now the website can use the search function! \ud83c\udf89"}),"\n",(0,i.jsx)("p",{children:(0,i.jsx)(a.A,{src:"/img/Gif/gif-example.gif",alt:"AlgoliaResult",isCenter:!0,isBoxed:!0})}),"\n",(0,i.jsx)(n.p,{children:"This process was quite complicated. Thanks to the following references, without his article as a reference, I'm afraid I wouldn't have been able to complete this search function. But even with the references, it wasn't achieved overnight. To realize this search function, I spent a lot of time and took many detours. I hope this summary can be helpful to those who come across it (maybe even myself in the future? \ud83d\ude25)"}),"\n",(0,i.jsx)(n.h2,{id:"-references",children:"\ud83d\udcda References"}),"\n",(0,i.jsxs)(n.p,{children:["[1]. ",(0,i.jsx)(n.a,{href:"https://www.alanwang.site/posts/blog-guides/docusaurus-search",title:"Study",children:"AlanWang's Blog"})]})]})}function g(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},9365:(e,n,r)=>{r.d(n,{A:()=>l});r(6540);var t=r(4164);const i={tabItem:"tabItem_Ymn6"};var s=r(4848);function l({children:e,hidden:n,className:r}){return(0,s.jsx)("div",{role:"tabpanel",className:(0,t.A)(i.tabItem,r),hidden:n,children:e})}}}]);